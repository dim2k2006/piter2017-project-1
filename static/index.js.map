{"version":3,"sources":["node_modules/browser-pack/_prelude.js","index.js","node_modules/tippy.js/dist/tippy.js","src/blocks/form/form.js","src/blocks/formTooltip/formTooltip.js","src/blocks/formValidation/formValidation.js","src/js/main.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length","1","module","global","factory","define","amd","tippy","this","hideAllPoppers","exclude","Store","forEach","refData","popper","tippyInstance","_refData$settings","settings","appendTo","hideOnClick","trigger","contains","isHideOnClick","indexOf","isNotCurrentRef","hide","closest","element","parentSelector","_closest","Element","prototype","selector","el","matches","parentElement","find","arr","checkFn","Array","filter","bindEventListeners","touchHandler","Browser","touch","iOS","document","body","classList","add","dynamicInputDetection","window","performance","addEventListener","mousemoveHandler","time","now","removeEventListener","remove","clickHandler","event","target","Selectors","TOOLTIPPED_EL","POPPER","ref","interactive","_ref","_ref$settings","multiple","CONTROLLER","querySelector","blurHandler","_document","activeElement","blur","SUPPORTS_TOUCH","navigator","maxTouchPoints","msMaxTouchPoints","init","done","Defaults","queueExecution","fn","requestAnimationFrame","setTimeout","prefix","property","prefixes","upperProp","charAt","toUpperCase","slice","_prefix","prefixedProp","style","findIndex","removeTitle","title","getAttribute","setAttribute","removeAttribute","elementIsInViewport","rect","getBoundingClientRect","top","left","bottom","innerHeight","documentElement","clientHeight","right","innerWidth","clientWidth","triggerReflow","tooltip","circle","getComputedStyle","opacity","modifyClassList","els","callback","applyTransitionDuration","duration","isContent","CONTENT","_duration","Math","round","isVisible","visibility","noop","getCorePlacement","placement","replace","followCursorHandler","_this","offset","position","halfPopperWidth","offsetWidth","halfPopperHeight","offsetHeight","viewportPadding","pageWidth","pageX","pageY","x","y","isRightOverflowing","isLeftOverflowing","getArrayOfElements","isArray","querySelectorAll","onTransitionEnd","TOOLTIP","transitionendFired","listenerCallback","clearTimeout","_transitionendTimeout","microtaskDebounce","scheduled","elem","createElement","observer","MutationObserver","observe","attributes","taskDebounce","timeoutDuration","isFunction","functionToCheck","getType","toString","getStyleComputedProperty","nodeType","css","getParentNode","nodeName","parentNode","host","getScrollParent","_getStyleComputedProp","overflow","overflowX","overflowY","test","getOffsetParent","offsetParent","isOffsetContainer","firstElementChild","getRoot","node","findCommonOffsetParent","element1","element2","order","compareDocumentPosition","Node","DOCUMENT_POSITION_FOLLOWING","start","end","range","createRange","setStart","setEnd","commonAncestorContainer","element1root","getScroll","side","arguments","undefined","upperSide","html","scrollingElement","includeScroll","subtract","scrollTop","scrollLeft","modifier","getBordersSize","styles","axis","sideA","sideB","split","getSize","computedStyle","max","isIE10$1","getWindowSizes","height","width","getClientRect","offsets","_extends","err","result","sizes","horizScrollbar","vertScrollbar","getOffsetRectRelativeToArbitraryNode","children","parent","isIE10","isHTML","childrenRect","parentRect","scrollParent","borderTopWidth","borderLeftWidth","marginTop","marginLeft","getViewportOffsetRectRelativeToArtbitraryNode","relativeOffset","isFixed","getBoundaries","reference","padding","boundariesElement","boundaries","boundariesNode","_getWindowSizes","getArea","computeAutoPlacement","refRect","rects","sortedAreas","Object","keys","map","key","area","sort","b","filteredAreas","_ref2","computedPlacement","variation","getReferenceOffsets","state","commonOffsetParent","getOuterSizes","parseFloat","marginBottom","marginRight","getOppositePlacement","hash","matched","getPopperOffsets","referenceOffsets","popperRect","popperOffsets","isHoriz","mainSide","secondarySide","measurement","secondaryMeasurement","find$1","check","findIndex$1","prop","value","cur","match","obj","runModifiers","modifiers","data","ends","modifiersToRun","console","warn","enabled","update","isDestroyed","instance","flipped","options","flip","originalPlacement","isCreated","onUpdate","onCreate","isModifierEnabled","modifierName","some","name","getSupportedPropertyName","toCheck","destroy","disableEventListeners","removeOnDestroy","removeChild","attachToScrollParents","scrollParents","isBody","passive","push","setupEventListeners","updateBound","scrollElement","eventsEnabled","enableEventListeners","scheduleUpdate","removeEventListeners","cancelAnimationFrame","isNumeric","isNaN","isFinite","setStyles","unit","setAttributes","applyStyle","arrow","arrowElement","applyStyleOnLoad","modifierOptions","computeStyle","legacyGpuAccelerationOption","gpuAcceleration","offsetParentRect","floor","prefixedProperty","willChange","invertTop","invertLeft","x-placement","isModifierRequired","requestingName","requestedName","requesting","isRequired","_requesting","requested","_data$offsets","isVertical","len","altSide","opSide","arrowElementSize","center","sideValue","min","getOppositeVariation","clockwise","counter","index","validPlacements","concat","reverse","placementOpposite","flipOrder","behavior","BEHAVIORS","FLIP","CLOCKWISE","COUNTERCLOCKWISE","step","refOffsets","overlapsRef","overflowsLeft","overflowsRight","overflowsTop","overflowsBottom","overflowsBoundaries","flippedVariation","flipVariations","keepTogether","toValue","str","size","parseOffset","basePlacement","useHeight","fragments","frag","trim","divider","search","splitRegex","ops","op","mergeWithPrevious","reduce","index2","preventOverflow","priority","primary","escapeWithReference","defineProperty","secondary","shift","shiftvariation","shiftOffsets","bound","inner","subtractLength","getOffsetDistanceInPx","distance","createPopperInstance","popperOptions","flipDuration","config","_extends$1","Popper","mountPopper","followCursor","appendChild","popperInstance","childList","subtree","characterData","_mutationObserver","makeSticky","stickyDuration","removeTransitionDuration","updatePosition","getIndividualSettings","instanceSettings","DefaultsKeys","acc","val","toLowerCase","JSON","parse","createPopperElement","id","animateFill","inertia","animation","arrowSize","theme","zIndex","_arrow","content","templateId","innerHTML","getElementById","createTrigger","handlers","touchHold","listeners","handleTrigger","handler","handleMouseleave","handleBlur","cursorIsOutsideInteractiveBorder","clientX","clientY","interactiveBorder","corePosition","borderWithDistance","exceeds","getEventListenerHandlers","delay","showDelay","touchWait","hideDelay","clearTimeouts","_show","_delay","show","callbacks","wait","mouseenterTouch","type","isClick","isNotPersistent","click","handleMousemove","triggerHide","closestTooltippedEl","isOverPopper","isOverEl","isClickTriggered","isOverOtherTooltippedEl","relatedTarget","createTooltips","idCounter","tippy$2","Tippy","SUPPORTED","userAgent","MSStream","CIRCLE","ARROW","sticky","dynamicTitle","matchesSelector","webkitMatchesSelector","mozMatchesSelector","msMatchesSelector","ownerDocument","item","nativeHints","isNative","hint","isBrowser","longerTimeoutBrowsers","supportsNativeMutationObserver","debounce","appVersion","classCallCheck","Constructor","TypeError","createClass","defineProperties","props","descriptor","enumerable","configurable","writable","protoProps","staticProps","assign","source","hasOwnProperty","placements","onLoad","Defaults$1","bind","jquery","Utils","PopperUtils","classCallCheck$1","createClass$1","destroyed","onShow","shown","onShown","onHide","hidden","onHidden","store","apply","error","customDuration","list","_onShownFired","focus","_this2","_refData$settings2","_isLast","_this3","listener","disconnect","splice","_this4","storeLength","disableDynamicInputDetection","enableDynamicInputDetection","self","2","_interopRequireDefault","__esModule","default","_classCallCheck","_createClass","_formValidation","_formValidation2","_formTooltip","_formTooltip2","Form","_setupListeners","_validate","_getData","_setData","_submit","_request","_success","_error","_progress","_toggleLoading","_resetResult","_resetForm","_getFormSettings","_resetErrors","_setErrors","form","submitBtn","resultContainer","rules","fio","fullName","email","phone","domains","phoneSumLimit","fieldsFilter","formValidation","formTooltip","validate","getData","setData","submit","preventDefault","inputs","input","inputName","isValid","errorFields","url","log","req","fetch","then","blob","json","method","status","text","textContent","reason","timeout","toggle","reset","action","errorInputs","fieldNames","fieldName","field","../formTooltip/formTooltip","../formValidation/formValidation","3","_tippy","_tippy2","FormTooltip","tooltips","tippy.js","4","FormValidation","_checkOptions","_fullName","_email","_phone","methods","idx","lastIndexOf","domain","sumLimit","digits","sum","number","parseInt","validationResult","fieldRules","rule","5","_form","_form2","MyForm","../blocks/form/form"],"mappings":"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","file":"index.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n(function (global){\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n\ttypeof define === 'function' && define.amd ? define(factory) :\n\t(global.tippy = factory());\n}(this, (function () { 'use strict';\n\nvar Browser = {};\n\nif (typeof window !== 'undefined') {\n  Browser.SUPPORTED = 'requestAnimationFrame' in window;\n  Browser.SUPPORTS_TOUCH = 'ontouchstart' in window;\n  Browser.touch = false;\n  Browser.dynamicInputDetection = true;\n  // Chrome device/touch emulation can make this dynamic\n  Browser.iOS = function () {\n    return (/iPhone|iPad|iPod/.test(navigator.userAgent) && !window.MSStream\n    );\n  };\n}\n\n/**\n* The global storage array which holds all data reference objects\n* from every instance\n* This allows us to hide tooltips from all instances, finding the ref when\n* clicking on the body, and for followCursor\n*/\nvar Store = [];\n\n/**\n* Selector constants used for grabbing elements\n*/\nvar Selectors = {\n  POPPER: '.tippy-popper',\n  TOOLTIP: '.tippy-tooltip',\n  CONTENT: '.tippy-tooltip-content',\n  CIRCLE: '[x-circle]',\n  ARROW: '[x-arrow]',\n  TOOLTIPPED_EL: '[data-tooltipped]',\n  CONTROLLER: '[data-tippy-controller]'\n};\n\n/**\n* The default settings applied to each instance\n*/\nvar Defaults = {\n  html: false,\n  position: 'top',\n  animation: 'shift',\n  animateFill: true,\n  arrow: false,\n  arrowSize: 'regular',\n  delay: 0,\n  trigger: 'mouseenter focus',\n  duration: 350,\n  interactive: false,\n  interactiveBorder: 2,\n  theme: 'dark',\n  size: 'regular',\n  distance: 10,\n  offset: 0,\n  hideOnClick: true,\n  multiple: false,\n  followCursor: false,\n  inertia: false,\n  flipDuration: 350,\n  sticky: false,\n  stickyDuration: 200,\n  appendTo: null,\n  zIndex: 9999,\n  touchHold: false,\n  performance: false,\n  dynamicTitle: false,\n  popperOptions: {}\n};\n\n/**\n* The keys of the defaults object for reducing down into a new object\n* Used in `getIndividualSettings()`\n*/\nvar DefaultsKeys = Browser.SUPPORTED && Object.keys(Defaults);\n\n/**\n* Hides all poppers\n* @param {Object} exclude - refData to exclude if needed\n*/\nfunction hideAllPoppers(exclude) {\n  Store.forEach(function (refData) {\n    var popper = refData.popper,\n        tippyInstance = refData.tippyInstance,\n        _refData$settings = refData.settings,\n        appendTo = _refData$settings.appendTo,\n        hideOnClick = _refData$settings.hideOnClick,\n        trigger = _refData$settings.trigger;\n\n    // Don't hide already hidden ones\n\n    if (!appendTo.contains(popper)) return;\n\n    // hideOnClick can have the truthy value of 'persistent', so strict check is needed\n    var isHideOnClick = hideOnClick === true || trigger.indexOf('focus') !== -1;\n    var isNotCurrentRef = !exclude || popper !== exclude.popper;\n\n    if (isHideOnClick && isNotCurrentRef) {\n      tippyInstance.hide(popper);\n    }\n  });\n}\n\nvar e = Element.prototype;\nvar matches = e.matches || e.matchesSelector || e.webkitMatchesSelector || e.mozMatchesSelector || e.msMatchesSelector || function (s) {\n    var matches = (this.document || this.ownerDocument).querySelectorAll(s),\n        i = matches.length;\n    while (--i >= 0 && matches.item(i) !== this) {}\n    return i > -1;\n};\n\n/**\n* Ponyfill to get the closest parent element\n* @param {Element} element - child of parent to be returned\n* @param {String} parentSelector - selector to match the parent if found\n* @return {Element}\n*/\nfunction closest(element, parentSelector) {\n  var _closest = Element.prototype.closest || function (selector) {\n    var el = this;\n    while (el) {\n      if (matches.call(el, selector)) {\n        return el;\n      }\n      el = el.parentElement;\n    }\n  };\n\n  return _closest.call(element, parentSelector);\n}\n\n/**\n* Ponyfill for Array.prototype.find\n* @param {Array} arr\n* @param {Function} checkFn\n* @return item in the array\n*/\nfunction find(arr, checkFn) {\n  if (Array.prototype.find) {\n    return arr.find(checkFn);\n  }\n\n  // use `filter` as fallback\n  return arr.filter(checkFn)[0];\n}\n\n/**\n* Adds the needed event listeners\n*/\nfunction bindEventListeners() {\n  var touchHandler = function touchHandler() {\n    Browser.touch = true;\n\n    if (Browser.iOS()) {\n      document.body.classList.add('tippy-touch');\n    }\n\n    if (Browser.dynamicInputDetection && window.performance) {\n      document.addEventListener('mousemove', mousemoveHandler);\n    }\n  };\n\n  var mousemoveHandler = function () {\n    var time = void 0;\n\n    return function () {\n      var now = performance.now();\n\n      // Chrome 60+ is 1 mousemove per rAF, use 20ms time difference\n      if (now - time < 20) {\n        Browser.touch = false;\n        document.removeEventListener('mousemove', mousemoveHandler);\n        if (!Browser.iOS()) {\n          document.body.classList.remove('tippy-touch');\n        }\n      }\n\n      time = now;\n    };\n  }();\n\n  var clickHandler = function clickHandler(event) {\n    // Simulated events dispatched on the document\n    if (!(event.target instanceof Element)) {\n      return hideAllPoppers();\n    }\n\n    var el = closest(event.target, Selectors.TOOLTIPPED_EL);\n    var popper = closest(event.target, Selectors.POPPER);\n\n    if (popper) {\n      var ref = find(Store, function (ref) {\n        return ref.popper === popper;\n      });\n      var interactive = ref.settings.interactive;\n\n      if (interactive) return;\n    }\n\n    if (el) {\n      var _ref = find(Store, function (ref) {\n        return ref.el === el;\n      });\n      var _ref$settings = _ref.settings,\n          hideOnClick = _ref$settings.hideOnClick,\n          multiple = _ref$settings.multiple,\n          trigger = _ref$settings.trigger;\n\n      // Hide all poppers except the one belonging to the element that was clicked IF\n      // `multiple` is false AND they are a touch user, OR\n      // `multiple` is false AND it's triggered by a click\n\n      if (!multiple && Browser.touch || !multiple && trigger.indexOf('click') !== -1) {\n        return hideAllPoppers(_ref);\n      }\n\n      // If hideOnClick is not strictly true or triggered by a click don't hide poppers\n      if (hideOnClick !== true || trigger.indexOf('click') !== -1) return;\n    }\n\n    // Don't trigger a hide for tippy controllers, and don't needlessly run loop\n    if (closest(event.target, Selectors.CONTROLLER) || !document.querySelector(Selectors.POPPER)) return;\n\n    hideAllPoppers();\n  };\n\n  var blurHandler = function blurHandler(event) {\n    var _document = document,\n        el = _document.activeElement;\n\n    if (el && el.blur && matches.call(el, Selectors.TOOLTIPPED_EL)) {\n      el.blur();\n    }\n  };\n\n  // Hook events\n  document.addEventListener('click', clickHandler);\n  document.addEventListener('touchstart', touchHandler);\n  window.addEventListener('blur', blurHandler);\n\n  if (!Browser.SUPPORTS_TOUCH && (navigator.maxTouchPoints > 0 || navigator.msMaxTouchPoints > 0)) {\n    document.addEventListener('pointerdown', touchHandler);\n  }\n}\n\n/**\n* To run a single time, once DOM is presumed to be ready\n* @return {Boolean} whether the function has run or not\n*/\nfunction init() {\n  if (init.done) return false;\n  init.done = true;\n\n  // If the script is in <head>, document.body is null, so it's set in the\n  // init function\n  Defaults.appendTo = document.body;\n\n  bindEventListeners();\n\n  return true;\n}\n\n/**\n* Waits until next repaint to execute a fn\n* @return {Function}\n*/\nfunction queueExecution(fn) {\n  window.requestAnimationFrame(function () {\n    setTimeout(fn, 0);\n  });\n}\n\n/**\n* Returns the supported prefixed property - only `webkit` is needed, `moz`, `ms` and `o` are obsolete\n* @param {String} property\n* @return {String} - browser supported prefixed property\n*/\nfunction prefix(property) {\n  var prefixes = [false, 'webkit'];\n  var upperProp = property.charAt(0).toUpperCase() + property.slice(1);\n\n  for (var i = 0; i < prefixes.length; i++) {\n    var _prefix = prefixes[i];\n    var prefixedProp = _prefix ? '' + _prefix + upperProp : property;\n    if (typeof window.document.body.style[prefixedProp] !== 'undefined') {\n      return prefixedProp;\n    }\n  }\n\n  return null;\n}\n\n/**\n* Ponyfill for Array.prototype.findIndex\n* @param {Array} arr\n* @param {Function} checkFn\n* @return index of the item in the array\n*/\nfunction findIndex(arr, checkFn) {\n  if (Array.prototype.findIndex) {\n    return arr.findIndex(checkFn);\n  }\n\n  // fallback\n  return arr.indexOf(find(arr, checkFn));\n}\n\n/**\n* Removes the title from the tooltipped element\n* @param {Element} el\n*/\nfunction removeTitle(el) {\n  var title = el.getAttribute('title');\n  el.setAttribute('data-original-title', title || 'html');\n  el.removeAttribute('title');\n}\n\n/**\n* Determines if an element is visible in the viewport\n* @param {Element} el\n* @return {Boolean}\n*/\nfunction elementIsInViewport(el) {\n  var rect = el.getBoundingClientRect();\n\n  return rect.top >= 0 && rect.left >= 0 && rect.bottom <= (window.innerHeight || document.documentElement.clientHeight) && rect.right <= (window.innerWidth || document.documentElement.clientWidth);\n}\n\n/**\n* Triggers a document repaint or reflow for CSS transition\n* @param {Element} tooltip\n* @param {Element} circle\n*/\nfunction triggerReflow(tooltip, circle) {\n  // Safari needs the specific 'transform' property to be accessed\n  circle ? window.getComputedStyle(circle)[prefix('transform')] : window.getComputedStyle(tooltip).opacity;\n}\n\n/**\n* Modifies elements' class lists\n* @param {Element[]} els - Array of elements\n* @param {Function} callback\n*/\nfunction modifyClassList(els, callback) {\n  els.forEach(function (el) {\n    if (!el) return;\n    callback(el.classList);\n  });\n}\n\n/**\n* Applies the transition duration to each element\n* @param {Element[]} els - Array of elements\n* @param {Number} duration\n*/\nfunction applyTransitionDuration(els, duration) {\n  els.forEach(function (el) {\n    if (!el) return;\n\n    var isContent = matches.call(el, Selectors.CONTENT);\n\n    var _duration = isContent ? Math.round(duration / 1.3) : duration;\n\n    el.style[prefix('transitionDuration')] = _duration + 'ms';\n  });\n}\n\n/**\n* Determines if a popper is currently visible\n* @param {Element} popper\n* @return {Boolean}\n*/\nfunction isVisible(popper) {\n  return popper.style.visibility === 'visible';\n}\n\nfunction noop() {}\n\n/**\n* Returns the non-shifted placement (e.g., 'bottom-start' => 'bottom')\n* @param {String} placement\n* @return {String}\n*/\nfunction getCorePlacement(placement) {\n  return placement.replace(/-.+/, '');\n}\n\n/**\n* Mousemove event listener callback method for follow cursor setting\n* @param {MouseEvent} e\n*/\nfunction followCursorHandler(e) {\n  var _this = this;\n\n  var refData = find(Store, function (refData) {\n    return refData.el === _this;\n  });\n\n  var popper = refData.popper,\n      offset = refData.settings.offset;\n\n\n  var position = getCorePlacement(popper.getAttribute('x-placement'));\n  var halfPopperWidth = Math.round(popper.offsetWidth / 2);\n  var halfPopperHeight = Math.round(popper.offsetHeight / 2);\n  var viewportPadding = 5;\n  var pageWidth = document.documentElement.offsetWidth || document.body.offsetWidth;\n\n  var pageX = e.pageX,\n      pageY = e.pageY;\n\n\n  var x = void 0,\n      y = void 0;\n\n  switch (position) {\n    case 'top':\n      x = pageX - halfPopperWidth + offset;\n      y = pageY - 2.25 * halfPopperHeight;\n      break;\n    case 'left':\n      x = pageX - 2 * halfPopperWidth - 10;\n      y = pageY - halfPopperHeight + offset;\n      break;\n    case 'right':\n      x = pageX + halfPopperHeight;\n      y = pageY - halfPopperHeight + offset;\n      break;\n    case 'bottom':\n      x = pageX - halfPopperWidth + offset;\n      y = pageY + halfPopperHeight / 1.5;\n      break;\n  }\n\n  var isRightOverflowing = pageX + viewportPadding + halfPopperWidth + offset > pageWidth;\n  var isLeftOverflowing = pageX - viewportPadding - halfPopperWidth + offset < 0;\n\n  // Prevent left/right overflow\n  if (position === 'top' || position === 'bottom') {\n    if (isRightOverflowing) {\n      x = pageWidth - viewportPadding - 2 * halfPopperWidth;\n    }\n\n    if (isLeftOverflowing) {\n      x = viewportPadding;\n    }\n  }\n\n  popper.style[prefix('transform')] = 'translate3d(' + x + 'px, ' + y + 'px, 0)';\n}\n\n/**\n* Returns an array of elements based on the selector input\n* @param {String|Element|Element[]} selector\n* @return {Element[]}\n*/\nfunction getArrayOfElements(selector) {\n  if (selector instanceof Element) {\n    return [selector];\n  }\n\n  if (Array.isArray(selector)) {\n    return selector;\n  }\n\n  return [].slice.call(document.querySelectorAll(selector));\n}\n\n/**\n* Prepares the callback functions for `show` and `hide` methods\n* @param {Object} refData -  the element/popper reference data\n* @param {Number} duration\n* @param {Function} callback - callback function to fire once transitions complete\n*/\nfunction onTransitionEnd(refData, duration, callback) {\n  // Make callback synchronous if duration is 0\n  if (!duration) {\n    return callback();\n  }\n\n  var tooltip = refData.popper.querySelector(Selectors.TOOLTIP);\n  var transitionendFired = false;\n\n  var listenerCallback = function listenerCallback(e) {\n    if (e.target !== tooltip) return;\n\n    transitionendFired = true;\n\n    tooltip.removeEventListener('webkitTransitionEnd', listenerCallback);\n    tooltip.removeEventListener('transitionend', listenerCallback);\n\n    callback();\n  };\n\n  // Wait for transitions to complete\n  tooltip.addEventListener('webkitTransitionEnd', listenerCallback);\n  tooltip.addEventListener('transitionend', listenerCallback);\n\n  // transitionend listener sometimes may not fire\n  clearTimeout(refData._transitionendTimeout);\n  refData._transitionendTimeout = setTimeout(function () {\n    !transitionendFired && callback();\n  }, duration);\n}\n\n/**!\n * @fileOverview Kickass library to create and place poppers near their reference elements.\n * @version 1.11.1\n * @license\n * Copyright (c) 2016 Federico Zivolo and contributors\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\nvar nativeHints = ['native code', '[object MutationObserverConstructor]'];\n\n/**\n * Determine if a function is implemented natively (as opposed to a polyfill).\n * @method\n * @memberof Popper.Utils\n * @argument {Function | undefined} fn the function to check\n * @returns {Boolean}\n */\nvar isNative = function isNative(fn) {\n  return nativeHints.some(function (hint) {\n    return (fn || '').toString().indexOf(hint) > -1;\n  });\n};\n\nvar isBrowser = typeof window !== 'undefined';\nvar longerTimeoutBrowsers = ['Edge', 'Trident', 'Firefox'];\nvar timeoutDuration = 0;\nfor (var i = 0; i < longerTimeoutBrowsers.length; i += 1) {\n  if (isBrowser && navigator.userAgent.indexOf(longerTimeoutBrowsers[i]) >= 0) {\n    timeoutDuration = 1;\n    break;\n  }\n}\n\nfunction microtaskDebounce(fn) {\n  var scheduled = false;\n  var i = 0;\n  var elem = document.createElement('span');\n\n  // MutationObserver provides a mechanism for scheduling microtasks, which\n  // are scheduled *before* the next task. This gives us a way to debounce\n  // a function but ensure it's called *before* the next paint.\n  var observer = new MutationObserver(function () {\n    fn();\n    scheduled = false;\n  });\n\n  observer.observe(elem, { attributes: true });\n\n  return function () {\n    if (!scheduled) {\n      scheduled = true;\n      elem.setAttribute('x-index', i);\n      i = i + 1; // don't use compund (+=) because it doesn't get optimized in V8\n    }\n  };\n}\n\nfunction taskDebounce(fn) {\n  var scheduled = false;\n  return function () {\n    if (!scheduled) {\n      scheduled = true;\n      setTimeout(function () {\n        scheduled = false;\n        fn();\n      }, timeoutDuration);\n    }\n  };\n}\n\n// It's common for MutationObserver polyfills to be seen in the wild, however\n// these rely on Mutation Events which only occur when an element is connected\n// to the DOM. The algorithm used in this module does not use a connected element,\n// and so we must ensure that a *native* MutationObserver is available.\nvar supportsNativeMutationObserver = isBrowser && isNative(window.MutationObserver);\n\n/**\n* Create a debounced version of a method, that's asynchronously deferred\n* but called in the minimum time possible.\n*\n* @method\n* @memberof Popper.Utils\n* @argument {Function} fn\n* @returns {Function}\n*/\nvar debounce = supportsNativeMutationObserver ? microtaskDebounce : taskDebounce;\n\n/**\n * Check if the given variable is a function\n * @method\n * @memberof Popper.Utils\n * @argument {Any} functionToCheck - variable to check\n * @returns {Boolean} answer to: is a function?\n */\nfunction isFunction(functionToCheck) {\n  var getType = {};\n  return functionToCheck && getType.toString.call(functionToCheck) === '[object Function]';\n}\n\n/**\n * Get CSS computed property of the given element\n * @method\n * @memberof Popper.Utils\n * @argument {Eement} element\n * @argument {String} property\n */\nfunction getStyleComputedProperty(element, property) {\n  if (element.nodeType !== 1) {\n    return [];\n  }\n  // NOTE: 1 DOM access here\n  var css = window.getComputedStyle(element, null);\n  return property ? css[property] : css;\n}\n\n/**\n * Returns the parentNode or the host of the element\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Element} parent\n */\nfunction getParentNode(element) {\n  if (element.nodeName === 'HTML') {\n    return element;\n  }\n  return element.parentNode || element.host;\n}\n\n/**\n * Returns the scrolling parent of the given element\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Element} scroll parent\n */\nfunction getScrollParent(element) {\n  // Return body, `getScroll` will take care to get the correct `scrollTop` from it\n  if (!element || ['HTML', 'BODY', '#document'].indexOf(element.nodeName) !== -1) {\n    return window.document.body;\n  }\n\n  // Firefox want us to check `-x` and `-y` variations as well\n\n  var _getStyleComputedProp = getStyleComputedProperty(element),\n      overflow = _getStyleComputedProp.overflow,\n      overflowX = _getStyleComputedProp.overflowX,\n      overflowY = _getStyleComputedProp.overflowY;\n\n  if (/(auto|scroll)/.test(overflow + overflowY + overflowX)) {\n    return element;\n  }\n\n  return getScrollParent(getParentNode(element));\n}\n\n/**\n * Returns the offset parent of the given element\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Element} offset parent\n */\nfunction getOffsetParent(element) {\n  // NOTE: 1 DOM access here\n  var offsetParent = element && element.offsetParent;\n  var nodeName = offsetParent && offsetParent.nodeName;\n\n  if (!nodeName || nodeName === 'BODY' || nodeName === 'HTML') {\n    return window.document.documentElement;\n  }\n\n  // .offsetParent will return the closest TD or TABLE in case\n  // no offsetParent is present, I hate this job...\n  if (['TD', 'TABLE'].indexOf(offsetParent.nodeName) !== -1 && getStyleComputedProperty(offsetParent, 'position') === 'static') {\n    return getOffsetParent(offsetParent);\n  }\n\n  return offsetParent;\n}\n\nfunction isOffsetContainer(element) {\n  var nodeName = element.nodeName;\n\n  if (nodeName === 'BODY') {\n    return false;\n  }\n  return nodeName === 'HTML' || getOffsetParent(element.firstElementChild) === element;\n}\n\n/**\n * Finds the root node (document, shadowDOM root) of the given element\n * @method\n * @memberof Popper.Utils\n * @argument {Element} node\n * @returns {Element} root node\n */\nfunction getRoot(node) {\n  if (node.parentNode !== null) {\n    return getRoot(node.parentNode);\n  }\n\n  return node;\n}\n\n/**\n * Finds the offset parent common to the two provided nodes\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element1\n * @argument {Element} element2\n * @returns {Element} common offset parent\n */\nfunction findCommonOffsetParent(element1, element2) {\n  // This check is needed to avoid errors in case one of the elements isn't defined for any reason\n  if (!element1 || !element1.nodeType || !element2 || !element2.nodeType) {\n    return window.document.documentElement;\n  }\n\n  // Here we make sure to give as \"start\" the element that comes first in the DOM\n  var order = element1.compareDocumentPosition(element2) & Node.DOCUMENT_POSITION_FOLLOWING;\n  var start = order ? element1 : element2;\n  var end = order ? element2 : element1;\n\n  // Get common ancestor container\n  var range = document.createRange();\n  range.setStart(start, 0);\n  range.setEnd(end, 0);\n  var commonAncestorContainer = range.commonAncestorContainer;\n\n  // Both nodes are inside #document\n\n  if (element1 !== commonAncestorContainer && element2 !== commonAncestorContainer || start.contains(end)) {\n    if (isOffsetContainer(commonAncestorContainer)) {\n      return commonAncestorContainer;\n    }\n\n    return getOffsetParent(commonAncestorContainer);\n  }\n\n  // one of the nodes is inside shadowDOM, find which one\n  var element1root = getRoot(element1);\n  if (element1root.host) {\n    return findCommonOffsetParent(element1root.host, element2);\n  } else {\n    return findCommonOffsetParent(element1, getRoot(element2).host);\n  }\n}\n\n/**\n * Gets the scroll value of the given element in the given side (top and left)\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @argument {String} side `top` or `left`\n * @returns {number} amount of scrolled pixels\n */\nfunction getScroll(element) {\n  var side = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'top';\n\n  var upperSide = side === 'top' ? 'scrollTop' : 'scrollLeft';\n  var nodeName = element.nodeName;\n\n  if (nodeName === 'BODY' || nodeName === 'HTML') {\n    var html = window.document.documentElement;\n    var scrollingElement = window.document.scrollingElement || html;\n    return scrollingElement[upperSide];\n  }\n\n  return element[upperSide];\n}\n\n/*\n * Sum or subtract the element scroll values (left and top) from a given rect object\n * @method\n * @memberof Popper.Utils\n * @param {Object} rect - Rect object you want to change\n * @param {HTMLElement} element - The element from the function reads the scroll values\n * @param {Boolean} subtract - set to true if you want to subtract the scroll values\n * @return {Object} rect - The modifier rect object\n */\nfunction includeScroll(rect, element) {\n  var subtract = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n  var scrollTop = getScroll(element, 'top');\n  var scrollLeft = getScroll(element, 'left');\n  var modifier = subtract ? -1 : 1;\n  rect.top += scrollTop * modifier;\n  rect.bottom += scrollTop * modifier;\n  rect.left += scrollLeft * modifier;\n  rect.right += scrollLeft * modifier;\n  return rect;\n}\n\n/*\n * Helper to detect borders of a given element\n * @method\n * @memberof Popper.Utils\n * @param {CSSStyleDeclaration} styles\n * Result of `getStyleComputedProperty` on the given element\n * @param {String} axis - `x` or `y`\n * @return {number} borders - The borders size of the given axis\n */\n\nfunction getBordersSize(styles, axis) {\n  var sideA = axis === 'x' ? 'Left' : 'Top';\n  var sideB = sideA === 'Left' ? 'Right' : 'Bottom';\n\n  return +styles['border' + sideA + 'Width'].split('px')[0] + +styles['border' + sideB + 'Width'].split('px')[0];\n}\n\n/**\n * Tells if you are running Internet Explorer 10\n * @method\n * @memberof Popper.Utils\n * @returns {Boolean} isIE10\n */\nvar isIE10 = undefined;\n\nvar isIE10$1 = function isIE10$1() {\n  if (isIE10 === undefined) {\n    isIE10 = navigator.appVersion.indexOf('MSIE 10') !== -1;\n  }\n  return isIE10;\n};\n\nfunction getSize(axis, body, html, computedStyle) {\n  return Math.max(body['offset' + axis], html['client' + axis], html['offset' + axis], isIE10$1() ? html['offset' + axis] + computedStyle['margin' + (axis === 'Height' ? 'Top' : 'Left')] + computedStyle['margin' + (axis === 'Height' ? 'Bottom' : 'Right')] : 0);\n}\n\nfunction getWindowSizes() {\n  var body = window.document.body;\n  var html = window.document.documentElement;\n  var computedStyle = isIE10$1() && window.getComputedStyle(html);\n\n  return {\n    height: getSize('Height', body, html, computedStyle),\n    width: getSize('Width', body, html, computedStyle)\n  };\n}\n\nvar classCallCheck = function classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\nvar createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar defineProperty = function defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n};\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\n/**\n * Given element offsets, generate an output similar to getBoundingClientRect\n * @method\n * @memberof Popper.Utils\n * @argument {Object} offsets\n * @returns {Object} ClientRect like output\n */\nfunction getClientRect(offsets) {\n  return _extends({}, offsets, {\n    right: offsets.left + offsets.width,\n    bottom: offsets.top + offsets.height\n  });\n}\n\n/**\n * Get bounding client rect of given element\n * @method\n * @memberof Popper.Utils\n * @param {HTMLElement} element\n * @return {Object} client rect\n */\nfunction getBoundingClientRect(element) {\n  var rect = {};\n\n  // IE10 10 FIX: Please, don't ask, the element isn't\n  // considered in DOM in some circumstances...\n  // This isn't reproducible in IE10 compatibility mode of IE11\n  if (isIE10$1()) {\n    try {\n      rect = element.getBoundingClientRect();\n      var scrollTop = getScroll(element, 'top');\n      var scrollLeft = getScroll(element, 'left');\n      rect.top += scrollTop;\n      rect.left += scrollLeft;\n      rect.bottom += scrollTop;\n      rect.right += scrollLeft;\n    } catch (err) {}\n  } else {\n    rect = element.getBoundingClientRect();\n  }\n\n  var result = {\n    left: rect.left,\n    top: rect.top,\n    width: rect.right - rect.left,\n    height: rect.bottom - rect.top\n  };\n\n  // subtract scrollbar size from sizes\n  var sizes = element.nodeName === 'HTML' ? getWindowSizes() : {};\n  var width = sizes.width || element.clientWidth || result.right - result.left;\n  var height = sizes.height || element.clientHeight || result.bottom - result.top;\n\n  var horizScrollbar = element.offsetWidth - width;\n  var vertScrollbar = element.offsetHeight - height;\n\n  // if an hypothetical scrollbar is detected, we must be sure it's not a `border`\n  // we make this check conditional for performance reasons\n  if (horizScrollbar || vertScrollbar) {\n    var styles = getStyleComputedProperty(element);\n    horizScrollbar -= getBordersSize(styles, 'x');\n    vertScrollbar -= getBordersSize(styles, 'y');\n\n    result.width -= horizScrollbar;\n    result.height -= vertScrollbar;\n  }\n\n  return getClientRect(result);\n}\n\nfunction getOffsetRectRelativeToArbitraryNode(children, parent) {\n  var isIE10 = isIE10$1();\n  var isHTML = parent.nodeName === 'HTML';\n  var childrenRect = getBoundingClientRect(children);\n  var parentRect = getBoundingClientRect(parent);\n  var scrollParent = getScrollParent(children);\n\n  var styles = getStyleComputedProperty(parent);\n  var borderTopWidth = +styles.borderTopWidth.split('px')[0];\n  var borderLeftWidth = +styles.borderLeftWidth.split('px')[0];\n\n  var offsets = getClientRect({\n    top: childrenRect.top - parentRect.top - borderTopWidth,\n    left: childrenRect.left - parentRect.left - borderLeftWidth,\n    width: childrenRect.width,\n    height: childrenRect.height\n  });\n  offsets.marginTop = 0;\n  offsets.marginLeft = 0;\n\n  // Subtract margins of documentElement in case it's being used as parent\n  // we do this only on HTML because it's the only element that behaves\n  // differently when margins are applied to it. The margins are included in\n  // the box of the documentElement, in the other cases not.\n  if (!isIE10 && isHTML) {\n    var marginTop = +styles.marginTop.split('px')[0];\n    var marginLeft = +styles.marginLeft.split('px')[0];\n\n    offsets.top -= borderTopWidth - marginTop;\n    offsets.bottom -= borderTopWidth - marginTop;\n    offsets.left -= borderLeftWidth - marginLeft;\n    offsets.right -= borderLeftWidth - marginLeft;\n\n    // Attach marginTop and marginLeft because in some circumstances we may need them\n    offsets.marginTop = marginTop;\n    offsets.marginLeft = marginLeft;\n  }\n\n  if (isIE10 ? parent.contains(scrollParent) : parent === scrollParent && scrollParent.nodeName !== 'BODY') {\n    offsets = includeScroll(offsets, parent);\n  }\n\n  return offsets;\n}\n\nfunction getViewportOffsetRectRelativeToArtbitraryNode(element) {\n  var html = window.document.documentElement;\n  var relativeOffset = getOffsetRectRelativeToArbitraryNode(element, html);\n  var width = Math.max(html.clientWidth, window.innerWidth || 0);\n  var height = Math.max(html.clientHeight, window.innerHeight || 0);\n\n  var scrollTop = getScroll(html);\n  var scrollLeft = getScroll(html, 'left');\n\n  var offset = {\n    top: scrollTop - relativeOffset.top + relativeOffset.marginTop,\n    left: scrollLeft - relativeOffset.left + relativeOffset.marginLeft,\n    width: width,\n    height: height\n  };\n\n  return getClientRect(offset);\n}\n\n/**\n * Check if the given element is fixed or is inside a fixed parent\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @argument {Element} customContainer\n * @returns {Boolean} answer to \"isFixed?\"\n */\nfunction isFixed(element) {\n  var nodeName = element.nodeName;\n  if (nodeName === 'BODY' || nodeName === 'HTML') {\n    return false;\n  }\n  if (getStyleComputedProperty(element, 'position') === 'fixed') {\n    return true;\n  }\n  return isFixed(getParentNode(element));\n}\n\n/**\n * Computed the boundaries limits and return them\n * @method\n * @memberof Popper.Utils\n * @param {HTMLElement} popper\n * @param {HTMLElement} reference\n * @param {number} padding\n * @param {HTMLElement} boundariesElement - Element used to define the boundaries\n * @returns {Object} Coordinates of the boundaries\n */\nfunction getBoundaries(popper, reference, padding, boundariesElement) {\n  // NOTE: 1 DOM access here\n  var boundaries = { top: 0, left: 0 };\n  var offsetParent = findCommonOffsetParent(popper, reference);\n\n  // Handle viewport case\n  if (boundariesElement === 'viewport') {\n    boundaries = getViewportOffsetRectRelativeToArtbitraryNode(offsetParent);\n  } else {\n    // Handle other cases based on DOM element used as boundaries\n    var boundariesNode = void 0;\n    if (boundariesElement === 'scrollParent') {\n      boundariesNode = getScrollParent(getParentNode(popper));\n      if (boundariesNode.nodeName === 'BODY') {\n        boundariesNode = window.document.documentElement;\n      }\n    } else if (boundariesElement === 'window') {\n      boundariesNode = window.document.documentElement;\n    } else {\n      boundariesNode = boundariesElement;\n    }\n\n    var offsets = getOffsetRectRelativeToArbitraryNode(boundariesNode, offsetParent);\n\n    // In case of HTML, we need a different computation\n    if (boundariesNode.nodeName === 'HTML' && !isFixed(offsetParent)) {\n      var _getWindowSizes = getWindowSizes(),\n          height = _getWindowSizes.height,\n          width = _getWindowSizes.width;\n\n      boundaries.top += offsets.top - offsets.marginTop;\n      boundaries.bottom = height + offsets.top;\n      boundaries.left += offsets.left - offsets.marginLeft;\n      boundaries.right = width + offsets.left;\n    } else {\n      // for all the other DOM elements, this one is good\n      boundaries = offsets;\n    }\n  }\n\n  // Add paddings\n  boundaries.left += padding;\n  boundaries.top += padding;\n  boundaries.right -= padding;\n  boundaries.bottom -= padding;\n\n  return boundaries;\n}\n\nfunction getArea(_ref) {\n  var width = _ref.width,\n      height = _ref.height;\n\n  return width * height;\n}\n\n/**\n * Utility used to transform the `auto` placement to the placement with more\n * available space.\n * @method\n * @memberof Popper.Utils\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nfunction computeAutoPlacement(placement, refRect, popper, reference, boundariesElement) {\n  var padding = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 0;\n\n  if (placement.indexOf('auto') === -1) {\n    return placement;\n  }\n\n  var boundaries = getBoundaries(popper, reference, padding, boundariesElement);\n\n  var rects = {\n    top: {\n      width: boundaries.width,\n      height: refRect.top - boundaries.top\n    },\n    right: {\n      width: boundaries.right - refRect.right,\n      height: boundaries.height\n    },\n    bottom: {\n      width: boundaries.width,\n      height: boundaries.bottom - refRect.bottom\n    },\n    left: {\n      width: refRect.left - boundaries.left,\n      height: boundaries.height\n    }\n  };\n\n  var sortedAreas = Object.keys(rects).map(function (key) {\n    return _extends({\n      key: key\n    }, rects[key], {\n      area: getArea(rects[key])\n    });\n  }).sort(function (a, b) {\n    return b.area - a.area;\n  });\n\n  var filteredAreas = sortedAreas.filter(function (_ref2) {\n    var width = _ref2.width,\n        height = _ref2.height;\n    return width >= popper.clientWidth && height >= popper.clientHeight;\n  });\n\n  var computedPlacement = filteredAreas.length > 0 ? filteredAreas[0].key : sortedAreas[0].key;\n\n  var variation = placement.split('-')[1];\n\n  return computedPlacement + (variation ? '-' + variation : '');\n}\n\n/**\n * Get offsets to the reference element\n * @method\n * @memberof Popper.Utils\n * @param {Object} state\n * @param {Element} popper - the popper element\n * @param {Element} reference - the reference element (the popper will be relative to this)\n * @returns {Object} An object containing the offsets which will be applied to the popper\n */\nfunction getReferenceOffsets(state, popper, reference) {\n  var commonOffsetParent = findCommonOffsetParent(popper, reference);\n  return getOffsetRectRelativeToArbitraryNode(reference, commonOffsetParent);\n}\n\n/**\n * Get the outer sizes of the given element (offset size + margins)\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Object} object containing width and height properties\n */\nfunction getOuterSizes(element) {\n  var styles = window.getComputedStyle(element);\n  var x = parseFloat(styles.marginTop) + parseFloat(styles.marginBottom);\n  var y = parseFloat(styles.marginLeft) + parseFloat(styles.marginRight);\n  var result = {\n    width: element.offsetWidth + y,\n    height: element.offsetHeight + x\n  };\n  return result;\n}\n\n/**\n * Get the opposite placement of the given one\n * @method\n * @memberof Popper.Utils\n * @argument {String} placement\n * @returns {String} flipped placement\n */\nfunction getOppositePlacement(placement) {\n  var hash = { left: 'right', right: 'left', bottom: 'top', top: 'bottom' };\n  return placement.replace(/left|right|bottom|top/g, function (matched) {\n    return hash[matched];\n  });\n}\n\n/**\n * Get offsets to the popper\n * @method\n * @memberof Popper.Utils\n * @param {Object} position - CSS position the Popper will get applied\n * @param {HTMLElement} popper - the popper element\n * @param {Object} referenceOffsets - the reference offsets (the popper will be relative to this)\n * @param {String} placement - one of the valid placement options\n * @returns {Object} popperOffsets - An object containing the offsets which will be applied to the popper\n */\nfunction getPopperOffsets(popper, referenceOffsets, placement) {\n  placement = placement.split('-')[0];\n\n  // Get popper node sizes\n  var popperRect = getOuterSizes(popper);\n\n  // Add position, width and height to our offsets object\n  var popperOffsets = {\n    width: popperRect.width,\n    height: popperRect.height\n  };\n\n  // depending by the popper placement we have to compute its offsets slightly differently\n  var isHoriz = ['right', 'left'].indexOf(placement) !== -1;\n  var mainSide = isHoriz ? 'top' : 'left';\n  var secondarySide = isHoriz ? 'left' : 'top';\n  var measurement = isHoriz ? 'height' : 'width';\n  var secondaryMeasurement = !isHoriz ? 'height' : 'width';\n\n  popperOffsets[mainSide] = referenceOffsets[mainSide] + referenceOffsets[measurement] / 2 - popperRect[measurement] / 2;\n  if (placement === secondarySide) {\n    popperOffsets[secondarySide] = referenceOffsets[secondarySide] - popperRect[secondaryMeasurement];\n  } else {\n    popperOffsets[secondarySide] = referenceOffsets[getOppositePlacement(secondarySide)];\n  }\n\n  return popperOffsets;\n}\n\n/**\n * Mimics the `find` method of Array\n * @method\n * @memberof Popper.Utils\n * @argument {Array} arr\n * @argument prop\n * @argument value\n * @returns index or -1\n */\nfunction find$1(arr, check) {\n  // use native find if supported\n  if (Array.prototype.find) {\n    return arr.find(check);\n  }\n\n  // use `filter` to obtain the same behavior of `find`\n  return arr.filter(check)[0];\n}\n\n/**\n * Return the index of the matching object\n * @method\n * @memberof Popper.Utils\n * @argument {Array} arr\n * @argument prop\n * @argument value\n * @returns index or -1\n */\nfunction findIndex$1(arr, prop, value) {\n  // use native findIndex if supported\n  if (Array.prototype.findIndex) {\n    return arr.findIndex(function (cur) {\n      return cur[prop] === value;\n    });\n  }\n\n  // use `find` + `indexOf` if `findIndex` isn't supported\n  var match = find$1(arr, function (obj) {\n    return obj[prop] === value;\n  });\n  return arr.indexOf(match);\n}\n\n/**\n * Loop trough the list of modifiers and run them in order,\n * each of them will then edit the data object.\n * @method\n * @memberof Popper.Utils\n * @param {dataObject} data\n * @param {Array} modifiers\n * @param {String} ends - Optional modifier name used as stopper\n * @returns {dataObject}\n */\nfunction runModifiers(modifiers, data, ends) {\n  var modifiersToRun = ends === undefined ? modifiers : modifiers.slice(0, findIndex$1(modifiers, 'name', ends));\n\n  modifiersToRun.forEach(function (modifier) {\n    if (modifier.function) {\n      console.warn('`modifier.function` is deprecated, use `modifier.fn`!');\n    }\n    var fn = modifier.function || modifier.fn;\n    if (modifier.enabled && isFunction(fn)) {\n      // Add properties to offsets to make them a complete clientRect object\n      // we do this before each modifier to make sure the previous one doesn't\n      // mess with these values\n      data.offsets.popper = getClientRect(data.offsets.popper);\n      data.offsets.reference = getClientRect(data.offsets.reference);\n\n      data = fn(data, modifier);\n    }\n  });\n\n  return data;\n}\n\n/**\n * Updates the position of the popper, computing the new offsets and applying\n * the new style.<br />\n * Prefer `scheduleUpdate` over `update` because of performance reasons.\n * @method\n * @memberof Popper\n */\nfunction update() {\n  // if popper is destroyed, don't perform any further update\n  if (this.state.isDestroyed) {\n    return;\n  }\n\n  var data = {\n    instance: this,\n    styles: {},\n    attributes: {},\n    flipped: false,\n    offsets: {}\n  };\n\n  // compute reference element offsets\n  data.offsets.reference = getReferenceOffsets(this.state, this.popper, this.reference);\n\n  // compute auto placement, store placement inside the data object,\n  // modifiers will be able to edit `placement` if needed\n  // and refer to originalPlacement to know the original value\n  data.placement = computeAutoPlacement(this.options.placement, data.offsets.reference, this.popper, this.reference, this.options.modifiers.flip.boundariesElement, this.options.modifiers.flip.padding);\n\n  // store the computed placement inside `originalPlacement`\n  data.originalPlacement = data.placement;\n\n  // compute the popper offsets\n  data.offsets.popper = getPopperOffsets(this.popper, data.offsets.reference, data.placement);\n  data.offsets.popper.position = 'absolute';\n\n  // run the modifiers\n  data = runModifiers(this.modifiers, data);\n\n  // the first `update` will call `onCreate` callback\n  // the other ones will call `onUpdate` callback\n  if (!this.state.isCreated) {\n    this.state.isCreated = true;\n    this.options.onCreate(data);\n  } else {\n    this.options.onUpdate(data);\n  }\n}\n\n/**\n * Helper used to know if the given modifier is enabled.\n * @method\n * @memberof Popper.Utils\n * @returns {Boolean}\n */\nfunction isModifierEnabled(modifiers, modifierName) {\n  return modifiers.some(function (_ref) {\n    var name = _ref.name,\n        enabled = _ref.enabled;\n    return enabled && name === modifierName;\n  });\n}\n\n/**\n * Get the prefixed supported property name\n * @method\n * @memberof Popper.Utils\n * @argument {String} property (camelCase)\n * @returns {String} prefixed property (camelCase or PascalCase, depending on the vendor prefix)\n */\nfunction getSupportedPropertyName(property) {\n  var prefixes = [false, 'ms', 'Webkit', 'Moz', 'O'];\n  var upperProp = property.charAt(0).toUpperCase() + property.slice(1);\n\n  for (var i = 0; i < prefixes.length - 1; i++) {\n    var prefix = prefixes[i];\n    var toCheck = prefix ? '' + prefix + upperProp : property;\n    if (typeof window.document.body.style[toCheck] !== 'undefined') {\n      return toCheck;\n    }\n  }\n  return null;\n}\n\n/**\n * Destroy the popper\n * @method\n * @memberof Popper\n */\nfunction destroy() {\n  this.state.isDestroyed = true;\n\n  // touch DOM only if `applyStyle` modifier is enabled\n  if (isModifierEnabled(this.modifiers, 'applyStyle')) {\n    this.popper.removeAttribute('x-placement');\n    this.popper.style.left = '';\n    this.popper.style.position = '';\n    this.popper.style.top = '';\n    this.popper.style[getSupportedPropertyName('transform')] = '';\n  }\n\n  this.disableEventListeners();\n\n  // remove the popper if user explicity asked for the deletion on destroy\n  // do not use `remove` because IE11 doesn't support it\n  if (this.options.removeOnDestroy) {\n    this.popper.parentNode.removeChild(this.popper);\n  }\n  return this;\n}\n\nfunction attachToScrollParents(scrollParent, event, callback, scrollParents) {\n  var isBody = scrollParent.nodeName === 'BODY';\n  var target = isBody ? window : scrollParent;\n  target.addEventListener(event, callback, { passive: true });\n\n  if (!isBody) {\n    attachToScrollParents(getScrollParent(target.parentNode), event, callback, scrollParents);\n  }\n  scrollParents.push(target);\n}\n\n/**\n * Setup needed event listeners used to update the popper position\n * @method\n * @memberof Popper.Utils\n * @private\n */\nfunction setupEventListeners(reference, options, state, updateBound) {\n  // Resize event listener on window\n  state.updateBound = updateBound;\n  window.addEventListener('resize', state.updateBound, { passive: true });\n\n  // Scroll event listener on scroll parents\n  var scrollElement = getScrollParent(reference);\n  attachToScrollParents(scrollElement, 'scroll', state.updateBound, state.scrollParents);\n  state.scrollElement = scrollElement;\n  state.eventsEnabled = true;\n\n  return state;\n}\n\n/**\n * It will add resize/scroll events and start recalculating\n * position of the popper element when they are triggered.\n * @method\n * @memberof Popper\n */\nfunction enableEventListeners() {\n  if (!this.state.eventsEnabled) {\n    this.state = setupEventListeners(this.reference, this.options, this.state, this.scheduleUpdate);\n  }\n}\n\n/**\n * Remove event listeners used to update the popper position\n * @method\n * @memberof Popper.Utils\n * @private\n */\nfunction removeEventListeners(reference, state) {\n  // Remove resize event listener on window\n  window.removeEventListener('resize', state.updateBound);\n\n  // Remove scroll event listener on scroll parents\n  state.scrollParents.forEach(function (target) {\n    target.removeEventListener('scroll', state.updateBound);\n  });\n\n  // Reset state\n  state.updateBound = null;\n  state.scrollParents = [];\n  state.scrollElement = null;\n  state.eventsEnabled = false;\n  return state;\n}\n\n/**\n * It will remove resize/scroll events and won't recalculate popper position\n * when they are triggered. It also won't trigger onUpdate callback anymore,\n * unless you call `update` method manually.\n * @method\n * @memberof Popper\n */\nfunction disableEventListeners() {\n  if (this.state.eventsEnabled) {\n    window.cancelAnimationFrame(this.scheduleUpdate);\n    this.state = removeEventListeners(this.reference, this.state);\n  }\n}\n\n/**\n * Tells if a given input is a number\n * @method\n * @memberof Popper.Utils\n * @param {*} input to check\n * @return {Boolean}\n */\nfunction isNumeric(n) {\n  return n !== '' && !isNaN(parseFloat(n)) && isFinite(n);\n}\n\n/**\n * Set the style to the given popper\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element - Element to apply the style to\n * @argument {Object} styles\n * Object with a list of properties and values which will be applied to the element\n */\nfunction setStyles(element, styles) {\n  Object.keys(styles).forEach(function (prop) {\n    var unit = '';\n    // add unit if the value is numeric and is one of the following\n    if (['width', 'height', 'top', 'right', 'bottom', 'left'].indexOf(prop) !== -1 && isNumeric(styles[prop])) {\n      unit = 'px';\n    }\n    element.style[prop] = styles[prop] + unit;\n  });\n}\n\n/**\n * Set the attributes to the given popper\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element - Element to apply the attributes to\n * @argument {Object} styles\n * Object with a list of properties and values which will be applied to the element\n */\nfunction setAttributes(element, attributes) {\n  Object.keys(attributes).forEach(function (prop) {\n    var value = attributes[prop];\n    if (value !== false) {\n      element.setAttribute(prop, attributes[prop]);\n    } else {\n      element.removeAttribute(prop);\n    }\n  });\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} data.styles - List of style properties - values to apply to popper element\n * @argument {Object} data.attributes - List of attribute properties - values to apply to popper element\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The same data object\n */\nfunction applyStyle(data) {\n  // any property present in `data.styles` will be applied to the popper,\n  // in this way we can make the 3rd party modifiers add custom styles to it\n  // Be aware, modifiers could override the properties defined in the previous\n  // lines of this modifier!\n  setStyles(data.instance.popper, data.styles);\n\n  // any property present in `data.attributes` will be applied to the popper,\n  // they will be set as HTML attributes of the element\n  setAttributes(data.instance.popper, data.attributes);\n\n  // if the arrow style has been computed, apply the arrow style\n  if (data.offsets.arrow) {\n    setStyles(data.arrowElement, data.offsets.arrow);\n  }\n\n  return data;\n}\n\n/**\n * Set the x-placement attribute before everything else because it could be used\n * to add margins to the popper margins needs to be calculated to get the\n * correct popper offsets.\n * @method\n * @memberof Popper.modifiers\n * @param {HTMLElement} reference - The reference element used to position the popper\n * @param {HTMLElement} popper - The HTML element used as popper.\n * @param {Object} options - Popper.js options\n */\nfunction applyStyleOnLoad(reference, popper, options, modifierOptions, state) {\n  // compute reference element offsets\n  var referenceOffsets = getReferenceOffsets(state, popper, reference);\n\n  // compute auto placement, store placement inside the data object,\n  // modifiers will be able to edit `placement` if needed\n  // and refer to originalPlacement to know the original value\n  var placement = computeAutoPlacement(options.placement, referenceOffsets, popper, reference, options.modifiers.flip.boundariesElement, options.modifiers.flip.padding);\n\n  popper.setAttribute('x-placement', placement);\n\n  // Apply `position` to popper before anything else because\n  // without the position applied we can't guarantee correct computations\n  setStyles(popper, { position: 'absolute' });\n\n  return options;\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nfunction computeStyle(data, options) {\n  var x = options.x,\n      y = options.y;\n  var popper = data.offsets.popper;\n\n  // Remove this legacy support in Popper.js v2\n\n  var legacyGpuAccelerationOption = find$1(data.instance.modifiers, function (modifier) {\n    return modifier.name === 'applyStyle';\n  }).gpuAcceleration;\n  if (legacyGpuAccelerationOption !== undefined) {\n    console.warn('WARNING: `gpuAcceleration` option moved to `computeStyle` modifier and will not be supported in future versions of Popper.js!');\n  }\n  var gpuAcceleration = legacyGpuAccelerationOption !== undefined ? legacyGpuAccelerationOption : options.gpuAcceleration;\n\n  var offsetParent = getOffsetParent(data.instance.popper);\n  var offsetParentRect = getBoundingClientRect(offsetParent);\n\n  // Styles\n  var styles = {\n    position: popper.position\n  };\n\n  // floor sides to avoid blurry text\n  var offsets = {\n    left: Math.floor(popper.left),\n    top: Math.floor(popper.top),\n    bottom: Math.floor(popper.bottom),\n    right: Math.floor(popper.right)\n  };\n\n  var sideA = x === 'bottom' ? 'top' : 'bottom';\n  var sideB = y === 'right' ? 'left' : 'right';\n\n  // if gpuAcceleration is set to `true` and transform is supported,\n  //  we use `translate3d` to apply the position to the popper we\n  // automatically use the supported prefixed version if needed\n  var prefixedProperty = getSupportedPropertyName('transform');\n\n  // now, let's make a step back and look at this code closely (wtf?)\n  // If the content of the popper grows once it's been positioned, it\n  // may happen that the popper gets misplaced because of the new content\n  // overflowing its reference element\n  // To avoid this problem, we provide two options (x and y), which allow\n  // the consumer to define the offset origin.\n  // If we position a popper on top of a reference element, we can set\n  // `x` to `top` to make the popper grow towards its top instead of\n  // its bottom.\n  var left = void 0,\n      top = void 0;\n  if (sideA === 'bottom') {\n    top = -offsetParentRect.height + offsets.bottom;\n  } else {\n    top = offsets.top;\n  }\n  if (sideB === 'right') {\n    left = -offsetParentRect.width + offsets.right;\n  } else {\n    left = offsets.left;\n  }\n  if (gpuAcceleration && prefixedProperty) {\n    styles[prefixedProperty] = 'translate3d(' + left + 'px, ' + top + 'px, 0)';\n    styles[sideA] = 0;\n    styles[sideB] = 0;\n    styles.willChange = 'transform';\n  } else {\n    // othwerise, we use the standard `top`, `left`, `bottom` and `right` properties\n    var invertTop = sideA === 'bottom' ? -1 : 1;\n    var invertLeft = sideB === 'right' ? -1 : 1;\n    styles[sideA] = top * invertTop;\n    styles[sideB] = left * invertLeft;\n    styles.willChange = sideA + ', ' + sideB;\n  }\n\n  // Attributes\n  var attributes = {\n    'x-placement': data.placement\n  };\n\n  // Update attributes and styles of `data`\n  data.attributes = _extends({}, attributes, data.attributes);\n  data.styles = _extends({}, styles, data.styles);\n\n  return data;\n}\n\n/**\n * Helper used to know if the given modifier depends from another one.<br />\n * It checks if the needed modifier is listed and enabled.\n * @method\n * @memberof Popper.Utils\n * @param {Array} modifiers - list of modifiers\n * @param {String} requestingName - name of requesting modifier\n * @param {String} requestedName - name of requested modifier\n * @returns {Boolean}\n */\nfunction isModifierRequired(modifiers, requestingName, requestedName) {\n  var requesting = find$1(modifiers, function (_ref) {\n    var name = _ref.name;\n    return name === requestingName;\n  });\n\n  var isRequired = !!requesting && modifiers.some(function (modifier) {\n    return modifier.name === requestedName && modifier.enabled && modifier.order < requesting.order;\n  });\n\n  if (!isRequired) {\n    var _requesting = '`' + requestingName + '`';\n    var requested = '`' + requestedName + '`';\n    console.warn(requested + ' modifier is required by ' + _requesting + ' modifier in order to work, be sure to include it before ' + _requesting + '!');\n  }\n  return isRequired;\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nfunction arrow(data, options) {\n  // arrow depends on keepTogether in order to work\n  if (!isModifierRequired(data.instance.modifiers, 'arrow', 'keepTogether')) {\n    return data;\n  }\n\n  var arrowElement = options.element;\n\n  // if arrowElement is a string, suppose it's a CSS selector\n  if (typeof arrowElement === 'string') {\n    arrowElement = data.instance.popper.querySelector(arrowElement);\n\n    // if arrowElement is not found, don't run the modifier\n    if (!arrowElement) {\n      return data;\n    }\n  } else {\n    // if the arrowElement isn't a query selector we must check that the\n    // provided DOM node is child of its popper node\n    if (!data.instance.popper.contains(arrowElement)) {\n      console.warn('WARNING: `arrow.element` must be child of its popper element!');\n      return data;\n    }\n  }\n\n  var placement = data.placement.split('-')[0];\n  var _data$offsets = data.offsets,\n      popper = _data$offsets.popper,\n      reference = _data$offsets.reference;\n\n  var isVertical = ['left', 'right'].indexOf(placement) !== -1;\n\n  var len = isVertical ? 'height' : 'width';\n  var side = isVertical ? 'top' : 'left';\n  var altSide = isVertical ? 'left' : 'top';\n  var opSide = isVertical ? 'bottom' : 'right';\n  var arrowElementSize = getOuterSizes(arrowElement)[len];\n\n  //\n  // extends keepTogether behavior making sure the popper and its reference have enough pixels in conjuction\n  //\n\n  // top/left side\n  if (reference[opSide] - arrowElementSize < popper[side]) {\n    data.offsets.popper[side] -= popper[side] - (reference[opSide] - arrowElementSize);\n  }\n  // bottom/right side\n  if (reference[side] + arrowElementSize > popper[opSide]) {\n    data.offsets.popper[side] += reference[side] + arrowElementSize - popper[opSide];\n  }\n\n  // compute center of the popper\n  var center = reference[side] + reference[len] / 2 - arrowElementSize / 2;\n\n  // Compute the sideValue using the updated popper offsets\n  var sideValue = center - getClientRect(data.offsets.popper)[side];\n\n  // prevent arrowElement from being placed not contiguously to its popper\n  sideValue = Math.max(Math.min(popper[len] - arrowElementSize, sideValue), 0);\n\n  data.arrowElement = arrowElement;\n  data.offsets.arrow = {};\n  data.offsets.arrow[side] = Math.round(sideValue);\n  data.offsets.arrow[altSide] = ''; // make sure to unset any eventual altSide value from the DOM node\n\n  return data;\n}\n\n/**\n * Get the opposite placement variation of the given one\n * @method\n * @memberof Popper.Utils\n * @argument {String} placement variation\n * @returns {String} flipped placement variation\n */\nfunction getOppositeVariation(variation) {\n  if (variation === 'end') {\n    return 'start';\n  } else if (variation === 'start') {\n    return 'end';\n  }\n  return variation;\n}\n\n/**\n * List of accepted placements to use as values of the `placement` option.<br />\n * Valid placements are:\n * - `auto`\n * - `top`\n * - `right`\n * - `bottom`\n * - `left`\n *\n * Each placement can have a variation from this list:\n * - `-start`\n * - `-end`\n *\n * Variations are interpreted easily if you think of them as the left to right\n * written languages. Horizontally (`top` and `bottom`), `start` is left and `end`\n * is right.<br />\n * Vertically (`left` and `right`), `start` is top and `end` is bottom.\n *\n * Some valid examples are:\n * - `top-end` (on top of reference, right aligned)\n * - `right-start` (on right of reference, top aligned)\n * - `bottom` (on bottom, centered)\n * - `auto-right` (on the side with more space available, alignment depends by placement)\n *\n * @static\n * @type {Array}\n * @enum {String}\n * @readonly\n * @method placements\n * @memberof Popper\n */\nvar placements = ['auto-start', 'auto', 'auto-end', 'top-start', 'top', 'top-end', 'right-start', 'right', 'right-end', 'bottom-end', 'bottom', 'bottom-start', 'left-end', 'left', 'left-start'];\n\n// Get rid of `auto` `auto-start` and `auto-end`\nvar validPlacements = placements.slice(3);\n\n/**\n * Given an initial placement, returns all the subsequent placements\n * clockwise (or counter-clockwise).\n *\n * @method\n * @memberof Popper.Utils\n * @argument {String} placement - A valid placement (it accepts variations)\n * @argument {Boolean} counter - Set to true to walk the placements counterclockwise\n * @returns {Array} placements including their variations\n */\nfunction clockwise(placement) {\n  var counter = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n  var index = validPlacements.indexOf(placement);\n  var arr = validPlacements.slice(index + 1).concat(validPlacements.slice(0, index));\n  return counter ? arr.reverse() : arr;\n}\n\nvar BEHAVIORS = {\n  FLIP: 'flip',\n  CLOCKWISE: 'clockwise',\n  COUNTERCLOCKWISE: 'counterclockwise'\n};\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nfunction flip(data, options) {\n  // if `inner` modifier is enabled, we can't use the `flip` modifier\n  if (isModifierEnabled(data.instance.modifiers, 'inner')) {\n    return data;\n  }\n\n  if (data.flipped && data.placement === data.originalPlacement) {\n    // seems like flip is trying to loop, probably there's not enough space on any of the flippable sides\n    return data;\n  }\n\n  var boundaries = getBoundaries(data.instance.popper, data.instance.reference, options.padding, options.boundariesElement);\n\n  var placement = data.placement.split('-')[0];\n  var placementOpposite = getOppositePlacement(placement);\n  var variation = data.placement.split('-')[1] || '';\n\n  var flipOrder = [];\n\n  switch (options.behavior) {\n    case BEHAVIORS.FLIP:\n      flipOrder = [placement, placementOpposite];\n      break;\n    case BEHAVIORS.CLOCKWISE:\n      flipOrder = clockwise(placement);\n      break;\n    case BEHAVIORS.COUNTERCLOCKWISE:\n      flipOrder = clockwise(placement, true);\n      break;\n    default:\n      flipOrder = options.behavior;\n  }\n\n  flipOrder.forEach(function (step, index) {\n    if (placement !== step || flipOrder.length === index + 1) {\n      return data;\n    }\n\n    placement = data.placement.split('-')[0];\n    placementOpposite = getOppositePlacement(placement);\n\n    var popperOffsets = data.offsets.popper;\n    var refOffsets = data.offsets.reference;\n\n    // using floor because the reference offsets may contain decimals we are not going to consider here\n    var floor = Math.floor;\n    var overlapsRef = placement === 'left' && floor(popperOffsets.right) > floor(refOffsets.left) || placement === 'right' && floor(popperOffsets.left) < floor(refOffsets.right) || placement === 'top' && floor(popperOffsets.bottom) > floor(refOffsets.top) || placement === 'bottom' && floor(popperOffsets.top) < floor(refOffsets.bottom);\n\n    var overflowsLeft = floor(popperOffsets.left) < floor(boundaries.left);\n    var overflowsRight = floor(popperOffsets.right) > floor(boundaries.right);\n    var overflowsTop = floor(popperOffsets.top) < floor(boundaries.top);\n    var overflowsBottom = floor(popperOffsets.bottom) > floor(boundaries.bottom);\n\n    var overflowsBoundaries = placement === 'left' && overflowsLeft || placement === 'right' && overflowsRight || placement === 'top' && overflowsTop || placement === 'bottom' && overflowsBottom;\n\n    // flip the variation if required\n    var isVertical = ['top', 'bottom'].indexOf(placement) !== -1;\n    var flippedVariation = !!options.flipVariations && (isVertical && variation === 'start' && overflowsLeft || isVertical && variation === 'end' && overflowsRight || !isVertical && variation === 'start' && overflowsTop || !isVertical && variation === 'end' && overflowsBottom);\n\n    if (overlapsRef || overflowsBoundaries || flippedVariation) {\n      // this boolean to detect any flip loop\n      data.flipped = true;\n\n      if (overlapsRef || overflowsBoundaries) {\n        placement = flipOrder[index + 1];\n      }\n\n      if (flippedVariation) {\n        variation = getOppositeVariation(variation);\n      }\n\n      data.placement = placement + (variation ? '-' + variation : '');\n\n      // this object contains `position`, we want to preserve it along with\n      // any additional property we may add in the future\n      data.offsets.popper = _extends({}, data.offsets.popper, getPopperOffsets(data.instance.popper, data.offsets.reference, data.placement));\n\n      data = runModifiers(data.instance.modifiers, data, 'flip');\n    }\n  });\n  return data;\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nfunction keepTogether(data) {\n  var _data$offsets = data.offsets,\n      popper = _data$offsets.popper,\n      reference = _data$offsets.reference;\n\n  var placement = data.placement.split('-')[0];\n  var floor = Math.floor;\n  var isVertical = ['top', 'bottom'].indexOf(placement) !== -1;\n  var side = isVertical ? 'right' : 'bottom';\n  var opSide = isVertical ? 'left' : 'top';\n  var measurement = isVertical ? 'width' : 'height';\n\n  if (popper[side] < floor(reference[opSide])) {\n    data.offsets.popper[opSide] = floor(reference[opSide]) - popper[measurement];\n  }\n  if (popper[opSide] > floor(reference[side])) {\n    data.offsets.popper[opSide] = floor(reference[side]);\n  }\n\n  return data;\n}\n\n/**\n * Converts a string containing value + unit into a px value number\n * @function\n * @memberof {modifiers~offset}\n * @private\n * @argument {String} str - Value + unit string\n * @argument {String} measurement - `height` or `width`\n * @argument {Object} popperOffsets\n * @argument {Object} referenceOffsets\n * @returns {Number|String}\n * Value in pixels, or original string if no values were extracted\n */\nfunction toValue(str, measurement, popperOffsets, referenceOffsets) {\n  // separate value from unit\n  var split = str.match(/((?:\\-|\\+)?\\d*\\.?\\d*)(.*)/);\n  var value = +split[1];\n  var unit = split[2];\n\n  // If it's not a number it's an operator, I guess\n  if (!value) {\n    return str;\n  }\n\n  if (unit.indexOf('%') === 0) {\n    var element = void 0;\n    switch (unit) {\n      case '%p':\n        element = popperOffsets;\n        break;\n      case '%':\n      case '%r':\n      default:\n        element = referenceOffsets;\n    }\n\n    var rect = getClientRect(element);\n    return rect[measurement] / 100 * value;\n  } else if (unit === 'vh' || unit === 'vw') {\n    // if is a vh or vw, we calculate the size based on the viewport\n    var size = void 0;\n    if (unit === 'vh') {\n      size = Math.max(document.documentElement.clientHeight, window.innerHeight || 0);\n    } else {\n      size = Math.max(document.documentElement.clientWidth, window.innerWidth || 0);\n    }\n    return size / 100 * value;\n  } else {\n    // if is an explicit pixel unit, we get rid of the unit and keep the value\n    // if is an implicit unit, it's px, and we return just the value\n    return value;\n  }\n}\n\n/**\n * Parse an `offset` string to extrapolate `x` and `y` numeric offsets.\n * @function\n * @memberof {modifiers~offset}\n * @private\n * @argument {String} offset\n * @argument {Object} popperOffsets\n * @argument {Object} referenceOffsets\n * @argument {String} basePlacement\n * @returns {Array} a two cells array with x and y offsets in numbers\n */\nfunction parseOffset(offset, popperOffsets, referenceOffsets, basePlacement) {\n  var offsets = [0, 0];\n\n  // Use height if placement is left or right and index is 0 otherwise use width\n  // in this way the first offset will use an axis and the second one\n  // will use the other one\n  var useHeight = ['right', 'left'].indexOf(basePlacement) !== -1;\n\n  // Split the offset string to obtain a list of values and operands\n  // The regex addresses values with the plus or minus sign in front (+10, -20, etc)\n  var fragments = offset.split(/(\\+|\\-)/).map(function (frag) {\n    return frag.trim();\n  });\n\n  // Detect if the offset string contains a pair of values or a single one\n  // they could be separated by comma or space\n  var divider = fragments.indexOf(find$1(fragments, function (frag) {\n    return frag.search(/,|\\s/) !== -1;\n  }));\n\n  if (fragments[divider] && fragments[divider].indexOf(',') === -1) {\n    console.warn('Offsets separated by white space(s) are deprecated, use a comma (,) instead.');\n  }\n\n  // If divider is found, we divide the list of values and operands to divide\n  // them by ofset X and Y.\n  var splitRegex = /\\s*,\\s*|\\s+/;\n  var ops = divider !== -1 ? [fragments.slice(0, divider).concat([fragments[divider].split(splitRegex)[0]]), [fragments[divider].split(splitRegex)[1]].concat(fragments.slice(divider + 1))] : [fragments];\n\n  // Convert the values with units to absolute pixels to allow our computations\n  ops = ops.map(function (op, index) {\n    // Most of the units rely on the orientation of the popper\n    var measurement = (index === 1 ? !useHeight : useHeight) ? 'height' : 'width';\n    var mergeWithPrevious = false;\n    return op\n    // This aggregates any `+` or `-` sign that aren't considered operators\n    // e.g.: 10 + +5 => [10, +, +5]\n    .reduce(function (a, b) {\n      if (a[a.length - 1] === '' && ['+', '-'].indexOf(b) !== -1) {\n        a[a.length - 1] = b;\n        mergeWithPrevious = true;\n        return a;\n      } else if (mergeWithPrevious) {\n        a[a.length - 1] += b;\n        mergeWithPrevious = false;\n        return a;\n      } else {\n        return a.concat(b);\n      }\n    }, [])\n    // Here we convert the string values into number values (in px)\n    .map(function (str) {\n      return toValue(str, measurement, popperOffsets, referenceOffsets);\n    });\n  });\n\n  // Loop trough the offsets arrays and execute the operations\n  ops.forEach(function (op, index) {\n    op.forEach(function (frag, index2) {\n      if (isNumeric(frag)) {\n        offsets[index] += frag * (op[index2 - 1] === '-' ? -1 : 1);\n      }\n    });\n  });\n  return offsets;\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @argument {Number|String} options.offset=0\n * The offset value as described in the modifier description\n * @returns {Object} The data object, properly modified\n */\nfunction offset(data, _ref) {\n  var offset = _ref.offset;\n  var placement = data.placement,\n      _data$offsets = data.offsets,\n      popper = _data$offsets.popper,\n      reference = _data$offsets.reference;\n\n  var basePlacement = placement.split('-')[0];\n\n  var offsets = void 0;\n  if (isNumeric(+offset)) {\n    offsets = [+offset, 0];\n  } else {\n    offsets = parseOffset(offset, popper, reference, basePlacement);\n  }\n\n  if (basePlacement === 'left') {\n    popper.top += offsets[0];\n    popper.left -= offsets[1];\n  } else if (basePlacement === 'right') {\n    popper.top += offsets[0];\n    popper.left += offsets[1];\n  } else if (basePlacement === 'top') {\n    popper.left += offsets[0];\n    popper.top -= offsets[1];\n  } else if (basePlacement === 'bottom') {\n    popper.left += offsets[0];\n    popper.top += offsets[1];\n  }\n\n  data.popper = popper;\n  return data;\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nfunction preventOverflow(data, options) {\n  var boundariesElement = options.boundariesElement || getOffsetParent(data.instance.popper);\n\n  // If offsetParent is the reference element, we really want to\n  // go one step up and use the next offsetParent as reference to\n  // avoid to make this modifier completely useless and look like broken\n  if (data.instance.reference === boundariesElement) {\n    boundariesElement = getOffsetParent(boundariesElement);\n  }\n\n  var boundaries = getBoundaries(data.instance.popper, data.instance.reference, options.padding, boundariesElement);\n  options.boundaries = boundaries;\n\n  var order = options.priority;\n  var popper = data.offsets.popper;\n\n  var check = {\n    primary: function primary(placement) {\n      var value = popper[placement];\n      if (popper[placement] < boundaries[placement] && !options.escapeWithReference) {\n        value = Math.max(popper[placement], boundaries[placement]);\n      }\n      return defineProperty({}, placement, value);\n    },\n    secondary: function secondary(placement) {\n      var mainSide = placement === 'right' ? 'left' : 'top';\n      var value = popper[mainSide];\n      if (popper[placement] > boundaries[placement] && !options.escapeWithReference) {\n        value = Math.min(popper[mainSide], boundaries[placement] - (placement === 'right' ? popper.width : popper.height));\n      }\n      return defineProperty({}, mainSide, value);\n    }\n  };\n\n  order.forEach(function (placement) {\n    var side = ['left', 'top'].indexOf(placement) !== -1 ? 'primary' : 'secondary';\n    popper = _extends({}, popper, check[side](placement));\n  });\n\n  data.offsets.popper = popper;\n\n  return data;\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nfunction shift(data) {\n  var placement = data.placement;\n  var basePlacement = placement.split('-')[0];\n  var shiftvariation = placement.split('-')[1];\n\n  // if shift shiftvariation is specified, run the modifier\n  if (shiftvariation) {\n    var _data$offsets = data.offsets,\n        reference = _data$offsets.reference,\n        popper = _data$offsets.popper;\n\n    var isVertical = ['bottom', 'top'].indexOf(basePlacement) !== -1;\n    var side = isVertical ? 'left' : 'top';\n    var measurement = isVertical ? 'width' : 'height';\n\n    var shiftOffsets = {\n      start: defineProperty({}, side, reference[side]),\n      end: defineProperty({}, side, reference[side] + reference[measurement] - popper[measurement])\n    };\n\n    data.offsets.popper = _extends({}, popper, shiftOffsets[shiftvariation]);\n  }\n\n  return data;\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nfunction hide(data) {\n  if (!isModifierRequired(data.instance.modifiers, 'hide', 'preventOverflow')) {\n    return data;\n  }\n\n  var refRect = data.offsets.reference;\n  var bound = find$1(data.instance.modifiers, function (modifier) {\n    return modifier.name === 'preventOverflow';\n  }).boundaries;\n\n  if (refRect.bottom < bound.top || refRect.left > bound.right || refRect.top > bound.bottom || refRect.right < bound.left) {\n    // Avoid unnecessary DOM access if visibility hasn't changed\n    if (data.hide === true) {\n      return data;\n    }\n\n    data.hide = true;\n    data.attributes['x-out-of-boundaries'] = '';\n  } else {\n    // Avoid unnecessary DOM access if visibility hasn't changed\n    if (data.hide === false) {\n      return data;\n    }\n\n    data.hide = false;\n    data.attributes['x-out-of-boundaries'] = false;\n  }\n\n  return data;\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nfunction inner(data) {\n  var placement = data.placement;\n  var basePlacement = placement.split('-')[0];\n  var _data$offsets = data.offsets,\n      popper = _data$offsets.popper,\n      reference = _data$offsets.reference;\n\n  var isHoriz = ['left', 'right'].indexOf(basePlacement) !== -1;\n\n  var subtractLength = ['top', 'left'].indexOf(basePlacement) === -1;\n\n  popper[isHoriz ? 'left' : 'top'] = reference[placement] - (subtractLength ? popper[isHoriz ? 'width' : 'height'] : 0);\n\n  data.placement = getOppositePlacement(placement);\n  data.offsets.popper = getClientRect(popper);\n\n  return data;\n}\n\n/**\n * Modifier function, each modifier can have a function of this type assigned\n * to its `fn` property.<br />\n * These functions will be called on each update, this means that you must\n * make sure they are performant enough to avoid performance bottlenecks.\n *\n * @function ModifierFn\n * @argument {dataObject} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {dataObject} The data object, properly modified\n */\n\n/**\n * Modifiers are plugins used to alter the behavior of your poppers.<br />\n * Popper.js uses a set of 9 modifiers to provide all the basic functionalities\n * needed by the library.\n *\n * Usually you don't want to override the `order`, `fn` and `onLoad` props.\n * All the other properties are configurations that could be tweaked.\n * @namespace modifiers\n */\nvar modifiers = {\n  /**\n   * Modifier used to shift the popper on the start or end of its reference\n   * element.<br />\n   * It will read the variation of the `placement` property.<br />\n   * It can be one either `-end` or `-start`.\n   * @memberof modifiers\n   * @inner\n   */\n  shift: {\n    /** @prop {number} order=100 - Index used to define the order of execution */\n    order: 100,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: shift\n  },\n\n  /**\n   * The `offset` modifier can shift your popper on both its axis.\n   *\n   * It accepts the following units:\n   * - `px` or unitless, interpreted as pixels\n   * - `%` or `%r`, percentage relative to the length of the reference element\n   * - `%p`, percentage relative to the length of the popper element\n   * - `vw`, CSS viewport width unit\n   * - `vh`, CSS viewport height unit\n   *\n   * For length is intended the main axis relative to the placement of the popper.<br />\n   * This means that if the placement is `top` or `bottom`, the length will be the\n   * `width`. In case of `left` or `right`, it will be the height.\n   *\n   * You can provide a single value (as `Number` or `String`), or a pair of values\n   * as `String` divided by a comma or one (or more) white spaces.<br />\n   * The latter is a deprecated method because it leads to confusion and will be\n   * removed in v2.<br />\n   * Additionally, it accepts additions and subtractions between different units.\n   * Note that multiplications and divisions aren't supported.\n   *\n   * Valid examples are:\n   * ```\n   * 10\n   * '10%'\n   * '10, 10'\n   * '10%, 10'\n   * '10 + 10%'\n   * '10 - 5vh + 3%'\n   * '-10px + 5vh, 5px - 6%'\n   * ```\n   *\n   * @memberof modifiers\n   * @inner\n   */\n  offset: {\n    /** @prop {number} order=200 - Index used to define the order of execution */\n    order: 200,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: offset,\n    /** @prop {Number|String} offset=0\n     * The offset value as described in the modifier description\n     */\n    offset: 0\n  },\n\n  /**\n   * Modifier used to prevent the popper from being positioned outside the boundary.\n   *\n   * An scenario exists where the reference itself is not within the boundaries.<br />\n   * We can say it has \"escaped the boundaries\" — or just \"escaped\".<br />\n   * In this case we need to decide whether the popper should either:\n   *\n   * - detach from the reference and remain \"trapped\" in the boundaries, or\n   * - if it should ignore the boundary and \"escape with its reference\"\n   *\n   * When `escapeWithReference` is set to`true` and reference is completely\n   * outside its boundaries, the popper will overflow (or completely leave)\n   * the boundaries in order to remain attached to the edge of the reference.\n   *\n   * @memberof modifiers\n   * @inner\n   */\n  preventOverflow: {\n    /** @prop {number} order=300 - Index used to define the order of execution */\n    order: 300,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: preventOverflow,\n    /**\n     * @prop {Array} [priority=['left','right','top','bottom']]\n     * Popper will try to prevent overflow following these priorities by default,\n     * then, it could overflow on the left and on top of the `boundariesElement`\n     */\n    priority: ['left', 'right', 'top', 'bottom'],\n    /**\n     * @prop {number} padding=5\n     * Amount of pixel used to define a minimum distance between the boundaries\n     * and the popper this makes sure the popper has always a little padding\n     * between the edges of its container\n     */\n    padding: 5,\n    /**\n     * @prop {String|HTMLElement} boundariesElement='scrollParent'\n     * Boundaries used by the modifier, can be `scrollParent`, `window`,\n     * `viewport` or any DOM element.\n     */\n    boundariesElement: 'scrollParent'\n  },\n\n  /**\n   * Modifier used to make sure the reference and its popper stay near eachothers\n   * without leaving any gap between the two. Expecially useful when the arrow is\n   * enabled and you want to assure it to point to its reference element.\n   * It cares only about the first axis, you can still have poppers with margin\n   * between the popper and its reference element.\n   * @memberof modifiers\n   * @inner\n   */\n  keepTogether: {\n    /** @prop {number} order=400 - Index used to define the order of execution */\n    order: 400,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: keepTogether\n  },\n\n  /**\n   * This modifier is used to move the `arrowElement` of the popper to make\n   * sure it is positioned between the reference element and its popper element.\n   * It will read the outer size of the `arrowElement` node to detect how many\n   * pixels of conjuction are needed.\n   *\n   * It has no effect if no `arrowElement` is provided.\n   * @memberof modifiers\n   * @inner\n   */\n  arrow: {\n    /** @prop {number} order=500 - Index used to define the order of execution */\n    order: 500,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: arrow,\n    /** @prop {String|HTMLElement} element='[x-arrow]' - Selector or node used as arrow */\n    element: '[x-arrow]'\n  },\n\n  /**\n   * Modifier used to flip the popper's placement when it starts to overlap its\n   * reference element.\n   *\n   * Requires the `preventOverflow` modifier before it in order to work.\n   *\n   * **NOTE:** this modifier will interrupt the current update cycle and will\n   * restart it if it detects the need to flip the placement.\n   * @memberof modifiers\n   * @inner\n   */\n  flip: {\n    /** @prop {number} order=600 - Index used to define the order of execution */\n    order: 600,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: flip,\n    /**\n     * @prop {String|Array} behavior='flip'\n     * The behavior used to change the popper's placement. It can be one of\n     * `flip`, `clockwise`, `counterclockwise` or an array with a list of valid\n     * placements (with optional variations).\n     */\n    behavior: 'flip',\n    /**\n     * @prop {number} padding=5\n     * The popper will flip if it hits the edges of the `boundariesElement`\n     */\n    padding: 5,\n    /**\n     * @prop {String|HTMLElement} boundariesElement='viewport'\n     * The element which will define the boundaries of the popper position,\n     * the popper will never be placed outside of the defined boundaries\n     * (except if keepTogether is enabled)\n     */\n    boundariesElement: 'viewport'\n  },\n\n  /**\n   * Modifier used to make the popper flow toward the inner of the reference element.\n   * By default, when this modifier is disabled, the popper will be placed outside\n   * the reference element.\n   * @memberof modifiers\n   * @inner\n   */\n  inner: {\n    /** @prop {number} order=700 - Index used to define the order of execution */\n    order: 700,\n    /** @prop {Boolean} enabled=false - Whether the modifier is enabled or not */\n    enabled: false,\n    /** @prop {ModifierFn} */\n    fn: inner\n  },\n\n  /**\n   * Modifier used to hide the popper when its reference element is outside of the\n   * popper boundaries. It will set a `x-out-of-boundaries` attribute which can\n   * be used to hide with a CSS selector the popper when its reference is\n   * out of boundaries.\n   *\n   * Requires the `preventOverflow` modifier before it in order to work.\n   * @memberof modifiers\n   * @inner\n   */\n  hide: {\n    /** @prop {number} order=800 - Index used to define the order of execution */\n    order: 800,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: hide\n  },\n\n  /**\n   * Computes the style that will be applied to the popper element to gets\n   * properly positioned.\n   *\n   * Note that this modifier will not touch the DOM, it just prepares the styles\n   * so that `applyStyle` modifier can apply it. This separation is useful\n   * in case you need to replace `applyStyle` with a custom implementation.\n   *\n   * This modifier has `850` as `order` value to maintain backward compatibility\n   * with previous versions of Popper.js. Expect the modifiers ordering method\n   * to change in future major versions of the library.\n   *\n   * @memberof modifiers\n   * @inner\n   */\n  computeStyle: {\n    /** @prop {number} order=850 - Index used to define the order of execution */\n    order: 850,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: computeStyle,\n    /**\n     * @prop {Boolean} gpuAcceleration=true\n     * If true, it uses the CSS 3d transformation to position the popper.\n     * Otherwise, it will use the `top` and `left` properties.\n     */\n    gpuAcceleration: true,\n    /**\n     * @prop {string} [x='bottom']\n     * Where to anchor the X axis (`bottom` or `top`). AKA X offset origin.\n     * Change this if your popper should grow in a direction different from `bottom`\n     */\n    x: 'bottom',\n    /**\n     * @prop {string} [x='left']\n     * Where to anchor the Y axis (`left` or `right`). AKA Y offset origin.\n     * Change this if your popper should grow in a direction different from `right`\n     */\n    y: 'right'\n  },\n\n  /**\n   * Applies the computed styles to the popper element.\n   *\n   * All the DOM manipulations are limited to this modifier. This is useful in case\n   * you want to integrate Popper.js inside a framework or view library and you\n   * want to delegate all the DOM manipulations to it.\n   *\n   * Note that if you disable this modifier, you must make sure the popper element\n   * has its position set to `absolute` before Popper.js can do its work!\n   *\n   * Just disable this modifier and define you own to achieve the desired effect.\n   *\n   * @memberof modifiers\n   * @inner\n   */\n  applyStyle: {\n    /** @prop {number} order=900 - Index used to define the order of execution */\n    order: 900,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: applyStyle,\n    /** @prop {Function} */\n    onLoad: applyStyleOnLoad,\n    /**\n     * @deprecated since version 1.10.0, the property moved to `computeStyle` modifier\n     * @prop {Boolean} gpuAcceleration=true\n     * If true, it uses the CSS 3d transformation to position the popper.\n     * Otherwise, it will use the `top` and `left` properties.\n     */\n    gpuAcceleration: undefined\n  }\n};\n\n/**\n * The `dataObject` is an object containing all the informations used by Popper.js\n * this object get passed to modifiers and to the `onCreate` and `onUpdate` callbacks.\n * @name dataObject\n * @property {Object} data.instance The Popper.js instance\n * @property {String} data.placement Placement applied to popper\n * @property {String} data.originalPlacement Placement originally defined on init\n * @property {Boolean} data.flipped True if popper has been flipped by flip modifier\n * @property {Boolean} data.hide True if the reference element is out of boundaries, useful to know when to hide the popper.\n * @property {HTMLElement} data.arrowElement Node used as arrow by arrow modifier\n * @property {Object} data.styles Any CSS property defined here will be applied to the popper, it expects the JavaScript nomenclature (eg. `marginBottom`)\n * @property {Object} data.boundaries Offsets of the popper boundaries\n * @property {Object} data.offsets The measurements of popper, reference and arrow elements.\n * @property {Object} data.offsets.popper `top`, `left`, `width`, `height` values\n * @property {Object} data.offsets.reference `top`, `left`, `width`, `height` values\n * @property {Object} data.offsets.arrow] `top` and `left` offsets, only one of them will be different from 0\n */\n\n/**\n * Default options provided to Popper.js constructor.<br />\n * These can be overriden using the `options` argument of Popper.js.<br />\n * To override an option, simply pass as 3rd argument an object with the same\n * structure of this object, example:\n * ```\n * new Popper(ref, pop, {\n *   modifiers: {\n *     preventOverflow: { enabled: false }\n *   }\n * })\n * ```\n * @type {Object}\n * @static\n * @memberof Popper\n */\nvar Defaults$1 = {\n  /**\n   * Popper's placement\n   * @prop {Popper.placements} placement='bottom'\n   */\n  placement: 'bottom',\n\n  /**\n   * Whether events (resize, scroll) are initially enabled\n   * @prop {Boolean} eventsEnabled=true\n   */\n  eventsEnabled: true,\n\n  /**\n   * Set to true if you want to automatically remove the popper when\n   * you call the `destroy` method.\n   * @prop {Boolean} removeOnDestroy=false\n   */\n  removeOnDestroy: false,\n\n  /**\n   * Callback called when the popper is created.<br />\n   * By default, is set to no-op.<br />\n   * Access Popper.js instance with `data.instance`.\n   * @prop {onCreate}\n   */\n  onCreate: function onCreate() {},\n\n  /**\n   * Callback called when the popper is updated, this callback is not called\n   * on the initialization/creation of the popper, but only on subsequent\n   * updates.<br />\n   * By default, is set to no-op.<br />\n   * Access Popper.js instance with `data.instance`.\n   * @prop {onUpdate}\n   */\n  onUpdate: function onUpdate() {},\n\n  /**\n   * List of modifiers used to modify the offsets before they are applied to the popper.\n   * They provide most of the functionalities of Popper.js\n   * @prop {modifiers}\n   */\n  modifiers: modifiers\n};\n\n/**\n * @callback onCreate\n * @param {dataObject} data\n */\n\n/**\n * @callback onUpdate\n * @param {dataObject} data\n */\n\n// Utils\n// Methods\nvar Popper = function () {\n  /**\n   * Create a new Popper.js instance\n   * @class Popper\n   * @param {HTMLElement|referenceObject} reference - The reference element used to position the popper\n   * @param {HTMLElement} popper - The HTML element used as popper.\n   * @param {Object} options - Your custom options to override the ones defined in [Defaults](#defaults)\n   * @return {Object} instance - The generated Popper.js instance\n   */\n  function Popper(reference, popper) {\n    var _this = this;\n\n    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    classCallCheck(this, Popper);\n\n    this.scheduleUpdate = function () {\n      return requestAnimationFrame(_this.update);\n    };\n\n    // make update() debounced, so that it only runs at most once-per-tick\n    this.update = debounce(this.update.bind(this));\n\n    // with {} we create a new object with the options inside it\n    this.options = _extends({}, Popper.Defaults, options);\n\n    // init state\n    this.state = {\n      isDestroyed: false,\n      isCreated: false,\n      scrollParents: []\n    };\n\n    // get reference and popper elements (allow jQuery wrappers)\n    this.reference = reference.jquery ? reference[0] : reference;\n    this.popper = popper.jquery ? popper[0] : popper;\n\n    // Deep merge modifiers options\n    this.options.modifiers = {};\n    Object.keys(_extends({}, Popper.Defaults.modifiers, options.modifiers)).forEach(function (name) {\n      _this.options.modifiers[name] = _extends({}, Popper.Defaults.modifiers[name] || {}, options.modifiers ? options.modifiers[name] : {});\n    });\n\n    // Refactoring modifiers' list (Object => Array)\n    this.modifiers = Object.keys(this.options.modifiers).map(function (name) {\n      return _extends({\n        name: name\n      }, _this.options.modifiers[name]);\n    })\n    // sort the modifiers by order\n    .sort(function (a, b) {\n      return a.order - b.order;\n    });\n\n    // modifiers have the ability to execute arbitrary code when Popper.js get inited\n    // such code is executed in the same order of its modifier\n    // they could add new properties to their options configuration\n    // BE AWARE: don't add options to `options.modifiers.name` but to `modifierOptions`!\n    this.modifiers.forEach(function (modifierOptions) {\n      if (modifierOptions.enabled && isFunction(modifierOptions.onLoad)) {\n        modifierOptions.onLoad(_this.reference, _this.popper, _this.options, modifierOptions, _this.state);\n      }\n    });\n\n    // fire the first update to position the popper in the right place\n    this.update();\n\n    var eventsEnabled = this.options.eventsEnabled;\n    if (eventsEnabled) {\n      // setup event listeners, they will take care of update the position in specific situations\n      this.enableEventListeners();\n    }\n\n    this.state.eventsEnabled = eventsEnabled;\n  }\n\n  // We can't use class properties because they don't get listed in the\n  // class prototype and break stuff like Sinon stubs\n\n\n  createClass(Popper, [{\n    key: 'update',\n    value: function update$$1() {\n      return update.call(this);\n    }\n  }, {\n    key: 'destroy',\n    value: function destroy$$1() {\n      return destroy.call(this);\n    }\n  }, {\n    key: 'enableEventListeners',\n    value: function enableEventListeners$$1() {\n      return enableEventListeners.call(this);\n    }\n  }, {\n    key: 'disableEventListeners',\n    value: function disableEventListeners$$1() {\n      return disableEventListeners.call(this);\n    }\n\n    /**\n     * Schedule an update, it will run on the next UI update available\n     * @method scheduleUpdate\n     * @memberof Popper\n     */\n\n    /**\n     * Collection of utilities useful when writing custom modifiers.\n     * Starting from version 1.7, this method is available only if you\n     * include `popper-utils.js` before `popper.js`.\n     *\n     * **DEPRECATION**: This way to access PopperUtils is deprecated\n     * and will be removed in v2! Use the PopperUtils module directly instead.\n     * Due to the high instability of the methods contained in Utils, we can't\n     * guarantee them to follow semver. Use them at your own risk!\n     * @static\n     * @private\n     * @type {Object}\n     * @deprecated since version 1.8\n     * @member Utils\n     * @memberof Popper\n     */\n\n  }]);\n  return Popper;\n}();\n\n/**\n * The `referenceObject` is an object that provides an interface compatible with Popper.js\n * and lets you use it as replacement of a real DOM node.<br />\n * You can use this method to position a popper relatively to a set of coordinates\n * in case you don't have a DOM node to use as reference.\n *\n * ```\n * new Popper(referenceObject, popperNode);\n * ```\n *\n * NB: This feature isn't supported in Internet Explorer 10\n * @name referenceObject\n * @property {Function} data.getBoundingClientRect\n * A function that returns a set of coordinates compatible with the native `getBoundingClientRect` method.\n * @property {number} data.clientWidth\n * An ES6 getter that will return the width of the virtual reference element.\n * @property {number} data.clientHeight\n * An ES6 getter that will return the height of the virtual reference element.\n */\n\nPopper.Utils = (typeof window !== 'undefined' ? window : global).PopperUtils;\nPopper.placements = placements;\nPopper.Defaults = Defaults$1;\n\n/**\n* Returns the distance taking into account the default distance due to\n* the transform: translate setting in CSS\n* @param {Number} distance\n* @return {String}\n*/\nfunction getOffsetDistanceInPx(distance) {\n  return -(distance - Defaults.distance) + 'px';\n}\n\nvar classCallCheck$1 = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\nvar createClass$1 = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\n\n\n\n\n\n\nvar _extends$1 = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\n/**\n* Creates a new popper instance\n* @param {Object} refData\n* @return {Object} - the popper instance\n*/\nfunction createPopperInstance(refData) {\n  var el = refData.el,\n      popper = refData.popper,\n      _refData$settings = refData.settings,\n      position = _refData$settings.position,\n      popperOptions = _refData$settings.popperOptions,\n      offset = _refData$settings.offset,\n      distance = _refData$settings.distance,\n      flipDuration = _refData$settings.flipDuration;\n\n\n  var tooltip = popper.querySelector(Selectors.TOOLTIP);\n\n  var config = _extends$1({\n    placement: position\n  }, popperOptions || {}, {\n    modifiers: _extends$1({}, popperOptions ? popperOptions.modifiers : {}, {\n      flip: _extends$1({\n        padding: distance + 5 /* 5px from viewport boundary */\n      }, popperOptions && popperOptions.modifiers ? popperOptions.modifiers.flip : {}),\n      offset: _extends$1({\n        offset: offset\n      }, popperOptions && popperOptions.modifiers ? popperOptions.modifiers.offset : {})\n    }),\n    onUpdate: function onUpdate() {\n      var styles = tooltip.style;\n      styles.top = '';\n      styles.bottom = '';\n      styles.left = '';\n      styles.right = '';\n      styles[getCorePlacement(popper.getAttribute('x-placement'))] = getOffsetDistanceInPx(distance);\n    }\n  });\n\n  return new Popper(el, popper, config);\n}\n\n/**\n* Appends the popper and creates a popper instance if one does not exist\n* Also updates its position if need be and enables event listeners\n* @param {Object} refData -  the element/popper reference data\n*/\nfunction mountPopper(refData) {\n  var el = refData.el,\n      popper = refData.popper,\n      _refData$settings = refData.settings,\n      appendTo = _refData$settings.appendTo,\n      followCursor = _refData$settings.followCursor,\n      flipDuration = _refData$settings.flipDuration;\n\n  // Already on the DOM\n\n  if (appendTo.contains(popper)) return;\n\n  appendTo.appendChild(popper);\n\n  if (!refData.popperInstance) {\n    // Create instance if it hasn't been created yet\n    refData.popperInstance = createPopperInstance(refData);\n\n    // Update the popper's position whenever its content changes\n    // Not supported in IE10 unless polyfilled\n    if (window.MutationObserver) {\n      var styles = popper.style;\n      var observer = new MutationObserver(function () {\n        styles[prefix('transitionDuration')] = '0ms';\n        refData.popperInstance.update();\n        queueExecution(function () {\n          styles[prefix('transitionDuration')] = flipDuration + 'ms';\n        });\n      });\n      observer.observe(popper, {\n        childList: true,\n        subtree: true,\n        characterData: true\n      });\n      refData._mutationObserver = observer;\n    }\n  } else {\n    refData.popperInstance.update();\n\n    if (!followCursor || Browser.touch) {\n      refData.popperInstance.enableEventListeners();\n    }\n  }\n\n  // Since touch is determined dynamically, followCursor setting\n  // is set on mount\n  if (followCursor && !Browser.touch) {\n    el.addEventListener('mousemove', followCursorHandler);\n    refData.popperInstance.disableEventListeners();\n  }\n}\n\n/**\n* Updates a popper's position on each animation frame to make it stick to a moving element\n* @param {Object} refData\n*/\nfunction makeSticky(refData) {\n  var popper = refData.popper,\n      popperInstance = refData.popperInstance,\n      stickyDuration = refData.settings.stickyDuration;\n\n\n  var applyTransitionDuration = function applyTransitionDuration() {\n    return popper.style[prefix('transitionDuration')] = stickyDuration + 'ms';\n  };\n\n  var removeTransitionDuration = function removeTransitionDuration() {\n    return popper.style[prefix('transitionDuration')] = '';\n  };\n\n  var updatePosition = function updatePosition() {\n    popperInstance && popperInstance.scheduleUpdate();\n\n    applyTransitionDuration();\n\n    isVisible(popper) ? window.requestAnimationFrame(updatePosition) : removeTransitionDuration();\n  };\n\n  // Wait until Popper's position has been updated initially\n  queueExecution(updatePosition);\n}\n\n/**\n* Returns an object of settings to override global settings\n* @param {Element} el - the tooltipped element\n* @param {Object} instanceSettings\n* @return {Object} - individual settings\n*/\nfunction getIndividualSettings(el, instanceSettings) {\n  var settings = DefaultsKeys.reduce(function (acc, key) {\n    var val = el.getAttribute('data-' + key.toLowerCase()) || instanceSettings[key];\n\n    // Convert strings to booleans\n    if (val === 'false') val = false;\n    if (val === 'true') val = true;\n\n    // Convert number strings to true numbers\n    if (isFinite(val) && !isNaN(parseFloat(val))) {\n      val = parseFloat(val);\n    }\n\n    // Convert array strings to actual arrays\n    if (typeof val === 'string' && val.trim().charAt(0) === '[') {\n      val = JSON.parse(val);\n    }\n\n    acc[key] = val;\n\n    return acc;\n  }, {});\n\n  return _extends$1({}, instanceSettings, settings);\n}\n\n/**\n* Creates a popper element then returns it\n* @param {Number} id - the popper id\n* @param {String} title - the tooltip's `title` attribute\n* @param {Object} settings - individual settings\n* @return {Element} - the popper element\n*/\nfunction createPopperElement(id, title, settings) {\n  var position = settings.position,\n      distance = settings.distance,\n      arrow = settings.arrow,\n      animateFill = settings.animateFill,\n      inertia = settings.inertia,\n      animation = settings.animation,\n      arrowSize = settings.arrowSize,\n      size = settings.size,\n      theme = settings.theme,\n      html = settings.html,\n      zIndex = settings.zIndex,\n      interactive = settings.interactive;\n\n\n  var popper = document.createElement('div');\n  popper.setAttribute('class', 'tippy-popper');\n  popper.setAttribute('role', 'tooltip');\n  popper.setAttribute('aria-hidden', 'true');\n  popper.setAttribute('id', 'tippy-tooltip-' + id);\n  popper.style.zIndex = zIndex;\n\n  var tooltip = document.createElement('div');\n  tooltip.setAttribute('class', 'tippy-tooltip tippy-tooltip--' + size + ' leave');\n  tooltip.setAttribute('data-animation', animation);\n\n  theme.split(' ').forEach(function (t) {\n    tooltip.classList.add(t + '-theme');\n  });\n\n  if (arrow) {\n    // Add an arrow\n    var _arrow = document.createElement('div');\n    _arrow.setAttribute('class', 'arrow-' + arrowSize);\n    _arrow.setAttribute('x-arrow', '');\n    tooltip.appendChild(_arrow);\n  }\n\n  if (animateFill) {\n    // Create animateFill circle element for animation\n    tooltip.setAttribute('data-animatefill', '');\n    var circle = document.createElement('div');\n    circle.setAttribute('class', 'leave');\n    circle.setAttribute('x-circle', '');\n    tooltip.appendChild(circle);\n  }\n\n  if (inertia) {\n    // Change transition timing function cubic bezier\n    tooltip.setAttribute('data-inertia', '');\n  }\n\n  if (interactive) {\n    tooltip.setAttribute('data-interactive', '');\n  }\n\n  // Tooltip content (text or HTML)\n  var content = document.createElement('div');\n  content.setAttribute('class', 'tippy-tooltip-content');\n\n  if (html) {\n    var templateId = void 0;\n\n    if (html instanceof Element) {\n      content.appendChild(html);\n      templateId = '#' + html.id || 'tippy-html-template';\n    } else {\n      content.innerHTML = document.getElementById(html.replace('#', '')).innerHTML;\n      templateId = html;\n    }\n\n    popper.classList.add('html-template');\n    interactive && popper.setAttribute('tabindex', '-1');\n    tooltip.setAttribute('data-template-id', templateId);\n  } else {\n    content.innerHTML = title;\n  }\n\n  // Init distance. Further updates are made in the popper instance's `onUpdate()` method\n  tooltip.style[getCorePlacement(position)] = getOffsetDistanceInPx(distance);\n\n  tooltip.appendChild(content);\n  popper.appendChild(tooltip);\n\n  return popper;\n}\n\n/**\n* Creates a trigger\n* @param {Object} event - the custom event specified in the `trigger` setting\n* @param {Element} el - tooltipped element\n* @param {Object} handlers - the handlers for each listener\n* @param {Boolean} touchHold\n* @return {Array} - array of listener objects\n*/\nfunction createTrigger(event, el, handlers, touchHold) {\n  var listeners = [];\n\n  if (event === 'manual') return listeners;\n\n  // Enter\n  el.addEventListener(event, handlers.handleTrigger);\n  listeners.push({\n    event: event,\n    handler: handlers.handleTrigger\n  });\n\n  // Leave\n  if (event === 'mouseenter') {\n    if (Browser.SUPPORTS_TOUCH && touchHold) {\n      el.addEventListener('touchstart', handlers.handleTrigger);\n      listeners.push({\n        event: 'touchstart',\n        handler: handlers.handleTrigger\n      });\n      el.addEventListener('touchend', handlers.handleMouseleave);\n      listeners.push({\n        event: 'touchend',\n        handler: handlers.handleMouseleave\n      });\n    }\n\n    el.addEventListener('mouseleave', handlers.handleMouseleave);\n    listeners.push({\n      event: 'mouseleave',\n      handler: handlers.handleMouseleave\n    });\n  }\n\n  if (event === 'focus') {\n    el.addEventListener('blur', handlers.handleBlur);\n    listeners.push({\n      event: 'blur',\n      handler: handlers.handleBlur\n    });\n  }\n\n  return listeners;\n}\n\n/**\n* Determines if the mouse's cursor is outside the interactive border\n* @param {MouseEvent} event\n* @param {Element} popper\n* @param {Object} settings\n* @return {Boolean}\n*/\nfunction cursorIsOutsideInteractiveBorder(event, popper, settings) {\n  if (!popper.getAttribute('x-placement')) return true;\n\n  var x = event.clientX,\n      y = event.clientY;\n  var interactiveBorder = settings.interactiveBorder,\n      distance = settings.distance;\n\n\n  var rect = popper.getBoundingClientRect();\n  var corePosition = getCorePlacement(popper.getAttribute('x-placement'));\n  var borderWithDistance = interactiveBorder + distance;\n\n  var exceeds = {\n    top: rect.top - y > interactiveBorder,\n    bottom: y - rect.bottom > interactiveBorder,\n    left: rect.left - x > interactiveBorder,\n    right: x - rect.right > interactiveBorder\n  };\n\n  switch (corePosition) {\n    case 'top':\n      exceeds.top = rect.top - y > borderWithDistance;\n      break;\n    case 'bottom':\n      exceeds.bottom = y - rect.bottom > borderWithDistance;\n      break;\n    case 'left':\n      exceeds.left = rect.left - x > borderWithDistance;\n      break;\n    case 'right':\n      exceeds.right = x - rect.right > borderWithDistance;\n      break;\n  }\n\n  return exceeds.top || exceeds.bottom || exceeds.left || exceeds.right;\n}\n\n/**\n* Returns relevant listener callbacks for each ref\n* @param {Element} el\n* @param {Element} popper\n* @param {Object} settings\n* @return {Object} - relevant listener handlers\n*/\nfunction getEventListenerHandlers(el, popper, settings) {\n  var _this = this;\n\n  var position = settings.position,\n      delay = settings.delay,\n      duration = settings.duration,\n      interactive = settings.interactive,\n      interactiveBorder = settings.interactiveBorder,\n      distance = settings.distance,\n      hideOnClick = settings.hideOnClick,\n      trigger = settings.trigger,\n      touchHold = settings.touchHold,\n      touchWait = settings.touchWait;\n\n\n  var showDelay = void 0,\n      hideDelay = void 0;\n\n  var clearTimeouts = function clearTimeouts() {\n    clearTimeout(showDelay);\n    clearTimeout(hideDelay);\n  };\n\n  var _show = function _show() {\n    clearTimeouts();\n\n    // Not hidden. For clicking when it also has a `focus` event listener\n    if (isVisible(popper)) return;\n\n    var _delay = Array.isArray(delay) ? delay[0] : delay;\n\n    if (delay) {\n      showDelay = setTimeout(function () {\n        return _this.show(popper);\n      }, _delay);\n    } else {\n      _this.show(popper);\n    }\n  };\n\n  var show = function show(event) {\n    return _this.callbacks.wait ? _this.callbacks.wait.call(popper, _show, event) : _show();\n  };\n\n  var hide = function hide() {\n    clearTimeouts();\n\n    var _delay = Array.isArray(delay) ? delay[1] : delay;\n\n    if (delay) {\n      hideDelay = setTimeout(function () {\n        return _this.hide(popper);\n      }, _delay);\n    } else {\n      _this.hide(popper);\n    }\n  };\n\n  var handleTrigger = function handleTrigger(event) {\n    var mouseenterTouch = event.type === 'mouseenter' && Browser.SUPPORTS_TOUCH && Browser.touch;\n\n    if (mouseenterTouch && touchHold) return;\n\n    // Toggle show/hide when clicking click-triggered tooltips\n    var isClick = event.type === 'click';\n    var isNotPersistent = hideOnClick !== 'persistent';\n\n    isClick && isVisible(popper) && isNotPersistent ? hide() : show(event);\n\n    if (mouseenterTouch && Browser.iOS() && el.click) {\n      el.click();\n    }\n  };\n\n  var handleMouseleave = function handleMouseleave(event) {\n\n    // Don't fire 'mouseleave', use the 'touchend'\n    if (event.type === 'mouseleave' && Browser.SUPPORTS_TOUCH && Browser.touch && touchHold) {\n      return;\n    }\n\n    if (interactive) {\n      // Temporarily handle mousemove to check if the mouse left somewhere\n      // other than its popper\n      var handleMousemove = function handleMousemove(event) {\n\n        var triggerHide = function triggerHide() {\n          document.body.removeEventListener('mouseleave', hide);\n          document.removeEventListener('mousemove', handleMousemove);\n          hide();\n        };\n\n        var closestTooltippedEl = closest(event.target, Selectors.TOOLTIPPED_EL);\n\n        var isOverPopper = closest(event.target, Selectors.POPPER) === popper;\n        var isOverEl = closestTooltippedEl === el;\n        var isClickTriggered = trigger.indexOf('click') !== -1;\n        var isOverOtherTooltippedEl = closestTooltippedEl && closestTooltippedEl !== el;\n\n        if (isOverOtherTooltippedEl) {\n          return triggerHide();\n        }\n\n        if (isOverPopper || isOverEl || isClickTriggered) return;\n\n        if (cursorIsOutsideInteractiveBorder(event, popper, settings)) {\n          triggerHide();\n        }\n      };\n\n      document.body.addEventListener('mouseleave', hide);\n      document.addEventListener('mousemove', handleMousemove);\n\n      return;\n    }\n\n    // If it's not interactive, just hide it\n    hide();\n  };\n\n  var handleBlur = function handleBlur(event) {\n    // Ignore blur on touch devices, if there is no `relatedTarget`, hide\n    // If the related target is a popper, ignore\n    if (!event.relatedTarget || Browser.touch) return;\n    if (closest(event.relatedTarget, Selectors.POPPER)) return;\n\n    hide();\n  };\n\n  return {\n    handleTrigger: handleTrigger,\n    handleMouseleave: handleMouseleave,\n    handleBlur: handleBlur\n  };\n}\n\nvar idCounter = 1;\n\n/**\n* Creates tooltips for all el elements that match the instance's selector\n* @param {Element[]} els\n* @return {Object[]} Array of ref data objects\n*/\nfunction createTooltips(els) {\n  var _this = this;\n\n  return els.reduce(function (a, el) {\n    var id = idCounter;\n\n    var settings = _this.settings.performance ? _this.settings : getIndividualSettings(el, _this.settings);\n    // animateFill is disabled if an arrow is true\n    if (settings.arrow) settings.animateFill = false;\n\n    var html = settings.html,\n        trigger = settings.trigger,\n        touchHold = settings.touchHold;\n\n\n    var title = el.getAttribute('title');\n    if (!title && !html) return a;\n\n    el.setAttribute('data-tooltipped', '');\n    el.setAttribute('aria-describedby', 'tippy-tooltip-' + id);\n    removeTitle(el);\n\n    var popper = createPopperElement(id, title, settings);\n    var handlers = getEventListenerHandlers.call(_this, el, popper, settings);\n\n    var listeners = [];\n\n    trigger.trim().split(' ').forEach(function (event) {\n      return listeners = listeners.concat(createTrigger(event, el, handlers, touchHold));\n    });\n\n    a.push({\n      id: id,\n      el: el,\n      popper: popper,\n      settings: settings,\n      listeners: listeners,\n      tippyInstance: _this\n    });\n\n    idCounter++;\n\n    return a;\n  }, []);\n}\n\n/* Utility functions */\n/* Core library functions */\n/**\n* @param {String|Element|Element[]} selector\n* @param {Object} settings (optional) - the object of settings to be applied to the instance\n*/\n\nvar Tippy = function () {\n  function Tippy(selector) {\n    var settings = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    classCallCheck$1(this, Tippy);\n\n    // Use default browser tooltip on unsupported browsers\n    if (!Browser.SUPPORTED) return;\n\n    // DOM is presumably mostly ready (for document.body) by instantiation time\n    init();\n\n    this.state = {\n      destroyed: false\n    };\n\n    this.selector = selector;\n\n    this.settings = _extends$1({}, Defaults, settings);\n\n    // DEPRECATION: `on` prefixed callbacks are now preferred over non-\n    // as it better indicates it's a callback function\n    this.callbacks = {\n      wait: settings.wait,\n      show: settings.onShow || settings.show || noop,\n      shown: settings.onShown || settings.shown || noop,\n      hide: settings.onHide || settings.hide || noop,\n      hidden: settings.onHidden || settings.hidden || noop\n    };\n\n    this.store = createTooltips.call(this, getArrayOfElements(selector));\n    Store.push.apply(Store, this.store);\n  }\n\n  /**\n  * Returns the reference element's popper element\n  * @param {Element} el\n  * @return {Element}\n  */\n\n\n  createClass$1(Tippy, [{\n    key: 'getPopperElement',\n    value: function getPopperElement(el) {\n      try {\n        return find(this.store, function (refData) {\n          return refData.el === el;\n        }).popper;\n      } catch (e) {\n        console.error('[getPopperElement]: Element passed as the argument does not exist in the instance');\n      }\n    }\n\n    /**\n    * Returns a popper's reference element\n    * @param {Element} popper\n    * @return {Element}\n    */\n\n  }, {\n    key: 'getReferenceElement',\n    value: function getReferenceElement(popper) {\n      try {\n        return find(this.store, function (refData) {\n          return refData.popper === popper;\n        }).el;\n      } catch (e) {\n        console.error('[getReferenceElement]: Popper passed as the argument does not exist in the instance');\n      }\n    }\n\n    /**\n    * Returns the reference data object from either the reference element or popper element\n    * @param {Element} x (reference element or popper)\n    * @return {Object}\n    */\n\n  }, {\n    key: 'getReferenceData',\n    value: function getReferenceData(x) {\n      return find(this.store, function (refData) {\n        return refData.el === x || refData.popper === x;\n      });\n    }\n\n    /**\n    * Shows a popper\n    * @param {Element} popper\n    * @param {Number} customDuration (optional)\n    */\n\n  }, {\n    key: 'show',\n    value: function show(popper, customDuration) {\n      var _this = this;\n\n      if (this.state.destroyed) return;\n\n      this.callbacks.show.call(popper);\n\n      var refData = find(this.store, function (refData) {\n        return refData.popper === popper;\n      });\n      var tooltip = popper.querySelector(Selectors.TOOLTIP);\n      var circle = popper.querySelector(Selectors.CIRCLE);\n      var content = popper.querySelector(Selectors.CONTENT);\n\n      var el = refData.el,\n          _refData$settings = refData.settings,\n          appendTo = _refData$settings.appendTo,\n          sticky = _refData$settings.sticky,\n          interactive = _refData$settings.interactive,\n          followCursor = _refData$settings.followCursor,\n          flipDuration = _refData$settings.flipDuration,\n          duration = _refData$settings.duration,\n          dynamicTitle = _refData$settings.dynamicTitle;\n\n\n      if (dynamicTitle) {\n        var title = el.getAttribute('title');\n        if (title) {\n          content.innerHTML = title;\n          removeTitle(el);\n        }\n      }\n\n      var _duration = customDuration !== undefined ? customDuration : Array.isArray(duration) ? duration[0] : duration;\n\n      // Remove transition duration (prevent a transition when popper changes position)\n      applyTransitionDuration([popper, tooltip, circle], 0);\n\n      mountPopper(refData);\n\n      popper.style.visibility = 'visible';\n      popper.setAttribute('aria-hidden', 'false');\n\n      // Wait for popper to update position and alter x-placement\n      queueExecution(function () {\n        if (!isVisible(popper)) return;\n\n        // Sometimes the arrow will not be in the correct position,\n        // force another update\n        if (!followCursor || Browser.touch) {\n          refData.popperInstance.update();\n        }\n\n        // Re-apply transition durations\n        applyTransitionDuration([tooltip, circle], _duration);\n        if (!followCursor || Browser.touch) {\n          applyTransitionDuration([popper], flipDuration);\n        }\n\n        // Make content fade out a bit faster than the tooltip if `animateFill`\n        if (circle) content.style.opacity = 1;\n\n        // Interactive tooltips receive a class of 'active'\n        interactive && el.classList.add('active');\n\n        // Update popper's position on every animation frame\n        sticky && makeSticky(refData);\n\n        // Repaint/reflow is required for CSS transition when appending\n        triggerReflow(tooltip, circle);\n\n        modifyClassList([tooltip, circle], function (list) {\n          list.contains('tippy-notransition') && list.remove('tippy-notransition');\n          list.remove('leave');\n          list.add('enter');\n        });\n\n        // Wait for transitions to complete\n        onTransitionEnd(refData, _duration, function () {\n          if (!isVisible(popper) || refData._onShownFired) return;\n\n          // Focus interactive tooltips only\n          interactive && popper.focus();\n\n          // Remove transitions from tooltip\n          tooltip.classList.add('tippy-notransition');\n\n          // Prevents shown() from firing more than once from early transition cancellations\n          refData._onShownFired = true;\n\n          _this.callbacks.shown.call(popper);\n        });\n      });\n    }\n\n    /**\n    * Hides a popper\n    * @param {Element} popper\n    * @param {Number} customDuration (optional)\n    */\n\n  }, {\n    key: 'hide',\n    value: function hide(popper, customDuration) {\n      var _this2 = this;\n\n      if (this.state.destroyed) return;\n\n      this.callbacks.hide.call(popper);\n\n      var refData = find(this.store, function (refData) {\n        return refData.popper === popper;\n      });\n      var tooltip = popper.querySelector(Selectors.TOOLTIP);\n      var circle = popper.querySelector(Selectors.CIRCLE);\n      var content = popper.querySelector(Selectors.CONTENT);\n\n      var el = refData.el,\n          _refData$settings2 = refData.settings,\n          appendTo = _refData$settings2.appendTo,\n          sticky = _refData$settings2.sticky,\n          interactive = _refData$settings2.interactive,\n          followCursor = _refData$settings2.followCursor,\n          html = _refData$settings2.html,\n          trigger = _refData$settings2.trigger,\n          duration = _refData$settings2.duration;\n\n\n      var _duration = customDuration !== undefined ? customDuration : Array.isArray(duration) ? duration[1] : duration;\n\n      refData._onShownFired = false;\n      interactive && el.classList.remove('active');\n\n      popper.style.visibility = 'hidden';\n      popper.setAttribute('aria-hidden', 'true');\n\n      applyTransitionDuration([tooltip, circle, circle ? content : null], _duration);\n\n      if (circle) content.style.opacity = 0;\n\n      modifyClassList([tooltip, circle], function (list) {\n        list.contains('tippy-tooltip') && list.remove('tippy-notransition');\n        list.remove('enter');\n        list.add('leave');\n      });\n\n      // Re-focus click-triggered html elements\n      // and the tooltipped element IS in the viewport (otherwise it causes unsightly scrolling\n      // if the tooltip is closed and the element isn't in the viewport anymore)\n      if (html && trigger.indexOf('click') !== -1 && elementIsInViewport(el)) {\n        el.focus();\n      }\n\n      // Wait for transitions to complete\n      onTransitionEnd(refData, _duration, function () {\n        if (isVisible(popper) || !appendTo.contains(popper)) return;\n\n        el.removeEventListener('mousemove', followCursorHandler);\n\n        refData.popperInstance.disableEventListeners();\n\n        appendTo.removeChild(popper);\n\n        _this2.callbacks.hidden.call(popper);\n      });\n    }\n\n    /**\n    * Updates a popper with new content\n    * @param {Element} popper\n    */\n\n  }, {\n    key: 'update',\n    value: function update(popper) {\n      if (this.state.destroyed) return;\n\n      var refData = find(this.store, function (refData) {\n        return refData.popper === popper;\n      });\n      var content = popper.querySelector(Selectors.CONTENT);\n      var el = refData.el,\n          html = refData.settings.html;\n\n\n      if (html instanceof Element) {\n        console.warn('Aborted: update() should not be used if `html` is a DOM element');\n        return;\n      }\n\n      content.innerHTML = html ? document.getElementById(html.replace('#', '')).innerHTML : el.getAttribute('title') || el.getAttribute('data-original-title');\n\n      if (!html) removeTitle(el);\n    }\n\n    /**\n    * Destroys a popper\n    * @param {Element} popper\n    * @param {Boolean} _isLast - private param used by destroyAll to optimize\n    */\n\n  }, {\n    key: 'destroy',\n    value: function destroy(popper, _isLast) {\n      var _this3 = this;\n\n      if (this.state.destroyed) return;\n\n      var refData = find(this.store, function (refData) {\n        return refData.popper === popper;\n      });\n\n      var el = refData.el,\n          popperInstance = refData.popperInstance,\n          listeners = refData.listeners,\n          _mutationObserver = refData._mutationObserver;\n\n      // Ensure the popper is hidden\n\n      if (isVisible(popper)) {\n        this.hide(popper, 0);\n      }\n\n      // Remove Tippy-only event listeners from tooltipped element\n      listeners.forEach(function (listener) {\n        return el.removeEventListener(listener.event, listener.handler);\n      });\n\n      // Restore original title\n      el.setAttribute('title', el.getAttribute('data-original-title'));\n\n      el.removeAttribute('data-original-title');\n      el.removeAttribute('data-tooltipped');\n      el.removeAttribute('aria-describedby');\n\n      popperInstance && popperInstance.destroy();\n      _mutationObserver && _mutationObserver.disconnect();\n\n      // Remove from store\n      Store.splice(findIndex(Store, function (refData) {\n        return refData.popper === popper;\n      }), 1);\n\n      // Ensure filter is called only once\n      if (_isLast === undefined || _isLast) {\n        this.store = Store.filter(function (refData) {\n          return refData.tippyInstance === _this3;\n        });\n      }\n    }\n\n    /**\n    * Destroys all tooltips created by the instance\n    */\n\n  }, {\n    key: 'destroyAll',\n    value: function destroyAll() {\n      var _this4 = this;\n\n      if (this.state.destroyed) return;\n\n      var storeLength = this.store.length;\n\n      this.store.forEach(function (_ref, index) {\n        var popper = _ref.popper;\n\n        _this4.destroy(popper, index === storeLength - 1);\n      });\n\n      this.store = null;\n      this.state.destroyed = true;\n    }\n  }]);\n  return Tippy;\n}();\n\nfunction tippy$2(selector, settings) {\n  return new Tippy(selector, settings);\n}\n\ntippy$2.Browser = Browser;\ntippy$2.Defaults = Defaults;\ntippy$2.disableDynamicInputDetection = function () {\n  return Browser.dynamicInputDetection = false;\n};\ntippy$2.enableDynamicInputDetection = function () {\n  return Browser.dynamicInputDetection = true;\n};\n\nreturn tippy$2;\n\n})));\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n\n},{}],2:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _formValidation = require('../formValidation/formValidation');\n\nvar _formValidation2 = _interopRequireDefault(_formValidation);\n\nvar _formTooltip = require('../formTooltip/formTooltip');\n\nvar _formTooltip2 = _interopRequireDefault(_formTooltip);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * Creates a new Form class\n */\nvar Form = function () {\n    /**\n     * Constructor\n     */\n    function Form() {\n        _classCallCheck(this, Form);\n\n        this._setupListeners = this._setupListeners.bind(this);\n        this._validate = this._validate.bind(this);\n        this._getData = this._getData.bind(this);\n        this._setData = this._setData.bind(this);\n        this._submit = this._submit.bind(this);\n        this._request = this._request.bind(this);\n        this._success = this._success.bind(this);\n        this._error = this._error.bind(this);\n        this._progress = this._progress.bind(this);\n        this._toggleLoading = this._toggleLoading.bind(this);\n        this._resetResult = this._resetResult.bind(this);\n        this._resetForm = this._resetForm.bind(this);\n        this._getFormSettings = this._getFormSettings.bind(this);\n        this._resetErrors = this._resetErrors.bind(this);\n        this._setErrors = this._setErrors.bind(this);\n\n        this.form = document.querySelector('#myForm');\n        this.submitBtn = document.querySelector('#submitButton');\n        this.resultContainer = document.querySelector('#resultContainer');\n        this.rules = {\n            fio: {\n                fullName: true\n            },\n            email: {\n                email: true\n            },\n            phone: {\n                phone: true\n            }\n        };\n        this.settings = {\n            domains: ['ya.ru', 'yandex.ru', 'yandex.ua', 'yandex.by', 'yandex.kz', 'yandex.com'],\n            phoneSumLimit: 30\n        };\n        this.fieldsFilter = ['fio', 'email', 'phone'];\n\n        this._setupListeners();\n        this.formValidation = new _formValidation2.default({\n            form: this.form,\n            rules: this.rules,\n            settings: this.settings\n        });\n        this.formTooltip = new _formTooltip2.default();\n\n        return {\n            validate: this._validate,\n            getData: this._getData,\n            setData: this._setData,\n            submit: this._submit\n        };\n    }\n\n    /**\n     * Add events listeners\n     * @private\n     */\n\n\n    _createClass(Form, [{\n        key: '_setupListeners',\n        value: function _setupListeners() {\n            var _this = this;\n\n            this.submitBtn.addEventListener('click', function (event) {\n                event.preventDefault();\n\n                _this._submit();\n            });\n        }\n\n        /**\n         * Validate form\n         * @returns {Object}\n         * @private\n         */\n\n    }, {\n        key: '_validate',\n        value: function _validate() {\n            return this.formValidation.validate();\n        }\n\n        /**\n         * Retrieve data from inputs\n         * @returns {Object} data\n         * @private\n         */\n\n    }, {\n        key: '_getData',\n        value: function _getData() {\n            var inputs = this.form.querySelectorAll('input');\n            var data = {};\n\n            inputs.forEach(function (input, index) {\n                var name = input.name || 'input-' + index;\n                var value = input.value || '';\n\n                data[name] = value;\n            });\n\n            return data;\n        }\n\n        /**\n         * Set data for inputs\n         * @param {Object} data\n         * @private\n         */\n\n    }, {\n        key: '_setData',\n        value: function _setData(data) {\n            for (var inputName in data) {\n\n                if (this.fieldsFilter.indexOf(inputName) !== -1) {\n\n                    var input = this.form.querySelector('[name=' + inputName + ']');\n\n                    if (input) {\n\n                        var value = data[inputName];\n\n                        input.value = value;\n                    }\n                }\n            }\n        }\n\n        /**\n         * Submit form\n         * @private\n         */\n\n    }, {\n        key: '_submit',\n        value: function _submit() {\n            this._resetErrors();\n            var form = this._validate();\n\n            if (form.isValid) {\n\n                var options = this._getFormSettings();\n\n                this._resetResult();\n\n                this._toggleLoading();\n\n                this._request(options);\n            } else {\n\n                this._setErrors(form.errorFields);\n            }\n        }\n\n        /**\n         * Send request to server\n         * @param {Object} options\n         * @private\n         */\n\n    }, {\n        key: '_request',\n        value: function _request(options) {\n            var _this2 = this;\n\n            if (!options.url) {\n\n                /*eslint-disable no-console*/\n                console.log('Form action attribute is not specified!');\n                /*eslint-enable no-console*/\n\n                return false;\n            }\n\n            var req = fetch(options.url, options.settings);\n\n            req.then(function (blob) {\n                return blob.json();\n            }).then(function (data) {\n                var method = data.status ? '_' + data.status : '';\n\n                if (!method) {\n\n                    /*eslint-disable no-console*/\n                    console.log('Can not identify response status!');\n                    /*eslint-enable no-console*/\n                }\n\n                if (_this2[method]) {\n\n                    _this2[method](data);\n                } else {\n\n                    /*eslint-disable no-console*/\n                    console.log('Can not find response method!');\n                    /*eslint-enable no-console*/\n                }\n            }).catch(function (error) {\n                /*eslint-disable no-console*/\n                console.log(error);\n                /*eslint-enable no-console*/\n            });\n        }\n\n        /**\n         * Handle success response\n         * @param {Object} data\n         * @private\n         */\n\n    }, {\n        key: '_success',\n        value: function _success(data) {\n            data.text = 'Success';\n\n            this._resetResult();\n            this.resultContainer.classList.add('success');\n            this.resultContainer.textContent = data.text;\n            this._toggleLoading();\n        }\n\n        /**\n         * Handle error response\n         * @param {Object} data\n         * @private\n         */\n\n    }, {\n        key: '_error',\n        value: function _error(data) {\n            this._resetResult();\n            this.resultContainer.classList.add('error');\n            this.resultContainer.textContent = data.reason;\n            this._toggleLoading();\n        }\n\n        /**\n         * Handle progress response\n         * @param {Object} data\n         * @private\n         */\n\n    }, {\n        key: '_progress',\n        value: function _progress(data) {\n            var _this3 = this;\n\n            data.timeout = data.timeout ? data.timeout : 3000;\n\n            this.resultContainer.classList.add('progress');\n\n            setTimeout(function () {\n                var options = _this3._getFormSettings();\n\n                _this3._request(options);\n            }, data.timeout);\n        }\n\n        /**\n         * Toggle loading state for form element\n         * @private\n         */\n\n    }, {\n        key: '_toggleLoading',\n        value: function _toggleLoading() {\n            this.form.classList.toggle('loading');\n        }\n\n        /**\n         * Reset result container state\n         * @private\n         */\n\n    }, {\n        key: '_resetResult',\n        value: function _resetResult() {\n            this.resultContainer.classList.remove('success', 'error', 'progress');\n            this.resultContainer.textContent = '';\n        }\n\n        /**\n         * Reset form fields\n         * @private\n         */\n\n    }, {\n        key: '_resetForm',\n        value: function _resetForm() {\n            this.form.reset();\n        }\n\n        /**\n         * Get form settings\n         * @returns {Object}\n         * @private\n         */\n\n    }, {\n        key: '_getFormSettings',\n        value: function _getFormSettings() {\n            return {\n                url: this.form.action,\n                settings: {\n                    method: this.form.method ? this.form.method : 'get'\n                }\n            };\n        }\n\n        /**\n         * Reset error state for input\n         * @private\n         */\n\n    }, {\n        key: '_resetErrors',\n        value: function _resetErrors() {\n            var errorInputs = this.form.querySelectorAll('.error');\n\n            if (errorInputs) {\n\n                errorInputs.forEach(function (input) {\n                    return input.classList.remove('error');\n                });\n            }\n        }\n\n        /**\n         * Set error state for input\n         * @param {Array} fieldNames\n         * @private\n         */\n\n    }, {\n        key: '_setErrors',\n        value: function _setErrors(fieldNames) {\n            var _this4 = this;\n\n            fieldNames.forEach(function (fieldName) {\n                var field = _this4.form.querySelector('[name=' + fieldName + ']');\n\n                if (field) {\n\n                    field.classList.add('error');\n                }\n            });\n        }\n    }]);\n\n    return Form;\n}();\n\n/**\n * Init Form\n * @returns {Form}\n */\n\n\nvar init = function init() {\n    return new Form();\n};\n\nexports.default = { init: init };\n\n},{\"../formTooltip/formTooltip\":3,\"../formValidation/formValidation\":4}],3:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _tippy = require('tippy.js');\n\nvar _tippy2 = _interopRequireDefault(_tippy);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * Creates a new FormTooltip class\n */\nvar FormTooltip = function () {\n    /**\n     * Constructor\n     */\n    function FormTooltip() {\n        _classCallCheck(this, FormTooltip);\n\n        this.init = this.init.bind(this);\n\n        this.init();\n    }\n\n    /**\n     * Init tooltips\n     */\n\n\n    _createClass(FormTooltip, [{\n        key: 'init',\n        value: function init() {\n            var tooltips = document.querySelectorAll('.formTooltip__content');\n\n            tooltips.forEach(function (tooltip) {\n                (0, _tippy2.default)(tooltip, {\n                    arrow: true,\n                    trigger: 'click',\n                    size: 'small'\n                });\n            });\n        }\n    }]);\n\n    return FormTooltip;\n}();\n\nexports.default = FormTooltip;\n\n},{\"tippy.js\":1}],4:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * Creates a new FormValidation class\n */\nvar FormValidation = function () {\n    /**\n     * Constructor\n     * @param {Object} options\n     * @returns {Object}\n     */\n    function FormValidation(options) {\n        _classCallCheck(this, FormValidation);\n\n        this._checkOptions = this._checkOptions.bind(this);\n        this._fullName = this._fullName.bind(this);\n        this._email = this._email.bind(this);\n        this._phone = this._phone.bind(this);\n        this._validate = this._validate.bind(this);\n\n        this.options = this._checkOptions(options);\n        this.methods = {\n            fullName: this._fullName,\n            email: this._email,\n            phone: this._phone\n        };\n\n        return this.options ? { validate: this._validate } : {};\n    }\n\n    /**\n     * Check options\n     * @param {Object} options\n     * @returns {Object} options\n     * @private\n     */\n\n\n    _createClass(FormValidation, [{\n        key: '_checkOptions',\n        value: function _checkOptions(options) {\n            if (options.form instanceof Element === false) {\n\n                /*eslint-disable no-console*/\n                console.log('Form must be html element!');\n                /*eslint-enable no-console*/\n\n                return false;\n            }\n\n            options.rules = options.rules ? options.rules : {};\n            options.settings.domains = options.settings.domains ? options.settings.domains : [];\n            options.settings.phoneSumLimit = options.settings.phoneSumLimit ? options.settings.phoneSumLimit : 0;\n\n            return options;\n        }\n\n        /**\n         * Check full name\n         * @param {String} value\n         * @returns {Boolean}\n         * @private\n         */\n\n    }, {\n        key: '_fullName',\n        value: function _fullName(value) {\n            return (/^([\\S]+)\\s([\\S]+)\\s([\\S]+)/.test(value)\n            );\n        }\n\n        /**\n         * Check email\n         * @param {String} value\n         * @returns {Boolean}\n         * @private\n         */\n\n    }, {\n        key: '_email',\n        value: function _email(value) {\n            var domains = this.options.settings.domains;\n            var idx = value.lastIndexOf('@');\n            var domain = idx > -1 ? value.slice(idx + 1) : '';\n\n            if (domains.indexOf(domain) === -1) {\n\n                return false;\n            }\n\n            return (/^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test(value)\n            );\n        }\n\n        /**\n         * Check phone\n         * @param {String} value\n         * @returns {Boolean}\n         * @private\n         */\n\n    }, {\n        key: '_phone',\n        value: function _phone(value) {\n            var sumLimit = this.options.settings.phoneSumLimit;\n            var digits = value.replace(/[^/\\d]/g, '');\n            var sum = digits.split('').reduce(function (sum, number) {\n                return sum + parseInt(number);\n            }, 0);\n\n            if (sum > sumLimit) {\n\n                return false;\n            }\n\n            return (/^\\+7\\(([0-9]{3})\\)([0-9]{3})[-]([0-9]{2})[-]([0-9]{2})$/.test(value)\n            );\n        }\n\n        /**\n         * Validate fields\n         * @returns {Object} validationResult\n         * @private\n         */\n\n    }, {\n        key: '_validate',\n        value: function _validate() {\n            var validationResult = {\n                isValid: false,\n                errorFields: []\n            };\n\n            var form = this.options.form;\n            var rules = this.options.rules;\n            var methods = this.methods;\n\n            for (var fieldName in rules) {\n                if (rules.hasOwnProperty(fieldName)) {\n\n                    var field = form.querySelector('[name=' + fieldName + ']');\n                    var value = field.value;\n                    var fieldRules = rules[fieldName];\n\n                    for (var rule in fieldRules) {\n                        if (fieldRules.hasOwnProperty(rule) && fieldRules[rule]) {\n\n                            if (methods[rule]) {\n\n                                var result = methods[rule](value);\n\n                                if (!result) {\n\n                                    validationResult.errorFields.push(fieldName);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n\n            validationResult.isValid = validationResult.errorFields.length === 0;\n\n            return validationResult;\n        }\n    }]);\n\n    return FormValidation;\n}();\n\nexports.default = FormValidation;\n\n},{}],5:[function(require,module,exports){\n'use strict';\n\nvar _form = require('../blocks/form/form');\n\nvar _form2 = _interopRequireDefault(_form);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Init form\n */\nvar form = _form2.default.init();\n\n/**\n * Export form methods to the global scope\n */\nif (window) {\n\n    window.MyForm = {\n        validate: form.validate,\n        getData: form.getData,\n        setData: form.setData,\n        submit: form.submit\n    };\n}\n\n},{\"../blocks/form/form\":2}]},{},[5])\n\n","(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n\ttypeof define === 'function' && define.amd ? define(factory) :\n\t(global.tippy = factory());\n}(this, (function () { 'use strict';\n\nvar Browser = {};\n\nif (typeof window !== 'undefined') {\n  Browser.SUPPORTED = 'requestAnimationFrame' in window;\n  Browser.SUPPORTS_TOUCH = 'ontouchstart' in window;\n  Browser.touch = false;\n  Browser.dynamicInputDetection = true;\n  // Chrome device/touch emulation can make this dynamic\n  Browser.iOS = function () {\n    return (/iPhone|iPad|iPod/.test(navigator.userAgent) && !window.MSStream\n    );\n  };\n}\n\n/**\n* The global storage array which holds all data reference objects\n* from every instance\n* This allows us to hide tooltips from all instances, finding the ref when\n* clicking on the body, and for followCursor\n*/\nvar Store = [];\n\n/**\n* Selector constants used for grabbing elements\n*/\nvar Selectors = {\n  POPPER: '.tippy-popper',\n  TOOLTIP: '.tippy-tooltip',\n  CONTENT: '.tippy-tooltip-content',\n  CIRCLE: '[x-circle]',\n  ARROW: '[x-arrow]',\n  TOOLTIPPED_EL: '[data-tooltipped]',\n  CONTROLLER: '[data-tippy-controller]'\n};\n\n/**\n* The default settings applied to each instance\n*/\nvar Defaults = {\n  html: false,\n  position: 'top',\n  animation: 'shift',\n  animateFill: true,\n  arrow: false,\n  arrowSize: 'regular',\n  delay: 0,\n  trigger: 'mouseenter focus',\n  duration: 350,\n  interactive: false,\n  interactiveBorder: 2,\n  theme: 'dark',\n  size: 'regular',\n  distance: 10,\n  offset: 0,\n  hideOnClick: true,\n  multiple: false,\n  followCursor: false,\n  inertia: false,\n  flipDuration: 350,\n  sticky: false,\n  stickyDuration: 200,\n  appendTo: null,\n  zIndex: 9999,\n  touchHold: false,\n  performance: false,\n  dynamicTitle: false,\n  popperOptions: {}\n};\n\n/**\n* The keys of the defaults object for reducing down into a new object\n* Used in `getIndividualSettings()`\n*/\nvar DefaultsKeys = Browser.SUPPORTED && Object.keys(Defaults);\n\n/**\n* Hides all poppers\n* @param {Object} exclude - refData to exclude if needed\n*/\nfunction hideAllPoppers(exclude) {\n  Store.forEach(function (refData) {\n    var popper = refData.popper,\n        tippyInstance = refData.tippyInstance,\n        _refData$settings = refData.settings,\n        appendTo = _refData$settings.appendTo,\n        hideOnClick = _refData$settings.hideOnClick,\n        trigger = _refData$settings.trigger;\n\n    // Don't hide already hidden ones\n\n    if (!appendTo.contains(popper)) return;\n\n    // hideOnClick can have the truthy value of 'persistent', so strict check is needed\n    var isHideOnClick = hideOnClick === true || trigger.indexOf('focus') !== -1;\n    var isNotCurrentRef = !exclude || popper !== exclude.popper;\n\n    if (isHideOnClick && isNotCurrentRef) {\n      tippyInstance.hide(popper);\n    }\n  });\n}\n\nvar e = Element.prototype;\nvar matches = e.matches || e.matchesSelector || e.webkitMatchesSelector || e.mozMatchesSelector || e.msMatchesSelector || function (s) {\n    var matches = (this.document || this.ownerDocument).querySelectorAll(s),\n        i = matches.length;\n    while (--i >= 0 && matches.item(i) !== this) {}\n    return i > -1;\n};\n\n/**\n* Ponyfill to get the closest parent element\n* @param {Element} element - child of parent to be returned\n* @param {String} parentSelector - selector to match the parent if found\n* @return {Element}\n*/\nfunction closest(element, parentSelector) {\n  var _closest = Element.prototype.closest || function (selector) {\n    var el = this;\n    while (el) {\n      if (matches.call(el, selector)) {\n        return el;\n      }\n      el = el.parentElement;\n    }\n  };\n\n  return _closest.call(element, parentSelector);\n}\n\n/**\n* Ponyfill for Array.prototype.find\n* @param {Array} arr\n* @param {Function} checkFn\n* @return item in the array\n*/\nfunction find(arr, checkFn) {\n  if (Array.prototype.find) {\n    return arr.find(checkFn);\n  }\n\n  // use `filter` as fallback\n  return arr.filter(checkFn)[0];\n}\n\n/**\n* Adds the needed event listeners\n*/\nfunction bindEventListeners() {\n  var touchHandler = function touchHandler() {\n    Browser.touch = true;\n\n    if (Browser.iOS()) {\n      document.body.classList.add('tippy-touch');\n    }\n\n    if (Browser.dynamicInputDetection && window.performance) {\n      document.addEventListener('mousemove', mousemoveHandler);\n    }\n  };\n\n  var mousemoveHandler = function () {\n    var time = void 0;\n\n    return function () {\n      var now = performance.now();\n\n      // Chrome 60+ is 1 mousemove per rAF, use 20ms time difference\n      if (now - time < 20) {\n        Browser.touch = false;\n        document.removeEventListener('mousemove', mousemoveHandler);\n        if (!Browser.iOS()) {\n          document.body.classList.remove('tippy-touch');\n        }\n      }\n\n      time = now;\n    };\n  }();\n\n  var clickHandler = function clickHandler(event) {\n    // Simulated events dispatched on the document\n    if (!(event.target instanceof Element)) {\n      return hideAllPoppers();\n    }\n\n    var el = closest(event.target, Selectors.TOOLTIPPED_EL);\n    var popper = closest(event.target, Selectors.POPPER);\n\n    if (popper) {\n      var ref = find(Store, function (ref) {\n        return ref.popper === popper;\n      });\n      var interactive = ref.settings.interactive;\n\n      if (interactive) return;\n    }\n\n    if (el) {\n      var _ref = find(Store, function (ref) {\n        return ref.el === el;\n      });\n      var _ref$settings = _ref.settings,\n          hideOnClick = _ref$settings.hideOnClick,\n          multiple = _ref$settings.multiple,\n          trigger = _ref$settings.trigger;\n\n      // Hide all poppers except the one belonging to the element that was clicked IF\n      // `multiple` is false AND they are a touch user, OR\n      // `multiple` is false AND it's triggered by a click\n\n      if (!multiple && Browser.touch || !multiple && trigger.indexOf('click') !== -1) {\n        return hideAllPoppers(_ref);\n      }\n\n      // If hideOnClick is not strictly true or triggered by a click don't hide poppers\n      if (hideOnClick !== true || trigger.indexOf('click') !== -1) return;\n    }\n\n    // Don't trigger a hide for tippy controllers, and don't needlessly run loop\n    if (closest(event.target, Selectors.CONTROLLER) || !document.querySelector(Selectors.POPPER)) return;\n\n    hideAllPoppers();\n  };\n\n  var blurHandler = function blurHandler(event) {\n    var _document = document,\n        el = _document.activeElement;\n\n    if (el && el.blur && matches.call(el, Selectors.TOOLTIPPED_EL)) {\n      el.blur();\n    }\n  };\n\n  // Hook events\n  document.addEventListener('click', clickHandler);\n  document.addEventListener('touchstart', touchHandler);\n  window.addEventListener('blur', blurHandler);\n\n  if (!Browser.SUPPORTS_TOUCH && (navigator.maxTouchPoints > 0 || navigator.msMaxTouchPoints > 0)) {\n    document.addEventListener('pointerdown', touchHandler);\n  }\n}\n\n/**\n* To run a single time, once DOM is presumed to be ready\n* @return {Boolean} whether the function has run or not\n*/\nfunction init() {\n  if (init.done) return false;\n  init.done = true;\n\n  // If the script is in <head>, document.body is null, so it's set in the\n  // init function\n  Defaults.appendTo = document.body;\n\n  bindEventListeners();\n\n  return true;\n}\n\n/**\n* Waits until next repaint to execute a fn\n* @return {Function}\n*/\nfunction queueExecution(fn) {\n  window.requestAnimationFrame(function () {\n    setTimeout(fn, 0);\n  });\n}\n\n/**\n* Returns the supported prefixed property - only `webkit` is needed, `moz`, `ms` and `o` are obsolete\n* @param {String} property\n* @return {String} - browser supported prefixed property\n*/\nfunction prefix(property) {\n  var prefixes = [false, 'webkit'];\n  var upperProp = property.charAt(0).toUpperCase() + property.slice(1);\n\n  for (var i = 0; i < prefixes.length; i++) {\n    var _prefix = prefixes[i];\n    var prefixedProp = _prefix ? '' + _prefix + upperProp : property;\n    if (typeof window.document.body.style[prefixedProp] !== 'undefined') {\n      return prefixedProp;\n    }\n  }\n\n  return null;\n}\n\n/**\n* Ponyfill for Array.prototype.findIndex\n* @param {Array} arr\n* @param {Function} checkFn\n* @return index of the item in the array\n*/\nfunction findIndex(arr, checkFn) {\n  if (Array.prototype.findIndex) {\n    return arr.findIndex(checkFn);\n  }\n\n  // fallback\n  return arr.indexOf(find(arr, checkFn));\n}\n\n/**\n* Removes the title from the tooltipped element\n* @param {Element} el\n*/\nfunction removeTitle(el) {\n  var title = el.getAttribute('title');\n  el.setAttribute('data-original-title', title || 'html');\n  el.removeAttribute('title');\n}\n\n/**\n* Determines if an element is visible in the viewport\n* @param {Element} el\n* @return {Boolean}\n*/\nfunction elementIsInViewport(el) {\n  var rect = el.getBoundingClientRect();\n\n  return rect.top >= 0 && rect.left >= 0 && rect.bottom <= (window.innerHeight || document.documentElement.clientHeight) && rect.right <= (window.innerWidth || document.documentElement.clientWidth);\n}\n\n/**\n* Triggers a document repaint or reflow for CSS transition\n* @param {Element} tooltip\n* @param {Element} circle\n*/\nfunction triggerReflow(tooltip, circle) {\n  // Safari needs the specific 'transform' property to be accessed\n  circle ? window.getComputedStyle(circle)[prefix('transform')] : window.getComputedStyle(tooltip).opacity;\n}\n\n/**\n* Modifies elements' class lists\n* @param {Element[]} els - Array of elements\n* @param {Function} callback\n*/\nfunction modifyClassList(els, callback) {\n  els.forEach(function (el) {\n    if (!el) return;\n    callback(el.classList);\n  });\n}\n\n/**\n* Applies the transition duration to each element\n* @param {Element[]} els - Array of elements\n* @param {Number} duration\n*/\nfunction applyTransitionDuration(els, duration) {\n  els.forEach(function (el) {\n    if (!el) return;\n\n    var isContent = matches.call(el, Selectors.CONTENT);\n\n    var _duration = isContent ? Math.round(duration / 1.3) : duration;\n\n    el.style[prefix('transitionDuration')] = _duration + 'ms';\n  });\n}\n\n/**\n* Determines if a popper is currently visible\n* @param {Element} popper\n* @return {Boolean}\n*/\nfunction isVisible(popper) {\n  return popper.style.visibility === 'visible';\n}\n\nfunction noop() {}\n\n/**\n* Returns the non-shifted placement (e.g., 'bottom-start' => 'bottom')\n* @param {String} placement\n* @return {String}\n*/\nfunction getCorePlacement(placement) {\n  return placement.replace(/-.+/, '');\n}\n\n/**\n* Mousemove event listener callback method for follow cursor setting\n* @param {MouseEvent} e\n*/\nfunction followCursorHandler(e) {\n  var _this = this;\n\n  var refData = find(Store, function (refData) {\n    return refData.el === _this;\n  });\n\n  var popper = refData.popper,\n      offset = refData.settings.offset;\n\n\n  var position = getCorePlacement(popper.getAttribute('x-placement'));\n  var halfPopperWidth = Math.round(popper.offsetWidth / 2);\n  var halfPopperHeight = Math.round(popper.offsetHeight / 2);\n  var viewportPadding = 5;\n  var pageWidth = document.documentElement.offsetWidth || document.body.offsetWidth;\n\n  var pageX = e.pageX,\n      pageY = e.pageY;\n\n\n  var x = void 0,\n      y = void 0;\n\n  switch (position) {\n    case 'top':\n      x = pageX - halfPopperWidth + offset;\n      y = pageY - 2.25 * halfPopperHeight;\n      break;\n    case 'left':\n      x = pageX - 2 * halfPopperWidth - 10;\n      y = pageY - halfPopperHeight + offset;\n      break;\n    case 'right':\n      x = pageX + halfPopperHeight;\n      y = pageY - halfPopperHeight + offset;\n      break;\n    case 'bottom':\n      x = pageX - halfPopperWidth + offset;\n      y = pageY + halfPopperHeight / 1.5;\n      break;\n  }\n\n  var isRightOverflowing = pageX + viewportPadding + halfPopperWidth + offset > pageWidth;\n  var isLeftOverflowing = pageX - viewportPadding - halfPopperWidth + offset < 0;\n\n  // Prevent left/right overflow\n  if (position === 'top' || position === 'bottom') {\n    if (isRightOverflowing) {\n      x = pageWidth - viewportPadding - 2 * halfPopperWidth;\n    }\n\n    if (isLeftOverflowing) {\n      x = viewportPadding;\n    }\n  }\n\n  popper.style[prefix('transform')] = 'translate3d(' + x + 'px, ' + y + 'px, 0)';\n}\n\n/**\n* Returns an array of elements based on the selector input\n* @param {String|Element|Element[]} selector\n* @return {Element[]}\n*/\nfunction getArrayOfElements(selector) {\n  if (selector instanceof Element) {\n    return [selector];\n  }\n\n  if (Array.isArray(selector)) {\n    return selector;\n  }\n\n  return [].slice.call(document.querySelectorAll(selector));\n}\n\n/**\n* Prepares the callback functions for `show` and `hide` methods\n* @param {Object} refData -  the element/popper reference data\n* @param {Number} duration\n* @param {Function} callback - callback function to fire once transitions complete\n*/\nfunction onTransitionEnd(refData, duration, callback) {\n  // Make callback synchronous if duration is 0\n  if (!duration) {\n    return callback();\n  }\n\n  var tooltip = refData.popper.querySelector(Selectors.TOOLTIP);\n  var transitionendFired = false;\n\n  var listenerCallback = function listenerCallback(e) {\n    if (e.target !== tooltip) return;\n\n    transitionendFired = true;\n\n    tooltip.removeEventListener('webkitTransitionEnd', listenerCallback);\n    tooltip.removeEventListener('transitionend', listenerCallback);\n\n    callback();\n  };\n\n  // Wait for transitions to complete\n  tooltip.addEventListener('webkitTransitionEnd', listenerCallback);\n  tooltip.addEventListener('transitionend', listenerCallback);\n\n  // transitionend listener sometimes may not fire\n  clearTimeout(refData._transitionendTimeout);\n  refData._transitionendTimeout = setTimeout(function () {\n    !transitionendFired && callback();\n  }, duration);\n}\n\n/**!\n * @fileOverview Kickass library to create and place poppers near their reference elements.\n * @version 1.11.1\n * @license\n * Copyright (c) 2016 Federico Zivolo and contributors\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\nvar nativeHints = ['native code', '[object MutationObserverConstructor]'];\n\n/**\n * Determine if a function is implemented natively (as opposed to a polyfill).\n * @method\n * @memberof Popper.Utils\n * @argument {Function | undefined} fn the function to check\n * @returns {Boolean}\n */\nvar isNative = function isNative(fn) {\n  return nativeHints.some(function (hint) {\n    return (fn || '').toString().indexOf(hint) > -1;\n  });\n};\n\nvar isBrowser = typeof window !== 'undefined';\nvar longerTimeoutBrowsers = ['Edge', 'Trident', 'Firefox'];\nvar timeoutDuration = 0;\nfor (var i = 0; i < longerTimeoutBrowsers.length; i += 1) {\n  if (isBrowser && navigator.userAgent.indexOf(longerTimeoutBrowsers[i]) >= 0) {\n    timeoutDuration = 1;\n    break;\n  }\n}\n\nfunction microtaskDebounce(fn) {\n  var scheduled = false;\n  var i = 0;\n  var elem = document.createElement('span');\n\n  // MutationObserver provides a mechanism for scheduling microtasks, which\n  // are scheduled *before* the next task. This gives us a way to debounce\n  // a function but ensure it's called *before* the next paint.\n  var observer = new MutationObserver(function () {\n    fn();\n    scheduled = false;\n  });\n\n  observer.observe(elem, { attributes: true });\n\n  return function () {\n    if (!scheduled) {\n      scheduled = true;\n      elem.setAttribute('x-index', i);\n      i = i + 1; // don't use compund (+=) because it doesn't get optimized in V8\n    }\n  };\n}\n\nfunction taskDebounce(fn) {\n  var scheduled = false;\n  return function () {\n    if (!scheduled) {\n      scheduled = true;\n      setTimeout(function () {\n        scheduled = false;\n        fn();\n      }, timeoutDuration);\n    }\n  };\n}\n\n// It's common for MutationObserver polyfills to be seen in the wild, however\n// these rely on Mutation Events which only occur when an element is connected\n// to the DOM. The algorithm used in this module does not use a connected element,\n// and so we must ensure that a *native* MutationObserver is available.\nvar supportsNativeMutationObserver = isBrowser && isNative(window.MutationObserver);\n\n/**\n* Create a debounced version of a method, that's asynchronously deferred\n* but called in the minimum time possible.\n*\n* @method\n* @memberof Popper.Utils\n* @argument {Function} fn\n* @returns {Function}\n*/\nvar debounce = supportsNativeMutationObserver ? microtaskDebounce : taskDebounce;\n\n/**\n * Check if the given variable is a function\n * @method\n * @memberof Popper.Utils\n * @argument {Any} functionToCheck - variable to check\n * @returns {Boolean} answer to: is a function?\n */\nfunction isFunction(functionToCheck) {\n  var getType = {};\n  return functionToCheck && getType.toString.call(functionToCheck) === '[object Function]';\n}\n\n/**\n * Get CSS computed property of the given element\n * @method\n * @memberof Popper.Utils\n * @argument {Eement} element\n * @argument {String} property\n */\nfunction getStyleComputedProperty(element, property) {\n  if (element.nodeType !== 1) {\n    return [];\n  }\n  // NOTE: 1 DOM access here\n  var css = window.getComputedStyle(element, null);\n  return property ? css[property] : css;\n}\n\n/**\n * Returns the parentNode or the host of the element\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Element} parent\n */\nfunction getParentNode(element) {\n  if (element.nodeName === 'HTML') {\n    return element;\n  }\n  return element.parentNode || element.host;\n}\n\n/**\n * Returns the scrolling parent of the given element\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Element} scroll parent\n */\nfunction getScrollParent(element) {\n  // Return body, `getScroll` will take care to get the correct `scrollTop` from it\n  if (!element || ['HTML', 'BODY', '#document'].indexOf(element.nodeName) !== -1) {\n    return window.document.body;\n  }\n\n  // Firefox want us to check `-x` and `-y` variations as well\n\n  var _getStyleComputedProp = getStyleComputedProperty(element),\n      overflow = _getStyleComputedProp.overflow,\n      overflowX = _getStyleComputedProp.overflowX,\n      overflowY = _getStyleComputedProp.overflowY;\n\n  if (/(auto|scroll)/.test(overflow + overflowY + overflowX)) {\n    return element;\n  }\n\n  return getScrollParent(getParentNode(element));\n}\n\n/**\n * Returns the offset parent of the given element\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Element} offset parent\n */\nfunction getOffsetParent(element) {\n  // NOTE: 1 DOM access here\n  var offsetParent = element && element.offsetParent;\n  var nodeName = offsetParent && offsetParent.nodeName;\n\n  if (!nodeName || nodeName === 'BODY' || nodeName === 'HTML') {\n    return window.document.documentElement;\n  }\n\n  // .offsetParent will return the closest TD or TABLE in case\n  // no offsetParent is present, I hate this job...\n  if (['TD', 'TABLE'].indexOf(offsetParent.nodeName) !== -1 && getStyleComputedProperty(offsetParent, 'position') === 'static') {\n    return getOffsetParent(offsetParent);\n  }\n\n  return offsetParent;\n}\n\nfunction isOffsetContainer(element) {\n  var nodeName = element.nodeName;\n\n  if (nodeName === 'BODY') {\n    return false;\n  }\n  return nodeName === 'HTML' || getOffsetParent(element.firstElementChild) === element;\n}\n\n/**\n * Finds the root node (document, shadowDOM root) of the given element\n * @method\n * @memberof Popper.Utils\n * @argument {Element} node\n * @returns {Element} root node\n */\nfunction getRoot(node) {\n  if (node.parentNode !== null) {\n    return getRoot(node.parentNode);\n  }\n\n  return node;\n}\n\n/**\n * Finds the offset parent common to the two provided nodes\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element1\n * @argument {Element} element2\n * @returns {Element} common offset parent\n */\nfunction findCommonOffsetParent(element1, element2) {\n  // This check is needed to avoid errors in case one of the elements isn't defined for any reason\n  if (!element1 || !element1.nodeType || !element2 || !element2.nodeType) {\n    return window.document.documentElement;\n  }\n\n  // Here we make sure to give as \"start\" the element that comes first in the DOM\n  var order = element1.compareDocumentPosition(element2) & Node.DOCUMENT_POSITION_FOLLOWING;\n  var start = order ? element1 : element2;\n  var end = order ? element2 : element1;\n\n  // Get common ancestor container\n  var range = document.createRange();\n  range.setStart(start, 0);\n  range.setEnd(end, 0);\n  var commonAncestorContainer = range.commonAncestorContainer;\n\n  // Both nodes are inside #document\n\n  if (element1 !== commonAncestorContainer && element2 !== commonAncestorContainer || start.contains(end)) {\n    if (isOffsetContainer(commonAncestorContainer)) {\n      return commonAncestorContainer;\n    }\n\n    return getOffsetParent(commonAncestorContainer);\n  }\n\n  // one of the nodes is inside shadowDOM, find which one\n  var element1root = getRoot(element1);\n  if (element1root.host) {\n    return findCommonOffsetParent(element1root.host, element2);\n  } else {\n    return findCommonOffsetParent(element1, getRoot(element2).host);\n  }\n}\n\n/**\n * Gets the scroll value of the given element in the given side (top and left)\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @argument {String} side `top` or `left`\n * @returns {number} amount of scrolled pixels\n */\nfunction getScroll(element) {\n  var side = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'top';\n\n  var upperSide = side === 'top' ? 'scrollTop' : 'scrollLeft';\n  var nodeName = element.nodeName;\n\n  if (nodeName === 'BODY' || nodeName === 'HTML') {\n    var html = window.document.documentElement;\n    var scrollingElement = window.document.scrollingElement || html;\n    return scrollingElement[upperSide];\n  }\n\n  return element[upperSide];\n}\n\n/*\n * Sum or subtract the element scroll values (left and top) from a given rect object\n * @method\n * @memberof Popper.Utils\n * @param {Object} rect - Rect object you want to change\n * @param {HTMLElement} element - The element from the function reads the scroll values\n * @param {Boolean} subtract - set to true if you want to subtract the scroll values\n * @return {Object} rect - The modifier rect object\n */\nfunction includeScroll(rect, element) {\n  var subtract = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n  var scrollTop = getScroll(element, 'top');\n  var scrollLeft = getScroll(element, 'left');\n  var modifier = subtract ? -1 : 1;\n  rect.top += scrollTop * modifier;\n  rect.bottom += scrollTop * modifier;\n  rect.left += scrollLeft * modifier;\n  rect.right += scrollLeft * modifier;\n  return rect;\n}\n\n/*\n * Helper to detect borders of a given element\n * @method\n * @memberof Popper.Utils\n * @param {CSSStyleDeclaration} styles\n * Result of `getStyleComputedProperty` on the given element\n * @param {String} axis - `x` or `y`\n * @return {number} borders - The borders size of the given axis\n */\n\nfunction getBordersSize(styles, axis) {\n  var sideA = axis === 'x' ? 'Left' : 'Top';\n  var sideB = sideA === 'Left' ? 'Right' : 'Bottom';\n\n  return +styles['border' + sideA + 'Width'].split('px')[0] + +styles['border' + sideB + 'Width'].split('px')[0];\n}\n\n/**\n * Tells if you are running Internet Explorer 10\n * @method\n * @memberof Popper.Utils\n * @returns {Boolean} isIE10\n */\nvar isIE10 = undefined;\n\nvar isIE10$1 = function isIE10$1() {\n  if (isIE10 === undefined) {\n    isIE10 = navigator.appVersion.indexOf('MSIE 10') !== -1;\n  }\n  return isIE10;\n};\n\nfunction getSize(axis, body, html, computedStyle) {\n  return Math.max(body['offset' + axis], html['client' + axis], html['offset' + axis], isIE10$1() ? html['offset' + axis] + computedStyle['margin' + (axis === 'Height' ? 'Top' : 'Left')] + computedStyle['margin' + (axis === 'Height' ? 'Bottom' : 'Right')] : 0);\n}\n\nfunction getWindowSizes() {\n  var body = window.document.body;\n  var html = window.document.documentElement;\n  var computedStyle = isIE10$1() && window.getComputedStyle(html);\n\n  return {\n    height: getSize('Height', body, html, computedStyle),\n    width: getSize('Width', body, html, computedStyle)\n  };\n}\n\nvar classCallCheck = function classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\nvar createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar defineProperty = function defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n};\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\n/**\n * Given element offsets, generate an output similar to getBoundingClientRect\n * @method\n * @memberof Popper.Utils\n * @argument {Object} offsets\n * @returns {Object} ClientRect like output\n */\nfunction getClientRect(offsets) {\n  return _extends({}, offsets, {\n    right: offsets.left + offsets.width,\n    bottom: offsets.top + offsets.height\n  });\n}\n\n/**\n * Get bounding client rect of given element\n * @method\n * @memberof Popper.Utils\n * @param {HTMLElement} element\n * @return {Object} client rect\n */\nfunction getBoundingClientRect(element) {\n  var rect = {};\n\n  // IE10 10 FIX: Please, don't ask, the element isn't\n  // considered in DOM in some circumstances...\n  // This isn't reproducible in IE10 compatibility mode of IE11\n  if (isIE10$1()) {\n    try {\n      rect = element.getBoundingClientRect();\n      var scrollTop = getScroll(element, 'top');\n      var scrollLeft = getScroll(element, 'left');\n      rect.top += scrollTop;\n      rect.left += scrollLeft;\n      rect.bottom += scrollTop;\n      rect.right += scrollLeft;\n    } catch (err) {}\n  } else {\n    rect = element.getBoundingClientRect();\n  }\n\n  var result = {\n    left: rect.left,\n    top: rect.top,\n    width: rect.right - rect.left,\n    height: rect.bottom - rect.top\n  };\n\n  // subtract scrollbar size from sizes\n  var sizes = element.nodeName === 'HTML' ? getWindowSizes() : {};\n  var width = sizes.width || element.clientWidth || result.right - result.left;\n  var height = sizes.height || element.clientHeight || result.bottom - result.top;\n\n  var horizScrollbar = element.offsetWidth - width;\n  var vertScrollbar = element.offsetHeight - height;\n\n  // if an hypothetical scrollbar is detected, we must be sure it's not a `border`\n  // we make this check conditional for performance reasons\n  if (horizScrollbar || vertScrollbar) {\n    var styles = getStyleComputedProperty(element);\n    horizScrollbar -= getBordersSize(styles, 'x');\n    vertScrollbar -= getBordersSize(styles, 'y');\n\n    result.width -= horizScrollbar;\n    result.height -= vertScrollbar;\n  }\n\n  return getClientRect(result);\n}\n\nfunction getOffsetRectRelativeToArbitraryNode(children, parent) {\n  var isIE10 = isIE10$1();\n  var isHTML = parent.nodeName === 'HTML';\n  var childrenRect = getBoundingClientRect(children);\n  var parentRect = getBoundingClientRect(parent);\n  var scrollParent = getScrollParent(children);\n\n  var styles = getStyleComputedProperty(parent);\n  var borderTopWidth = +styles.borderTopWidth.split('px')[0];\n  var borderLeftWidth = +styles.borderLeftWidth.split('px')[0];\n\n  var offsets = getClientRect({\n    top: childrenRect.top - parentRect.top - borderTopWidth,\n    left: childrenRect.left - parentRect.left - borderLeftWidth,\n    width: childrenRect.width,\n    height: childrenRect.height\n  });\n  offsets.marginTop = 0;\n  offsets.marginLeft = 0;\n\n  // Subtract margins of documentElement in case it's being used as parent\n  // we do this only on HTML because it's the only element that behaves\n  // differently when margins are applied to it. The margins are included in\n  // the box of the documentElement, in the other cases not.\n  if (!isIE10 && isHTML) {\n    var marginTop = +styles.marginTop.split('px')[0];\n    var marginLeft = +styles.marginLeft.split('px')[0];\n\n    offsets.top -= borderTopWidth - marginTop;\n    offsets.bottom -= borderTopWidth - marginTop;\n    offsets.left -= borderLeftWidth - marginLeft;\n    offsets.right -= borderLeftWidth - marginLeft;\n\n    // Attach marginTop and marginLeft because in some circumstances we may need them\n    offsets.marginTop = marginTop;\n    offsets.marginLeft = marginLeft;\n  }\n\n  if (isIE10 ? parent.contains(scrollParent) : parent === scrollParent && scrollParent.nodeName !== 'BODY') {\n    offsets = includeScroll(offsets, parent);\n  }\n\n  return offsets;\n}\n\nfunction getViewportOffsetRectRelativeToArtbitraryNode(element) {\n  var html = window.document.documentElement;\n  var relativeOffset = getOffsetRectRelativeToArbitraryNode(element, html);\n  var width = Math.max(html.clientWidth, window.innerWidth || 0);\n  var height = Math.max(html.clientHeight, window.innerHeight || 0);\n\n  var scrollTop = getScroll(html);\n  var scrollLeft = getScroll(html, 'left');\n\n  var offset = {\n    top: scrollTop - relativeOffset.top + relativeOffset.marginTop,\n    left: scrollLeft - relativeOffset.left + relativeOffset.marginLeft,\n    width: width,\n    height: height\n  };\n\n  return getClientRect(offset);\n}\n\n/**\n * Check if the given element is fixed or is inside a fixed parent\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @argument {Element} customContainer\n * @returns {Boolean} answer to \"isFixed?\"\n */\nfunction isFixed(element) {\n  var nodeName = element.nodeName;\n  if (nodeName === 'BODY' || nodeName === 'HTML') {\n    return false;\n  }\n  if (getStyleComputedProperty(element, 'position') === 'fixed') {\n    return true;\n  }\n  return isFixed(getParentNode(element));\n}\n\n/**\n * Computed the boundaries limits and return them\n * @method\n * @memberof Popper.Utils\n * @param {HTMLElement} popper\n * @param {HTMLElement} reference\n * @param {number} padding\n * @param {HTMLElement} boundariesElement - Element used to define the boundaries\n * @returns {Object} Coordinates of the boundaries\n */\nfunction getBoundaries(popper, reference, padding, boundariesElement) {\n  // NOTE: 1 DOM access here\n  var boundaries = { top: 0, left: 0 };\n  var offsetParent = findCommonOffsetParent(popper, reference);\n\n  // Handle viewport case\n  if (boundariesElement === 'viewport') {\n    boundaries = getViewportOffsetRectRelativeToArtbitraryNode(offsetParent);\n  } else {\n    // Handle other cases based on DOM element used as boundaries\n    var boundariesNode = void 0;\n    if (boundariesElement === 'scrollParent') {\n      boundariesNode = getScrollParent(getParentNode(popper));\n      if (boundariesNode.nodeName === 'BODY') {\n        boundariesNode = window.document.documentElement;\n      }\n    } else if (boundariesElement === 'window') {\n      boundariesNode = window.document.documentElement;\n    } else {\n      boundariesNode = boundariesElement;\n    }\n\n    var offsets = getOffsetRectRelativeToArbitraryNode(boundariesNode, offsetParent);\n\n    // In case of HTML, we need a different computation\n    if (boundariesNode.nodeName === 'HTML' && !isFixed(offsetParent)) {\n      var _getWindowSizes = getWindowSizes(),\n          height = _getWindowSizes.height,\n          width = _getWindowSizes.width;\n\n      boundaries.top += offsets.top - offsets.marginTop;\n      boundaries.bottom = height + offsets.top;\n      boundaries.left += offsets.left - offsets.marginLeft;\n      boundaries.right = width + offsets.left;\n    } else {\n      // for all the other DOM elements, this one is good\n      boundaries = offsets;\n    }\n  }\n\n  // Add paddings\n  boundaries.left += padding;\n  boundaries.top += padding;\n  boundaries.right -= padding;\n  boundaries.bottom -= padding;\n\n  return boundaries;\n}\n\nfunction getArea(_ref) {\n  var width = _ref.width,\n      height = _ref.height;\n\n  return width * height;\n}\n\n/**\n * Utility used to transform the `auto` placement to the placement with more\n * available space.\n * @method\n * @memberof Popper.Utils\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nfunction computeAutoPlacement(placement, refRect, popper, reference, boundariesElement) {\n  var padding = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 0;\n\n  if (placement.indexOf('auto') === -1) {\n    return placement;\n  }\n\n  var boundaries = getBoundaries(popper, reference, padding, boundariesElement);\n\n  var rects = {\n    top: {\n      width: boundaries.width,\n      height: refRect.top - boundaries.top\n    },\n    right: {\n      width: boundaries.right - refRect.right,\n      height: boundaries.height\n    },\n    bottom: {\n      width: boundaries.width,\n      height: boundaries.bottom - refRect.bottom\n    },\n    left: {\n      width: refRect.left - boundaries.left,\n      height: boundaries.height\n    }\n  };\n\n  var sortedAreas = Object.keys(rects).map(function (key) {\n    return _extends({\n      key: key\n    }, rects[key], {\n      area: getArea(rects[key])\n    });\n  }).sort(function (a, b) {\n    return b.area - a.area;\n  });\n\n  var filteredAreas = sortedAreas.filter(function (_ref2) {\n    var width = _ref2.width,\n        height = _ref2.height;\n    return width >= popper.clientWidth && height >= popper.clientHeight;\n  });\n\n  var computedPlacement = filteredAreas.length > 0 ? filteredAreas[0].key : sortedAreas[0].key;\n\n  var variation = placement.split('-')[1];\n\n  return computedPlacement + (variation ? '-' + variation : '');\n}\n\n/**\n * Get offsets to the reference element\n * @method\n * @memberof Popper.Utils\n * @param {Object} state\n * @param {Element} popper - the popper element\n * @param {Element} reference - the reference element (the popper will be relative to this)\n * @returns {Object} An object containing the offsets which will be applied to the popper\n */\nfunction getReferenceOffsets(state, popper, reference) {\n  var commonOffsetParent = findCommonOffsetParent(popper, reference);\n  return getOffsetRectRelativeToArbitraryNode(reference, commonOffsetParent);\n}\n\n/**\n * Get the outer sizes of the given element (offset size + margins)\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Object} object containing width and height properties\n */\nfunction getOuterSizes(element) {\n  var styles = window.getComputedStyle(element);\n  var x = parseFloat(styles.marginTop) + parseFloat(styles.marginBottom);\n  var y = parseFloat(styles.marginLeft) + parseFloat(styles.marginRight);\n  var result = {\n    width: element.offsetWidth + y,\n    height: element.offsetHeight + x\n  };\n  return result;\n}\n\n/**\n * Get the opposite placement of the given one\n * @method\n * @memberof Popper.Utils\n * @argument {String} placement\n * @returns {String} flipped placement\n */\nfunction getOppositePlacement(placement) {\n  var hash = { left: 'right', right: 'left', bottom: 'top', top: 'bottom' };\n  return placement.replace(/left|right|bottom|top/g, function (matched) {\n    return hash[matched];\n  });\n}\n\n/**\n * Get offsets to the popper\n * @method\n * @memberof Popper.Utils\n * @param {Object} position - CSS position the Popper will get applied\n * @param {HTMLElement} popper - the popper element\n * @param {Object} referenceOffsets - the reference offsets (the popper will be relative to this)\n * @param {String} placement - one of the valid placement options\n * @returns {Object} popperOffsets - An object containing the offsets which will be applied to the popper\n */\nfunction getPopperOffsets(popper, referenceOffsets, placement) {\n  placement = placement.split('-')[0];\n\n  // Get popper node sizes\n  var popperRect = getOuterSizes(popper);\n\n  // Add position, width and height to our offsets object\n  var popperOffsets = {\n    width: popperRect.width,\n    height: popperRect.height\n  };\n\n  // depending by the popper placement we have to compute its offsets slightly differently\n  var isHoriz = ['right', 'left'].indexOf(placement) !== -1;\n  var mainSide = isHoriz ? 'top' : 'left';\n  var secondarySide = isHoriz ? 'left' : 'top';\n  var measurement = isHoriz ? 'height' : 'width';\n  var secondaryMeasurement = !isHoriz ? 'height' : 'width';\n\n  popperOffsets[mainSide] = referenceOffsets[mainSide] + referenceOffsets[measurement] / 2 - popperRect[measurement] / 2;\n  if (placement === secondarySide) {\n    popperOffsets[secondarySide] = referenceOffsets[secondarySide] - popperRect[secondaryMeasurement];\n  } else {\n    popperOffsets[secondarySide] = referenceOffsets[getOppositePlacement(secondarySide)];\n  }\n\n  return popperOffsets;\n}\n\n/**\n * Mimics the `find` method of Array\n * @method\n * @memberof Popper.Utils\n * @argument {Array} arr\n * @argument prop\n * @argument value\n * @returns index or -1\n */\nfunction find$1(arr, check) {\n  // use native find if supported\n  if (Array.prototype.find) {\n    return arr.find(check);\n  }\n\n  // use `filter` to obtain the same behavior of `find`\n  return arr.filter(check)[0];\n}\n\n/**\n * Return the index of the matching object\n * @method\n * @memberof Popper.Utils\n * @argument {Array} arr\n * @argument prop\n * @argument value\n * @returns index or -1\n */\nfunction findIndex$1(arr, prop, value) {\n  // use native findIndex if supported\n  if (Array.prototype.findIndex) {\n    return arr.findIndex(function (cur) {\n      return cur[prop] === value;\n    });\n  }\n\n  // use `find` + `indexOf` if `findIndex` isn't supported\n  var match = find$1(arr, function (obj) {\n    return obj[prop] === value;\n  });\n  return arr.indexOf(match);\n}\n\n/**\n * Loop trough the list of modifiers and run them in order,\n * each of them will then edit the data object.\n * @method\n * @memberof Popper.Utils\n * @param {dataObject} data\n * @param {Array} modifiers\n * @param {String} ends - Optional modifier name used as stopper\n * @returns {dataObject}\n */\nfunction runModifiers(modifiers, data, ends) {\n  var modifiersToRun = ends === undefined ? modifiers : modifiers.slice(0, findIndex$1(modifiers, 'name', ends));\n\n  modifiersToRun.forEach(function (modifier) {\n    if (modifier.function) {\n      console.warn('`modifier.function` is deprecated, use `modifier.fn`!');\n    }\n    var fn = modifier.function || modifier.fn;\n    if (modifier.enabled && isFunction(fn)) {\n      // Add properties to offsets to make them a complete clientRect object\n      // we do this before each modifier to make sure the previous one doesn't\n      // mess with these values\n      data.offsets.popper = getClientRect(data.offsets.popper);\n      data.offsets.reference = getClientRect(data.offsets.reference);\n\n      data = fn(data, modifier);\n    }\n  });\n\n  return data;\n}\n\n/**\n * Updates the position of the popper, computing the new offsets and applying\n * the new style.<br />\n * Prefer `scheduleUpdate` over `update` because of performance reasons.\n * @method\n * @memberof Popper\n */\nfunction update() {\n  // if popper is destroyed, don't perform any further update\n  if (this.state.isDestroyed) {\n    return;\n  }\n\n  var data = {\n    instance: this,\n    styles: {},\n    attributes: {},\n    flipped: false,\n    offsets: {}\n  };\n\n  // compute reference element offsets\n  data.offsets.reference = getReferenceOffsets(this.state, this.popper, this.reference);\n\n  // compute auto placement, store placement inside the data object,\n  // modifiers will be able to edit `placement` if needed\n  // and refer to originalPlacement to know the original value\n  data.placement = computeAutoPlacement(this.options.placement, data.offsets.reference, this.popper, this.reference, this.options.modifiers.flip.boundariesElement, this.options.modifiers.flip.padding);\n\n  // store the computed placement inside `originalPlacement`\n  data.originalPlacement = data.placement;\n\n  // compute the popper offsets\n  data.offsets.popper = getPopperOffsets(this.popper, data.offsets.reference, data.placement);\n  data.offsets.popper.position = 'absolute';\n\n  // run the modifiers\n  data = runModifiers(this.modifiers, data);\n\n  // the first `update` will call `onCreate` callback\n  // the other ones will call `onUpdate` callback\n  if (!this.state.isCreated) {\n    this.state.isCreated = true;\n    this.options.onCreate(data);\n  } else {\n    this.options.onUpdate(data);\n  }\n}\n\n/**\n * Helper used to know if the given modifier is enabled.\n * @method\n * @memberof Popper.Utils\n * @returns {Boolean}\n */\nfunction isModifierEnabled(modifiers, modifierName) {\n  return modifiers.some(function (_ref) {\n    var name = _ref.name,\n        enabled = _ref.enabled;\n    return enabled && name === modifierName;\n  });\n}\n\n/**\n * Get the prefixed supported property name\n * @method\n * @memberof Popper.Utils\n * @argument {String} property (camelCase)\n * @returns {String} prefixed property (camelCase or PascalCase, depending on the vendor prefix)\n */\nfunction getSupportedPropertyName(property) {\n  var prefixes = [false, 'ms', 'Webkit', 'Moz', 'O'];\n  var upperProp = property.charAt(0).toUpperCase() + property.slice(1);\n\n  for (var i = 0; i < prefixes.length - 1; i++) {\n    var prefix = prefixes[i];\n    var toCheck = prefix ? '' + prefix + upperProp : property;\n    if (typeof window.document.body.style[toCheck] !== 'undefined') {\n      return toCheck;\n    }\n  }\n  return null;\n}\n\n/**\n * Destroy the popper\n * @method\n * @memberof Popper\n */\nfunction destroy() {\n  this.state.isDestroyed = true;\n\n  // touch DOM only if `applyStyle` modifier is enabled\n  if (isModifierEnabled(this.modifiers, 'applyStyle')) {\n    this.popper.removeAttribute('x-placement');\n    this.popper.style.left = '';\n    this.popper.style.position = '';\n    this.popper.style.top = '';\n    this.popper.style[getSupportedPropertyName('transform')] = '';\n  }\n\n  this.disableEventListeners();\n\n  // remove the popper if user explicity asked for the deletion on destroy\n  // do not use `remove` because IE11 doesn't support it\n  if (this.options.removeOnDestroy) {\n    this.popper.parentNode.removeChild(this.popper);\n  }\n  return this;\n}\n\nfunction attachToScrollParents(scrollParent, event, callback, scrollParents) {\n  var isBody = scrollParent.nodeName === 'BODY';\n  var target = isBody ? window : scrollParent;\n  target.addEventListener(event, callback, { passive: true });\n\n  if (!isBody) {\n    attachToScrollParents(getScrollParent(target.parentNode), event, callback, scrollParents);\n  }\n  scrollParents.push(target);\n}\n\n/**\n * Setup needed event listeners used to update the popper position\n * @method\n * @memberof Popper.Utils\n * @private\n */\nfunction setupEventListeners(reference, options, state, updateBound) {\n  // Resize event listener on window\n  state.updateBound = updateBound;\n  window.addEventListener('resize', state.updateBound, { passive: true });\n\n  // Scroll event listener on scroll parents\n  var scrollElement = getScrollParent(reference);\n  attachToScrollParents(scrollElement, 'scroll', state.updateBound, state.scrollParents);\n  state.scrollElement = scrollElement;\n  state.eventsEnabled = true;\n\n  return state;\n}\n\n/**\n * It will add resize/scroll events and start recalculating\n * position of the popper element when they are triggered.\n * @method\n * @memberof Popper\n */\nfunction enableEventListeners() {\n  if (!this.state.eventsEnabled) {\n    this.state = setupEventListeners(this.reference, this.options, this.state, this.scheduleUpdate);\n  }\n}\n\n/**\n * Remove event listeners used to update the popper position\n * @method\n * @memberof Popper.Utils\n * @private\n */\nfunction removeEventListeners(reference, state) {\n  // Remove resize event listener on window\n  window.removeEventListener('resize', state.updateBound);\n\n  // Remove scroll event listener on scroll parents\n  state.scrollParents.forEach(function (target) {\n    target.removeEventListener('scroll', state.updateBound);\n  });\n\n  // Reset state\n  state.updateBound = null;\n  state.scrollParents = [];\n  state.scrollElement = null;\n  state.eventsEnabled = false;\n  return state;\n}\n\n/**\n * It will remove resize/scroll events and won't recalculate popper position\n * when they are triggered. It also won't trigger onUpdate callback anymore,\n * unless you call `update` method manually.\n * @method\n * @memberof Popper\n */\nfunction disableEventListeners() {\n  if (this.state.eventsEnabled) {\n    window.cancelAnimationFrame(this.scheduleUpdate);\n    this.state = removeEventListeners(this.reference, this.state);\n  }\n}\n\n/**\n * Tells if a given input is a number\n * @method\n * @memberof Popper.Utils\n * @param {*} input to check\n * @return {Boolean}\n */\nfunction isNumeric(n) {\n  return n !== '' && !isNaN(parseFloat(n)) && isFinite(n);\n}\n\n/**\n * Set the style to the given popper\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element - Element to apply the style to\n * @argument {Object} styles\n * Object with a list of properties and values which will be applied to the element\n */\nfunction setStyles(element, styles) {\n  Object.keys(styles).forEach(function (prop) {\n    var unit = '';\n    // add unit if the value is numeric and is one of the following\n    if (['width', 'height', 'top', 'right', 'bottom', 'left'].indexOf(prop) !== -1 && isNumeric(styles[prop])) {\n      unit = 'px';\n    }\n    element.style[prop] = styles[prop] + unit;\n  });\n}\n\n/**\n * Set the attributes to the given popper\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element - Element to apply the attributes to\n * @argument {Object} styles\n * Object with a list of properties and values which will be applied to the element\n */\nfunction setAttributes(element, attributes) {\n  Object.keys(attributes).forEach(function (prop) {\n    var value = attributes[prop];\n    if (value !== false) {\n      element.setAttribute(prop, attributes[prop]);\n    } else {\n      element.removeAttribute(prop);\n    }\n  });\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} data.styles - List of style properties - values to apply to popper element\n * @argument {Object} data.attributes - List of attribute properties - values to apply to popper element\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The same data object\n */\nfunction applyStyle(data) {\n  // any property present in `data.styles` will be applied to the popper,\n  // in this way we can make the 3rd party modifiers add custom styles to it\n  // Be aware, modifiers could override the properties defined in the previous\n  // lines of this modifier!\n  setStyles(data.instance.popper, data.styles);\n\n  // any property present in `data.attributes` will be applied to the popper,\n  // they will be set as HTML attributes of the element\n  setAttributes(data.instance.popper, data.attributes);\n\n  // if the arrow style has been computed, apply the arrow style\n  if (data.offsets.arrow) {\n    setStyles(data.arrowElement, data.offsets.arrow);\n  }\n\n  return data;\n}\n\n/**\n * Set the x-placement attribute before everything else because it could be used\n * to add margins to the popper margins needs to be calculated to get the\n * correct popper offsets.\n * @method\n * @memberof Popper.modifiers\n * @param {HTMLElement} reference - The reference element used to position the popper\n * @param {HTMLElement} popper - The HTML element used as popper.\n * @param {Object} options - Popper.js options\n */\nfunction applyStyleOnLoad(reference, popper, options, modifierOptions, state) {\n  // compute reference element offsets\n  var referenceOffsets = getReferenceOffsets(state, popper, reference);\n\n  // compute auto placement, store placement inside the data object,\n  // modifiers will be able to edit `placement` if needed\n  // and refer to originalPlacement to know the original value\n  var placement = computeAutoPlacement(options.placement, referenceOffsets, popper, reference, options.modifiers.flip.boundariesElement, options.modifiers.flip.padding);\n\n  popper.setAttribute('x-placement', placement);\n\n  // Apply `position` to popper before anything else because\n  // without the position applied we can't guarantee correct computations\n  setStyles(popper, { position: 'absolute' });\n\n  return options;\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nfunction computeStyle(data, options) {\n  var x = options.x,\n      y = options.y;\n  var popper = data.offsets.popper;\n\n  // Remove this legacy support in Popper.js v2\n\n  var legacyGpuAccelerationOption = find$1(data.instance.modifiers, function (modifier) {\n    return modifier.name === 'applyStyle';\n  }).gpuAcceleration;\n  if (legacyGpuAccelerationOption !== undefined) {\n    console.warn('WARNING: `gpuAcceleration` option moved to `computeStyle` modifier and will not be supported in future versions of Popper.js!');\n  }\n  var gpuAcceleration = legacyGpuAccelerationOption !== undefined ? legacyGpuAccelerationOption : options.gpuAcceleration;\n\n  var offsetParent = getOffsetParent(data.instance.popper);\n  var offsetParentRect = getBoundingClientRect(offsetParent);\n\n  // Styles\n  var styles = {\n    position: popper.position\n  };\n\n  // floor sides to avoid blurry text\n  var offsets = {\n    left: Math.floor(popper.left),\n    top: Math.floor(popper.top),\n    bottom: Math.floor(popper.bottom),\n    right: Math.floor(popper.right)\n  };\n\n  var sideA = x === 'bottom' ? 'top' : 'bottom';\n  var sideB = y === 'right' ? 'left' : 'right';\n\n  // if gpuAcceleration is set to `true` and transform is supported,\n  //  we use `translate3d` to apply the position to the popper we\n  // automatically use the supported prefixed version if needed\n  var prefixedProperty = getSupportedPropertyName('transform');\n\n  // now, let's make a step back and look at this code closely (wtf?)\n  // If the content of the popper grows once it's been positioned, it\n  // may happen that the popper gets misplaced because of the new content\n  // overflowing its reference element\n  // To avoid this problem, we provide two options (x and y), which allow\n  // the consumer to define the offset origin.\n  // If we position a popper on top of a reference element, we can set\n  // `x` to `top` to make the popper grow towards its top instead of\n  // its bottom.\n  var left = void 0,\n      top = void 0;\n  if (sideA === 'bottom') {\n    top = -offsetParentRect.height + offsets.bottom;\n  } else {\n    top = offsets.top;\n  }\n  if (sideB === 'right') {\n    left = -offsetParentRect.width + offsets.right;\n  } else {\n    left = offsets.left;\n  }\n  if (gpuAcceleration && prefixedProperty) {\n    styles[prefixedProperty] = 'translate3d(' + left + 'px, ' + top + 'px, 0)';\n    styles[sideA] = 0;\n    styles[sideB] = 0;\n    styles.willChange = 'transform';\n  } else {\n    // othwerise, we use the standard `top`, `left`, `bottom` and `right` properties\n    var invertTop = sideA === 'bottom' ? -1 : 1;\n    var invertLeft = sideB === 'right' ? -1 : 1;\n    styles[sideA] = top * invertTop;\n    styles[sideB] = left * invertLeft;\n    styles.willChange = sideA + ', ' + sideB;\n  }\n\n  // Attributes\n  var attributes = {\n    'x-placement': data.placement\n  };\n\n  // Update attributes and styles of `data`\n  data.attributes = _extends({}, attributes, data.attributes);\n  data.styles = _extends({}, styles, data.styles);\n\n  return data;\n}\n\n/**\n * Helper used to know if the given modifier depends from another one.<br />\n * It checks if the needed modifier is listed and enabled.\n * @method\n * @memberof Popper.Utils\n * @param {Array} modifiers - list of modifiers\n * @param {String} requestingName - name of requesting modifier\n * @param {String} requestedName - name of requested modifier\n * @returns {Boolean}\n */\nfunction isModifierRequired(modifiers, requestingName, requestedName) {\n  var requesting = find$1(modifiers, function (_ref) {\n    var name = _ref.name;\n    return name === requestingName;\n  });\n\n  var isRequired = !!requesting && modifiers.some(function (modifier) {\n    return modifier.name === requestedName && modifier.enabled && modifier.order < requesting.order;\n  });\n\n  if (!isRequired) {\n    var _requesting = '`' + requestingName + '`';\n    var requested = '`' + requestedName + '`';\n    console.warn(requested + ' modifier is required by ' + _requesting + ' modifier in order to work, be sure to include it before ' + _requesting + '!');\n  }\n  return isRequired;\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nfunction arrow(data, options) {\n  // arrow depends on keepTogether in order to work\n  if (!isModifierRequired(data.instance.modifiers, 'arrow', 'keepTogether')) {\n    return data;\n  }\n\n  var arrowElement = options.element;\n\n  // if arrowElement is a string, suppose it's a CSS selector\n  if (typeof arrowElement === 'string') {\n    arrowElement = data.instance.popper.querySelector(arrowElement);\n\n    // if arrowElement is not found, don't run the modifier\n    if (!arrowElement) {\n      return data;\n    }\n  } else {\n    // if the arrowElement isn't a query selector we must check that the\n    // provided DOM node is child of its popper node\n    if (!data.instance.popper.contains(arrowElement)) {\n      console.warn('WARNING: `arrow.element` must be child of its popper element!');\n      return data;\n    }\n  }\n\n  var placement = data.placement.split('-')[0];\n  var _data$offsets = data.offsets,\n      popper = _data$offsets.popper,\n      reference = _data$offsets.reference;\n\n  var isVertical = ['left', 'right'].indexOf(placement) !== -1;\n\n  var len = isVertical ? 'height' : 'width';\n  var side = isVertical ? 'top' : 'left';\n  var altSide = isVertical ? 'left' : 'top';\n  var opSide = isVertical ? 'bottom' : 'right';\n  var arrowElementSize = getOuterSizes(arrowElement)[len];\n\n  //\n  // extends keepTogether behavior making sure the popper and its reference have enough pixels in conjuction\n  //\n\n  // top/left side\n  if (reference[opSide] - arrowElementSize < popper[side]) {\n    data.offsets.popper[side] -= popper[side] - (reference[opSide] - arrowElementSize);\n  }\n  // bottom/right side\n  if (reference[side] + arrowElementSize > popper[opSide]) {\n    data.offsets.popper[side] += reference[side] + arrowElementSize - popper[opSide];\n  }\n\n  // compute center of the popper\n  var center = reference[side] + reference[len] / 2 - arrowElementSize / 2;\n\n  // Compute the sideValue using the updated popper offsets\n  var sideValue = center - getClientRect(data.offsets.popper)[side];\n\n  // prevent arrowElement from being placed not contiguously to its popper\n  sideValue = Math.max(Math.min(popper[len] - arrowElementSize, sideValue), 0);\n\n  data.arrowElement = arrowElement;\n  data.offsets.arrow = {};\n  data.offsets.arrow[side] = Math.round(sideValue);\n  data.offsets.arrow[altSide] = ''; // make sure to unset any eventual altSide value from the DOM node\n\n  return data;\n}\n\n/**\n * Get the opposite placement variation of the given one\n * @method\n * @memberof Popper.Utils\n * @argument {String} placement variation\n * @returns {String} flipped placement variation\n */\nfunction getOppositeVariation(variation) {\n  if (variation === 'end') {\n    return 'start';\n  } else if (variation === 'start') {\n    return 'end';\n  }\n  return variation;\n}\n\n/**\n * List of accepted placements to use as values of the `placement` option.<br />\n * Valid placements are:\n * - `auto`\n * - `top`\n * - `right`\n * - `bottom`\n * - `left`\n *\n * Each placement can have a variation from this list:\n * - `-start`\n * - `-end`\n *\n * Variations are interpreted easily if you think of them as the left to right\n * written languages. Horizontally (`top` and `bottom`), `start` is left and `end`\n * is right.<br />\n * Vertically (`left` and `right`), `start` is top and `end` is bottom.\n *\n * Some valid examples are:\n * - `top-end` (on top of reference, right aligned)\n * - `right-start` (on right of reference, top aligned)\n * - `bottom` (on bottom, centered)\n * - `auto-right` (on the side with more space available, alignment depends by placement)\n *\n * @static\n * @type {Array}\n * @enum {String}\n * @readonly\n * @method placements\n * @memberof Popper\n */\nvar placements = ['auto-start', 'auto', 'auto-end', 'top-start', 'top', 'top-end', 'right-start', 'right', 'right-end', 'bottom-end', 'bottom', 'bottom-start', 'left-end', 'left', 'left-start'];\n\n// Get rid of `auto` `auto-start` and `auto-end`\nvar validPlacements = placements.slice(3);\n\n/**\n * Given an initial placement, returns all the subsequent placements\n * clockwise (or counter-clockwise).\n *\n * @method\n * @memberof Popper.Utils\n * @argument {String} placement - A valid placement (it accepts variations)\n * @argument {Boolean} counter - Set to true to walk the placements counterclockwise\n * @returns {Array} placements including their variations\n */\nfunction clockwise(placement) {\n  var counter = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n  var index = validPlacements.indexOf(placement);\n  var arr = validPlacements.slice(index + 1).concat(validPlacements.slice(0, index));\n  return counter ? arr.reverse() : arr;\n}\n\nvar BEHAVIORS = {\n  FLIP: 'flip',\n  CLOCKWISE: 'clockwise',\n  COUNTERCLOCKWISE: 'counterclockwise'\n};\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nfunction flip(data, options) {\n  // if `inner` modifier is enabled, we can't use the `flip` modifier\n  if (isModifierEnabled(data.instance.modifiers, 'inner')) {\n    return data;\n  }\n\n  if (data.flipped && data.placement === data.originalPlacement) {\n    // seems like flip is trying to loop, probably there's not enough space on any of the flippable sides\n    return data;\n  }\n\n  var boundaries = getBoundaries(data.instance.popper, data.instance.reference, options.padding, options.boundariesElement);\n\n  var placement = data.placement.split('-')[0];\n  var placementOpposite = getOppositePlacement(placement);\n  var variation = data.placement.split('-')[1] || '';\n\n  var flipOrder = [];\n\n  switch (options.behavior) {\n    case BEHAVIORS.FLIP:\n      flipOrder = [placement, placementOpposite];\n      break;\n    case BEHAVIORS.CLOCKWISE:\n      flipOrder = clockwise(placement);\n      break;\n    case BEHAVIORS.COUNTERCLOCKWISE:\n      flipOrder = clockwise(placement, true);\n      break;\n    default:\n      flipOrder = options.behavior;\n  }\n\n  flipOrder.forEach(function (step, index) {\n    if (placement !== step || flipOrder.length === index + 1) {\n      return data;\n    }\n\n    placement = data.placement.split('-')[0];\n    placementOpposite = getOppositePlacement(placement);\n\n    var popperOffsets = data.offsets.popper;\n    var refOffsets = data.offsets.reference;\n\n    // using floor because the reference offsets may contain decimals we are not going to consider here\n    var floor = Math.floor;\n    var overlapsRef = placement === 'left' && floor(popperOffsets.right) > floor(refOffsets.left) || placement === 'right' && floor(popperOffsets.left) < floor(refOffsets.right) || placement === 'top' && floor(popperOffsets.bottom) > floor(refOffsets.top) || placement === 'bottom' && floor(popperOffsets.top) < floor(refOffsets.bottom);\n\n    var overflowsLeft = floor(popperOffsets.left) < floor(boundaries.left);\n    var overflowsRight = floor(popperOffsets.right) > floor(boundaries.right);\n    var overflowsTop = floor(popperOffsets.top) < floor(boundaries.top);\n    var overflowsBottom = floor(popperOffsets.bottom) > floor(boundaries.bottom);\n\n    var overflowsBoundaries = placement === 'left' && overflowsLeft || placement === 'right' && overflowsRight || placement === 'top' && overflowsTop || placement === 'bottom' && overflowsBottom;\n\n    // flip the variation if required\n    var isVertical = ['top', 'bottom'].indexOf(placement) !== -1;\n    var flippedVariation = !!options.flipVariations && (isVertical && variation === 'start' && overflowsLeft || isVertical && variation === 'end' && overflowsRight || !isVertical && variation === 'start' && overflowsTop || !isVertical && variation === 'end' && overflowsBottom);\n\n    if (overlapsRef || overflowsBoundaries || flippedVariation) {\n      // this boolean to detect any flip loop\n      data.flipped = true;\n\n      if (overlapsRef || overflowsBoundaries) {\n        placement = flipOrder[index + 1];\n      }\n\n      if (flippedVariation) {\n        variation = getOppositeVariation(variation);\n      }\n\n      data.placement = placement + (variation ? '-' + variation : '');\n\n      // this object contains `position`, we want to preserve it along with\n      // any additional property we may add in the future\n      data.offsets.popper = _extends({}, data.offsets.popper, getPopperOffsets(data.instance.popper, data.offsets.reference, data.placement));\n\n      data = runModifiers(data.instance.modifiers, data, 'flip');\n    }\n  });\n  return data;\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nfunction keepTogether(data) {\n  var _data$offsets = data.offsets,\n      popper = _data$offsets.popper,\n      reference = _data$offsets.reference;\n\n  var placement = data.placement.split('-')[0];\n  var floor = Math.floor;\n  var isVertical = ['top', 'bottom'].indexOf(placement) !== -1;\n  var side = isVertical ? 'right' : 'bottom';\n  var opSide = isVertical ? 'left' : 'top';\n  var measurement = isVertical ? 'width' : 'height';\n\n  if (popper[side] < floor(reference[opSide])) {\n    data.offsets.popper[opSide] = floor(reference[opSide]) - popper[measurement];\n  }\n  if (popper[opSide] > floor(reference[side])) {\n    data.offsets.popper[opSide] = floor(reference[side]);\n  }\n\n  return data;\n}\n\n/**\n * Converts a string containing value + unit into a px value number\n * @function\n * @memberof {modifiers~offset}\n * @private\n * @argument {String} str - Value + unit string\n * @argument {String} measurement - `height` or `width`\n * @argument {Object} popperOffsets\n * @argument {Object} referenceOffsets\n * @returns {Number|String}\n * Value in pixels, or original string if no values were extracted\n */\nfunction toValue(str, measurement, popperOffsets, referenceOffsets) {\n  // separate value from unit\n  var split = str.match(/((?:\\-|\\+)?\\d*\\.?\\d*)(.*)/);\n  var value = +split[1];\n  var unit = split[2];\n\n  // If it's not a number it's an operator, I guess\n  if (!value) {\n    return str;\n  }\n\n  if (unit.indexOf('%') === 0) {\n    var element = void 0;\n    switch (unit) {\n      case '%p':\n        element = popperOffsets;\n        break;\n      case '%':\n      case '%r':\n      default:\n        element = referenceOffsets;\n    }\n\n    var rect = getClientRect(element);\n    return rect[measurement] / 100 * value;\n  } else if (unit === 'vh' || unit === 'vw') {\n    // if is a vh or vw, we calculate the size based on the viewport\n    var size = void 0;\n    if (unit === 'vh') {\n      size = Math.max(document.documentElement.clientHeight, window.innerHeight || 0);\n    } else {\n      size = Math.max(document.documentElement.clientWidth, window.innerWidth || 0);\n    }\n    return size / 100 * value;\n  } else {\n    // if is an explicit pixel unit, we get rid of the unit and keep the value\n    // if is an implicit unit, it's px, and we return just the value\n    return value;\n  }\n}\n\n/**\n * Parse an `offset` string to extrapolate `x` and `y` numeric offsets.\n * @function\n * @memberof {modifiers~offset}\n * @private\n * @argument {String} offset\n * @argument {Object} popperOffsets\n * @argument {Object} referenceOffsets\n * @argument {String} basePlacement\n * @returns {Array} a two cells array with x and y offsets in numbers\n */\nfunction parseOffset(offset, popperOffsets, referenceOffsets, basePlacement) {\n  var offsets = [0, 0];\n\n  // Use height if placement is left or right and index is 0 otherwise use width\n  // in this way the first offset will use an axis and the second one\n  // will use the other one\n  var useHeight = ['right', 'left'].indexOf(basePlacement) !== -1;\n\n  // Split the offset string to obtain a list of values and operands\n  // The regex addresses values with the plus or minus sign in front (+10, -20, etc)\n  var fragments = offset.split(/(\\+|\\-)/).map(function (frag) {\n    return frag.trim();\n  });\n\n  // Detect if the offset string contains a pair of values or a single one\n  // they could be separated by comma or space\n  var divider = fragments.indexOf(find$1(fragments, function (frag) {\n    return frag.search(/,|\\s/) !== -1;\n  }));\n\n  if (fragments[divider] && fragments[divider].indexOf(',') === -1) {\n    console.warn('Offsets separated by white space(s) are deprecated, use a comma (,) instead.');\n  }\n\n  // If divider is found, we divide the list of values and operands to divide\n  // them by ofset X and Y.\n  var splitRegex = /\\s*,\\s*|\\s+/;\n  var ops = divider !== -1 ? [fragments.slice(0, divider).concat([fragments[divider].split(splitRegex)[0]]), [fragments[divider].split(splitRegex)[1]].concat(fragments.slice(divider + 1))] : [fragments];\n\n  // Convert the values with units to absolute pixels to allow our computations\n  ops = ops.map(function (op, index) {\n    // Most of the units rely on the orientation of the popper\n    var measurement = (index === 1 ? !useHeight : useHeight) ? 'height' : 'width';\n    var mergeWithPrevious = false;\n    return op\n    // This aggregates any `+` or `-` sign that aren't considered operators\n    // e.g.: 10 + +5 => [10, +, +5]\n    .reduce(function (a, b) {\n      if (a[a.length - 1] === '' && ['+', '-'].indexOf(b) !== -1) {\n        a[a.length - 1] = b;\n        mergeWithPrevious = true;\n        return a;\n      } else if (mergeWithPrevious) {\n        a[a.length - 1] += b;\n        mergeWithPrevious = false;\n        return a;\n      } else {\n        return a.concat(b);\n      }\n    }, [])\n    // Here we convert the string values into number values (in px)\n    .map(function (str) {\n      return toValue(str, measurement, popperOffsets, referenceOffsets);\n    });\n  });\n\n  // Loop trough the offsets arrays and execute the operations\n  ops.forEach(function (op, index) {\n    op.forEach(function (frag, index2) {\n      if (isNumeric(frag)) {\n        offsets[index] += frag * (op[index2 - 1] === '-' ? -1 : 1);\n      }\n    });\n  });\n  return offsets;\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @argument {Number|String} options.offset=0\n * The offset value as described in the modifier description\n * @returns {Object} The data object, properly modified\n */\nfunction offset(data, _ref) {\n  var offset = _ref.offset;\n  var placement = data.placement,\n      _data$offsets = data.offsets,\n      popper = _data$offsets.popper,\n      reference = _data$offsets.reference;\n\n  var basePlacement = placement.split('-')[0];\n\n  var offsets = void 0;\n  if (isNumeric(+offset)) {\n    offsets = [+offset, 0];\n  } else {\n    offsets = parseOffset(offset, popper, reference, basePlacement);\n  }\n\n  if (basePlacement === 'left') {\n    popper.top += offsets[0];\n    popper.left -= offsets[1];\n  } else if (basePlacement === 'right') {\n    popper.top += offsets[0];\n    popper.left += offsets[1];\n  } else if (basePlacement === 'top') {\n    popper.left += offsets[0];\n    popper.top -= offsets[1];\n  } else if (basePlacement === 'bottom') {\n    popper.left += offsets[0];\n    popper.top += offsets[1];\n  }\n\n  data.popper = popper;\n  return data;\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nfunction preventOverflow(data, options) {\n  var boundariesElement = options.boundariesElement || getOffsetParent(data.instance.popper);\n\n  // If offsetParent is the reference element, we really want to\n  // go one step up and use the next offsetParent as reference to\n  // avoid to make this modifier completely useless and look like broken\n  if (data.instance.reference === boundariesElement) {\n    boundariesElement = getOffsetParent(boundariesElement);\n  }\n\n  var boundaries = getBoundaries(data.instance.popper, data.instance.reference, options.padding, boundariesElement);\n  options.boundaries = boundaries;\n\n  var order = options.priority;\n  var popper = data.offsets.popper;\n\n  var check = {\n    primary: function primary(placement) {\n      var value = popper[placement];\n      if (popper[placement] < boundaries[placement] && !options.escapeWithReference) {\n        value = Math.max(popper[placement], boundaries[placement]);\n      }\n      return defineProperty({}, placement, value);\n    },\n    secondary: function secondary(placement) {\n      var mainSide = placement === 'right' ? 'left' : 'top';\n      var value = popper[mainSide];\n      if (popper[placement] > boundaries[placement] && !options.escapeWithReference) {\n        value = Math.min(popper[mainSide], boundaries[placement] - (placement === 'right' ? popper.width : popper.height));\n      }\n      return defineProperty({}, mainSide, value);\n    }\n  };\n\n  order.forEach(function (placement) {\n    var side = ['left', 'top'].indexOf(placement) !== -1 ? 'primary' : 'secondary';\n    popper = _extends({}, popper, check[side](placement));\n  });\n\n  data.offsets.popper = popper;\n\n  return data;\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nfunction shift(data) {\n  var placement = data.placement;\n  var basePlacement = placement.split('-')[0];\n  var shiftvariation = placement.split('-')[1];\n\n  // if shift shiftvariation is specified, run the modifier\n  if (shiftvariation) {\n    var _data$offsets = data.offsets,\n        reference = _data$offsets.reference,\n        popper = _data$offsets.popper;\n\n    var isVertical = ['bottom', 'top'].indexOf(basePlacement) !== -1;\n    var side = isVertical ? 'left' : 'top';\n    var measurement = isVertical ? 'width' : 'height';\n\n    var shiftOffsets = {\n      start: defineProperty({}, side, reference[side]),\n      end: defineProperty({}, side, reference[side] + reference[measurement] - popper[measurement])\n    };\n\n    data.offsets.popper = _extends({}, popper, shiftOffsets[shiftvariation]);\n  }\n\n  return data;\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nfunction hide(data) {\n  if (!isModifierRequired(data.instance.modifiers, 'hide', 'preventOverflow')) {\n    return data;\n  }\n\n  var refRect = data.offsets.reference;\n  var bound = find$1(data.instance.modifiers, function (modifier) {\n    return modifier.name === 'preventOverflow';\n  }).boundaries;\n\n  if (refRect.bottom < bound.top || refRect.left > bound.right || refRect.top > bound.bottom || refRect.right < bound.left) {\n    // Avoid unnecessary DOM access if visibility hasn't changed\n    if (data.hide === true) {\n      return data;\n    }\n\n    data.hide = true;\n    data.attributes['x-out-of-boundaries'] = '';\n  } else {\n    // Avoid unnecessary DOM access if visibility hasn't changed\n    if (data.hide === false) {\n      return data;\n    }\n\n    data.hide = false;\n    data.attributes['x-out-of-boundaries'] = false;\n  }\n\n  return data;\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nfunction inner(data) {\n  var placement = data.placement;\n  var basePlacement = placement.split('-')[0];\n  var _data$offsets = data.offsets,\n      popper = _data$offsets.popper,\n      reference = _data$offsets.reference;\n\n  var isHoriz = ['left', 'right'].indexOf(basePlacement) !== -1;\n\n  var subtractLength = ['top', 'left'].indexOf(basePlacement) === -1;\n\n  popper[isHoriz ? 'left' : 'top'] = reference[placement] - (subtractLength ? popper[isHoriz ? 'width' : 'height'] : 0);\n\n  data.placement = getOppositePlacement(placement);\n  data.offsets.popper = getClientRect(popper);\n\n  return data;\n}\n\n/**\n * Modifier function, each modifier can have a function of this type assigned\n * to its `fn` property.<br />\n * These functions will be called on each update, this means that you must\n * make sure they are performant enough to avoid performance bottlenecks.\n *\n * @function ModifierFn\n * @argument {dataObject} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {dataObject} The data object, properly modified\n */\n\n/**\n * Modifiers are plugins used to alter the behavior of your poppers.<br />\n * Popper.js uses a set of 9 modifiers to provide all the basic functionalities\n * needed by the library.\n *\n * Usually you don't want to override the `order`, `fn` and `onLoad` props.\n * All the other properties are configurations that could be tweaked.\n * @namespace modifiers\n */\nvar modifiers = {\n  /**\n   * Modifier used to shift the popper on the start or end of its reference\n   * element.<br />\n   * It will read the variation of the `placement` property.<br />\n   * It can be one either `-end` or `-start`.\n   * @memberof modifiers\n   * @inner\n   */\n  shift: {\n    /** @prop {number} order=100 - Index used to define the order of execution */\n    order: 100,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: shift\n  },\n\n  /**\n   * The `offset` modifier can shift your popper on both its axis.\n   *\n   * It accepts the following units:\n   * - `px` or unitless, interpreted as pixels\n   * - `%` or `%r`, percentage relative to the length of the reference element\n   * - `%p`, percentage relative to the length of the popper element\n   * - `vw`, CSS viewport width unit\n   * - `vh`, CSS viewport height unit\n   *\n   * For length is intended the main axis relative to the placement of the popper.<br />\n   * This means that if the placement is `top` or `bottom`, the length will be the\n   * `width`. In case of `left` or `right`, it will be the height.\n   *\n   * You can provide a single value (as `Number` or `String`), or a pair of values\n   * as `String` divided by a comma or one (or more) white spaces.<br />\n   * The latter is a deprecated method because it leads to confusion and will be\n   * removed in v2.<br />\n   * Additionally, it accepts additions and subtractions between different units.\n   * Note that multiplications and divisions aren't supported.\n   *\n   * Valid examples are:\n   * ```\n   * 10\n   * '10%'\n   * '10, 10'\n   * '10%, 10'\n   * '10 + 10%'\n   * '10 - 5vh + 3%'\n   * '-10px + 5vh, 5px - 6%'\n   * ```\n   *\n   * @memberof modifiers\n   * @inner\n   */\n  offset: {\n    /** @prop {number} order=200 - Index used to define the order of execution */\n    order: 200,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: offset,\n    /** @prop {Number|String} offset=0\n     * The offset value as described in the modifier description\n     */\n    offset: 0\n  },\n\n  /**\n   * Modifier used to prevent the popper from being positioned outside the boundary.\n   *\n   * An scenario exists where the reference itself is not within the boundaries.<br />\n   * We can say it has \"escaped the boundaries\" — or just \"escaped\".<br />\n   * In this case we need to decide whether the popper should either:\n   *\n   * - detach from the reference and remain \"trapped\" in the boundaries, or\n   * - if it should ignore the boundary and \"escape with its reference\"\n   *\n   * When `escapeWithReference` is set to`true` and reference is completely\n   * outside its boundaries, the popper will overflow (or completely leave)\n   * the boundaries in order to remain attached to the edge of the reference.\n   *\n   * @memberof modifiers\n   * @inner\n   */\n  preventOverflow: {\n    /** @prop {number} order=300 - Index used to define the order of execution */\n    order: 300,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: preventOverflow,\n    /**\n     * @prop {Array} [priority=['left','right','top','bottom']]\n     * Popper will try to prevent overflow following these priorities by default,\n     * then, it could overflow on the left and on top of the `boundariesElement`\n     */\n    priority: ['left', 'right', 'top', 'bottom'],\n    /**\n     * @prop {number} padding=5\n     * Amount of pixel used to define a minimum distance between the boundaries\n     * and the popper this makes sure the popper has always a little padding\n     * between the edges of its container\n     */\n    padding: 5,\n    /**\n     * @prop {String|HTMLElement} boundariesElement='scrollParent'\n     * Boundaries used by the modifier, can be `scrollParent`, `window`,\n     * `viewport` or any DOM element.\n     */\n    boundariesElement: 'scrollParent'\n  },\n\n  /**\n   * Modifier used to make sure the reference and its popper stay near eachothers\n   * without leaving any gap between the two. Expecially useful when the arrow is\n   * enabled and you want to assure it to point to its reference element.\n   * It cares only about the first axis, you can still have poppers with margin\n   * between the popper and its reference element.\n   * @memberof modifiers\n   * @inner\n   */\n  keepTogether: {\n    /** @prop {number} order=400 - Index used to define the order of execution */\n    order: 400,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: keepTogether\n  },\n\n  /**\n   * This modifier is used to move the `arrowElement` of the popper to make\n   * sure it is positioned between the reference element and its popper element.\n   * It will read the outer size of the `arrowElement` node to detect how many\n   * pixels of conjuction are needed.\n   *\n   * It has no effect if no `arrowElement` is provided.\n   * @memberof modifiers\n   * @inner\n   */\n  arrow: {\n    /** @prop {number} order=500 - Index used to define the order of execution */\n    order: 500,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: arrow,\n    /** @prop {String|HTMLElement} element='[x-arrow]' - Selector or node used as arrow */\n    element: '[x-arrow]'\n  },\n\n  /**\n   * Modifier used to flip the popper's placement when it starts to overlap its\n   * reference element.\n   *\n   * Requires the `preventOverflow` modifier before it in order to work.\n   *\n   * **NOTE:** this modifier will interrupt the current update cycle and will\n   * restart it if it detects the need to flip the placement.\n   * @memberof modifiers\n   * @inner\n   */\n  flip: {\n    /** @prop {number} order=600 - Index used to define the order of execution */\n    order: 600,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: flip,\n    /**\n     * @prop {String|Array} behavior='flip'\n     * The behavior used to change the popper's placement. It can be one of\n     * `flip`, `clockwise`, `counterclockwise` or an array with a list of valid\n     * placements (with optional variations).\n     */\n    behavior: 'flip',\n    /**\n     * @prop {number} padding=5\n     * The popper will flip if it hits the edges of the `boundariesElement`\n     */\n    padding: 5,\n    /**\n     * @prop {String|HTMLElement} boundariesElement='viewport'\n     * The element which will define the boundaries of the popper position,\n     * the popper will never be placed outside of the defined boundaries\n     * (except if keepTogether is enabled)\n     */\n    boundariesElement: 'viewport'\n  },\n\n  /**\n   * Modifier used to make the popper flow toward the inner of the reference element.\n   * By default, when this modifier is disabled, the popper will be placed outside\n   * the reference element.\n   * @memberof modifiers\n   * @inner\n   */\n  inner: {\n    /** @prop {number} order=700 - Index used to define the order of execution */\n    order: 700,\n    /** @prop {Boolean} enabled=false - Whether the modifier is enabled or not */\n    enabled: false,\n    /** @prop {ModifierFn} */\n    fn: inner\n  },\n\n  /**\n   * Modifier used to hide the popper when its reference element is outside of the\n   * popper boundaries. It will set a `x-out-of-boundaries` attribute which can\n   * be used to hide with a CSS selector the popper when its reference is\n   * out of boundaries.\n   *\n   * Requires the `preventOverflow` modifier before it in order to work.\n   * @memberof modifiers\n   * @inner\n   */\n  hide: {\n    /** @prop {number} order=800 - Index used to define the order of execution */\n    order: 800,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: hide\n  },\n\n  /**\n   * Computes the style that will be applied to the popper element to gets\n   * properly positioned.\n   *\n   * Note that this modifier will not touch the DOM, it just prepares the styles\n   * so that `applyStyle` modifier can apply it. This separation is useful\n   * in case you need to replace `applyStyle` with a custom implementation.\n   *\n   * This modifier has `850` as `order` value to maintain backward compatibility\n   * with previous versions of Popper.js. Expect the modifiers ordering method\n   * to change in future major versions of the library.\n   *\n   * @memberof modifiers\n   * @inner\n   */\n  computeStyle: {\n    /** @prop {number} order=850 - Index used to define the order of execution */\n    order: 850,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: computeStyle,\n    /**\n     * @prop {Boolean} gpuAcceleration=true\n     * If true, it uses the CSS 3d transformation to position the popper.\n     * Otherwise, it will use the `top` and `left` properties.\n     */\n    gpuAcceleration: true,\n    /**\n     * @prop {string} [x='bottom']\n     * Where to anchor the X axis (`bottom` or `top`). AKA X offset origin.\n     * Change this if your popper should grow in a direction different from `bottom`\n     */\n    x: 'bottom',\n    /**\n     * @prop {string} [x='left']\n     * Where to anchor the Y axis (`left` or `right`). AKA Y offset origin.\n     * Change this if your popper should grow in a direction different from `right`\n     */\n    y: 'right'\n  },\n\n  /**\n   * Applies the computed styles to the popper element.\n   *\n   * All the DOM manipulations are limited to this modifier. This is useful in case\n   * you want to integrate Popper.js inside a framework or view library and you\n   * want to delegate all the DOM manipulations to it.\n   *\n   * Note that if you disable this modifier, you must make sure the popper element\n   * has its position set to `absolute` before Popper.js can do its work!\n   *\n   * Just disable this modifier and define you own to achieve the desired effect.\n   *\n   * @memberof modifiers\n   * @inner\n   */\n  applyStyle: {\n    /** @prop {number} order=900 - Index used to define the order of execution */\n    order: 900,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: applyStyle,\n    /** @prop {Function} */\n    onLoad: applyStyleOnLoad,\n    /**\n     * @deprecated since version 1.10.0, the property moved to `computeStyle` modifier\n     * @prop {Boolean} gpuAcceleration=true\n     * If true, it uses the CSS 3d transformation to position the popper.\n     * Otherwise, it will use the `top` and `left` properties.\n     */\n    gpuAcceleration: undefined\n  }\n};\n\n/**\n * The `dataObject` is an object containing all the informations used by Popper.js\n * this object get passed to modifiers and to the `onCreate` and `onUpdate` callbacks.\n * @name dataObject\n * @property {Object} data.instance The Popper.js instance\n * @property {String} data.placement Placement applied to popper\n * @property {String} data.originalPlacement Placement originally defined on init\n * @property {Boolean} data.flipped True if popper has been flipped by flip modifier\n * @property {Boolean} data.hide True if the reference element is out of boundaries, useful to know when to hide the popper.\n * @property {HTMLElement} data.arrowElement Node used as arrow by arrow modifier\n * @property {Object} data.styles Any CSS property defined here will be applied to the popper, it expects the JavaScript nomenclature (eg. `marginBottom`)\n * @property {Object} data.boundaries Offsets of the popper boundaries\n * @property {Object} data.offsets The measurements of popper, reference and arrow elements.\n * @property {Object} data.offsets.popper `top`, `left`, `width`, `height` values\n * @property {Object} data.offsets.reference `top`, `left`, `width`, `height` values\n * @property {Object} data.offsets.arrow] `top` and `left` offsets, only one of them will be different from 0\n */\n\n/**\n * Default options provided to Popper.js constructor.<br />\n * These can be overriden using the `options` argument of Popper.js.<br />\n * To override an option, simply pass as 3rd argument an object with the same\n * structure of this object, example:\n * ```\n * new Popper(ref, pop, {\n *   modifiers: {\n *     preventOverflow: { enabled: false }\n *   }\n * })\n * ```\n * @type {Object}\n * @static\n * @memberof Popper\n */\nvar Defaults$1 = {\n  /**\n   * Popper's placement\n   * @prop {Popper.placements} placement='bottom'\n   */\n  placement: 'bottom',\n\n  /**\n   * Whether events (resize, scroll) are initially enabled\n   * @prop {Boolean} eventsEnabled=true\n   */\n  eventsEnabled: true,\n\n  /**\n   * Set to true if you want to automatically remove the popper when\n   * you call the `destroy` method.\n   * @prop {Boolean} removeOnDestroy=false\n   */\n  removeOnDestroy: false,\n\n  /**\n   * Callback called when the popper is created.<br />\n   * By default, is set to no-op.<br />\n   * Access Popper.js instance with `data.instance`.\n   * @prop {onCreate}\n   */\n  onCreate: function onCreate() {},\n\n  /**\n   * Callback called when the popper is updated, this callback is not called\n   * on the initialization/creation of the popper, but only on subsequent\n   * updates.<br />\n   * By default, is set to no-op.<br />\n   * Access Popper.js instance with `data.instance`.\n   * @prop {onUpdate}\n   */\n  onUpdate: function onUpdate() {},\n\n  /**\n   * List of modifiers used to modify the offsets before they are applied to the popper.\n   * They provide most of the functionalities of Popper.js\n   * @prop {modifiers}\n   */\n  modifiers: modifiers\n};\n\n/**\n * @callback onCreate\n * @param {dataObject} data\n */\n\n/**\n * @callback onUpdate\n * @param {dataObject} data\n */\n\n// Utils\n// Methods\nvar Popper = function () {\n  /**\n   * Create a new Popper.js instance\n   * @class Popper\n   * @param {HTMLElement|referenceObject} reference - The reference element used to position the popper\n   * @param {HTMLElement} popper - The HTML element used as popper.\n   * @param {Object} options - Your custom options to override the ones defined in [Defaults](#defaults)\n   * @return {Object} instance - The generated Popper.js instance\n   */\n  function Popper(reference, popper) {\n    var _this = this;\n\n    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    classCallCheck(this, Popper);\n\n    this.scheduleUpdate = function () {\n      return requestAnimationFrame(_this.update);\n    };\n\n    // make update() debounced, so that it only runs at most once-per-tick\n    this.update = debounce(this.update.bind(this));\n\n    // with {} we create a new object with the options inside it\n    this.options = _extends({}, Popper.Defaults, options);\n\n    // init state\n    this.state = {\n      isDestroyed: false,\n      isCreated: false,\n      scrollParents: []\n    };\n\n    // get reference and popper elements (allow jQuery wrappers)\n    this.reference = reference.jquery ? reference[0] : reference;\n    this.popper = popper.jquery ? popper[0] : popper;\n\n    // Deep merge modifiers options\n    this.options.modifiers = {};\n    Object.keys(_extends({}, Popper.Defaults.modifiers, options.modifiers)).forEach(function (name) {\n      _this.options.modifiers[name] = _extends({}, Popper.Defaults.modifiers[name] || {}, options.modifiers ? options.modifiers[name] : {});\n    });\n\n    // Refactoring modifiers' list (Object => Array)\n    this.modifiers = Object.keys(this.options.modifiers).map(function (name) {\n      return _extends({\n        name: name\n      }, _this.options.modifiers[name]);\n    })\n    // sort the modifiers by order\n    .sort(function (a, b) {\n      return a.order - b.order;\n    });\n\n    // modifiers have the ability to execute arbitrary code when Popper.js get inited\n    // such code is executed in the same order of its modifier\n    // they could add new properties to their options configuration\n    // BE AWARE: don't add options to `options.modifiers.name` but to `modifierOptions`!\n    this.modifiers.forEach(function (modifierOptions) {\n      if (modifierOptions.enabled && isFunction(modifierOptions.onLoad)) {\n        modifierOptions.onLoad(_this.reference, _this.popper, _this.options, modifierOptions, _this.state);\n      }\n    });\n\n    // fire the first update to position the popper in the right place\n    this.update();\n\n    var eventsEnabled = this.options.eventsEnabled;\n    if (eventsEnabled) {\n      // setup event listeners, they will take care of update the position in specific situations\n      this.enableEventListeners();\n    }\n\n    this.state.eventsEnabled = eventsEnabled;\n  }\n\n  // We can't use class properties because they don't get listed in the\n  // class prototype and break stuff like Sinon stubs\n\n\n  createClass(Popper, [{\n    key: 'update',\n    value: function update$$1() {\n      return update.call(this);\n    }\n  }, {\n    key: 'destroy',\n    value: function destroy$$1() {\n      return destroy.call(this);\n    }\n  }, {\n    key: 'enableEventListeners',\n    value: function enableEventListeners$$1() {\n      return enableEventListeners.call(this);\n    }\n  }, {\n    key: 'disableEventListeners',\n    value: function disableEventListeners$$1() {\n      return disableEventListeners.call(this);\n    }\n\n    /**\n     * Schedule an update, it will run on the next UI update available\n     * @method scheduleUpdate\n     * @memberof Popper\n     */\n\n    /**\n     * Collection of utilities useful when writing custom modifiers.\n     * Starting from version 1.7, this method is available only if you\n     * include `popper-utils.js` before `popper.js`.\n     *\n     * **DEPRECATION**: This way to access PopperUtils is deprecated\n     * and will be removed in v2! Use the PopperUtils module directly instead.\n     * Due to the high instability of the methods contained in Utils, we can't\n     * guarantee them to follow semver. Use them at your own risk!\n     * @static\n     * @private\n     * @type {Object}\n     * @deprecated since version 1.8\n     * @member Utils\n     * @memberof Popper\n     */\n\n  }]);\n  return Popper;\n}();\n\n/**\n * The `referenceObject` is an object that provides an interface compatible with Popper.js\n * and lets you use it as replacement of a real DOM node.<br />\n * You can use this method to position a popper relatively to a set of coordinates\n * in case you don't have a DOM node to use as reference.\n *\n * ```\n * new Popper(referenceObject, popperNode);\n * ```\n *\n * NB: This feature isn't supported in Internet Explorer 10\n * @name referenceObject\n * @property {Function} data.getBoundingClientRect\n * A function that returns a set of coordinates compatible with the native `getBoundingClientRect` method.\n * @property {number} data.clientWidth\n * An ES6 getter that will return the width of the virtual reference element.\n * @property {number} data.clientHeight\n * An ES6 getter that will return the height of the virtual reference element.\n */\n\nPopper.Utils = (typeof window !== 'undefined' ? window : global).PopperUtils;\nPopper.placements = placements;\nPopper.Defaults = Defaults$1;\n\n/**\n* Returns the distance taking into account the default distance due to\n* the transform: translate setting in CSS\n* @param {Number} distance\n* @return {String}\n*/\nfunction getOffsetDistanceInPx(distance) {\n  return -(distance - Defaults.distance) + 'px';\n}\n\nvar classCallCheck$1 = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\nvar createClass$1 = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\n\n\n\n\n\n\nvar _extends$1 = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\n/**\n* Creates a new popper instance\n* @param {Object} refData\n* @return {Object} - the popper instance\n*/\nfunction createPopperInstance(refData) {\n  var el = refData.el,\n      popper = refData.popper,\n      _refData$settings = refData.settings,\n      position = _refData$settings.position,\n      popperOptions = _refData$settings.popperOptions,\n      offset = _refData$settings.offset,\n      distance = _refData$settings.distance,\n      flipDuration = _refData$settings.flipDuration;\n\n\n  var tooltip = popper.querySelector(Selectors.TOOLTIP);\n\n  var config = _extends$1({\n    placement: position\n  }, popperOptions || {}, {\n    modifiers: _extends$1({}, popperOptions ? popperOptions.modifiers : {}, {\n      flip: _extends$1({\n        padding: distance + 5 /* 5px from viewport boundary */\n      }, popperOptions && popperOptions.modifiers ? popperOptions.modifiers.flip : {}),\n      offset: _extends$1({\n        offset: offset\n      }, popperOptions && popperOptions.modifiers ? popperOptions.modifiers.offset : {})\n    }),\n    onUpdate: function onUpdate() {\n      var styles = tooltip.style;\n      styles.top = '';\n      styles.bottom = '';\n      styles.left = '';\n      styles.right = '';\n      styles[getCorePlacement(popper.getAttribute('x-placement'))] = getOffsetDistanceInPx(distance);\n    }\n  });\n\n  return new Popper(el, popper, config);\n}\n\n/**\n* Appends the popper and creates a popper instance if one does not exist\n* Also updates its position if need be and enables event listeners\n* @param {Object} refData -  the element/popper reference data\n*/\nfunction mountPopper(refData) {\n  var el = refData.el,\n      popper = refData.popper,\n      _refData$settings = refData.settings,\n      appendTo = _refData$settings.appendTo,\n      followCursor = _refData$settings.followCursor,\n      flipDuration = _refData$settings.flipDuration;\n\n  // Already on the DOM\n\n  if (appendTo.contains(popper)) return;\n\n  appendTo.appendChild(popper);\n\n  if (!refData.popperInstance) {\n    // Create instance if it hasn't been created yet\n    refData.popperInstance = createPopperInstance(refData);\n\n    // Update the popper's position whenever its content changes\n    // Not supported in IE10 unless polyfilled\n    if (window.MutationObserver) {\n      var styles = popper.style;\n      var observer = new MutationObserver(function () {\n        styles[prefix('transitionDuration')] = '0ms';\n        refData.popperInstance.update();\n        queueExecution(function () {\n          styles[prefix('transitionDuration')] = flipDuration + 'ms';\n        });\n      });\n      observer.observe(popper, {\n        childList: true,\n        subtree: true,\n        characterData: true\n      });\n      refData._mutationObserver = observer;\n    }\n  } else {\n    refData.popperInstance.update();\n\n    if (!followCursor || Browser.touch) {\n      refData.popperInstance.enableEventListeners();\n    }\n  }\n\n  // Since touch is determined dynamically, followCursor setting\n  // is set on mount\n  if (followCursor && !Browser.touch) {\n    el.addEventListener('mousemove', followCursorHandler);\n    refData.popperInstance.disableEventListeners();\n  }\n}\n\n/**\n* Updates a popper's position on each animation frame to make it stick to a moving element\n* @param {Object} refData\n*/\nfunction makeSticky(refData) {\n  var popper = refData.popper,\n      popperInstance = refData.popperInstance,\n      stickyDuration = refData.settings.stickyDuration;\n\n\n  var applyTransitionDuration = function applyTransitionDuration() {\n    return popper.style[prefix('transitionDuration')] = stickyDuration + 'ms';\n  };\n\n  var removeTransitionDuration = function removeTransitionDuration() {\n    return popper.style[prefix('transitionDuration')] = '';\n  };\n\n  var updatePosition = function updatePosition() {\n    popperInstance && popperInstance.scheduleUpdate();\n\n    applyTransitionDuration();\n\n    isVisible(popper) ? window.requestAnimationFrame(updatePosition) : removeTransitionDuration();\n  };\n\n  // Wait until Popper's position has been updated initially\n  queueExecution(updatePosition);\n}\n\n/**\n* Returns an object of settings to override global settings\n* @param {Element} el - the tooltipped element\n* @param {Object} instanceSettings\n* @return {Object} - individual settings\n*/\nfunction getIndividualSettings(el, instanceSettings) {\n  var settings = DefaultsKeys.reduce(function (acc, key) {\n    var val = el.getAttribute('data-' + key.toLowerCase()) || instanceSettings[key];\n\n    // Convert strings to booleans\n    if (val === 'false') val = false;\n    if (val === 'true') val = true;\n\n    // Convert number strings to true numbers\n    if (isFinite(val) && !isNaN(parseFloat(val))) {\n      val = parseFloat(val);\n    }\n\n    // Convert array strings to actual arrays\n    if (typeof val === 'string' && val.trim().charAt(0) === '[') {\n      val = JSON.parse(val);\n    }\n\n    acc[key] = val;\n\n    return acc;\n  }, {});\n\n  return _extends$1({}, instanceSettings, settings);\n}\n\n/**\n* Creates a popper element then returns it\n* @param {Number} id - the popper id\n* @param {String} title - the tooltip's `title` attribute\n* @param {Object} settings - individual settings\n* @return {Element} - the popper element\n*/\nfunction createPopperElement(id, title, settings) {\n  var position = settings.position,\n      distance = settings.distance,\n      arrow = settings.arrow,\n      animateFill = settings.animateFill,\n      inertia = settings.inertia,\n      animation = settings.animation,\n      arrowSize = settings.arrowSize,\n      size = settings.size,\n      theme = settings.theme,\n      html = settings.html,\n      zIndex = settings.zIndex,\n      interactive = settings.interactive;\n\n\n  var popper = document.createElement('div');\n  popper.setAttribute('class', 'tippy-popper');\n  popper.setAttribute('role', 'tooltip');\n  popper.setAttribute('aria-hidden', 'true');\n  popper.setAttribute('id', 'tippy-tooltip-' + id);\n  popper.style.zIndex = zIndex;\n\n  var tooltip = document.createElement('div');\n  tooltip.setAttribute('class', 'tippy-tooltip tippy-tooltip--' + size + ' leave');\n  tooltip.setAttribute('data-animation', animation);\n\n  theme.split(' ').forEach(function (t) {\n    tooltip.classList.add(t + '-theme');\n  });\n\n  if (arrow) {\n    // Add an arrow\n    var _arrow = document.createElement('div');\n    _arrow.setAttribute('class', 'arrow-' + arrowSize);\n    _arrow.setAttribute('x-arrow', '');\n    tooltip.appendChild(_arrow);\n  }\n\n  if (animateFill) {\n    // Create animateFill circle element for animation\n    tooltip.setAttribute('data-animatefill', '');\n    var circle = document.createElement('div');\n    circle.setAttribute('class', 'leave');\n    circle.setAttribute('x-circle', '');\n    tooltip.appendChild(circle);\n  }\n\n  if (inertia) {\n    // Change transition timing function cubic bezier\n    tooltip.setAttribute('data-inertia', '');\n  }\n\n  if (interactive) {\n    tooltip.setAttribute('data-interactive', '');\n  }\n\n  // Tooltip content (text or HTML)\n  var content = document.createElement('div');\n  content.setAttribute('class', 'tippy-tooltip-content');\n\n  if (html) {\n    var templateId = void 0;\n\n    if (html instanceof Element) {\n      content.appendChild(html);\n      templateId = '#' + html.id || 'tippy-html-template';\n    } else {\n      content.innerHTML = document.getElementById(html.replace('#', '')).innerHTML;\n      templateId = html;\n    }\n\n    popper.classList.add('html-template');\n    interactive && popper.setAttribute('tabindex', '-1');\n    tooltip.setAttribute('data-template-id', templateId);\n  } else {\n    content.innerHTML = title;\n  }\n\n  // Init distance. Further updates are made in the popper instance's `onUpdate()` method\n  tooltip.style[getCorePlacement(position)] = getOffsetDistanceInPx(distance);\n\n  tooltip.appendChild(content);\n  popper.appendChild(tooltip);\n\n  return popper;\n}\n\n/**\n* Creates a trigger\n* @param {Object} event - the custom event specified in the `trigger` setting\n* @param {Element} el - tooltipped element\n* @param {Object} handlers - the handlers for each listener\n* @param {Boolean} touchHold\n* @return {Array} - array of listener objects\n*/\nfunction createTrigger(event, el, handlers, touchHold) {\n  var listeners = [];\n\n  if (event === 'manual') return listeners;\n\n  // Enter\n  el.addEventListener(event, handlers.handleTrigger);\n  listeners.push({\n    event: event,\n    handler: handlers.handleTrigger\n  });\n\n  // Leave\n  if (event === 'mouseenter') {\n    if (Browser.SUPPORTS_TOUCH && touchHold) {\n      el.addEventListener('touchstart', handlers.handleTrigger);\n      listeners.push({\n        event: 'touchstart',\n        handler: handlers.handleTrigger\n      });\n      el.addEventListener('touchend', handlers.handleMouseleave);\n      listeners.push({\n        event: 'touchend',\n        handler: handlers.handleMouseleave\n      });\n    }\n\n    el.addEventListener('mouseleave', handlers.handleMouseleave);\n    listeners.push({\n      event: 'mouseleave',\n      handler: handlers.handleMouseleave\n    });\n  }\n\n  if (event === 'focus') {\n    el.addEventListener('blur', handlers.handleBlur);\n    listeners.push({\n      event: 'blur',\n      handler: handlers.handleBlur\n    });\n  }\n\n  return listeners;\n}\n\n/**\n* Determines if the mouse's cursor is outside the interactive border\n* @param {MouseEvent} event\n* @param {Element} popper\n* @param {Object} settings\n* @return {Boolean}\n*/\nfunction cursorIsOutsideInteractiveBorder(event, popper, settings) {\n  if (!popper.getAttribute('x-placement')) return true;\n\n  var x = event.clientX,\n      y = event.clientY;\n  var interactiveBorder = settings.interactiveBorder,\n      distance = settings.distance;\n\n\n  var rect = popper.getBoundingClientRect();\n  var corePosition = getCorePlacement(popper.getAttribute('x-placement'));\n  var borderWithDistance = interactiveBorder + distance;\n\n  var exceeds = {\n    top: rect.top - y > interactiveBorder,\n    bottom: y - rect.bottom > interactiveBorder,\n    left: rect.left - x > interactiveBorder,\n    right: x - rect.right > interactiveBorder\n  };\n\n  switch (corePosition) {\n    case 'top':\n      exceeds.top = rect.top - y > borderWithDistance;\n      break;\n    case 'bottom':\n      exceeds.bottom = y - rect.bottom > borderWithDistance;\n      break;\n    case 'left':\n      exceeds.left = rect.left - x > borderWithDistance;\n      break;\n    case 'right':\n      exceeds.right = x - rect.right > borderWithDistance;\n      break;\n  }\n\n  return exceeds.top || exceeds.bottom || exceeds.left || exceeds.right;\n}\n\n/**\n* Returns relevant listener callbacks for each ref\n* @param {Element} el\n* @param {Element} popper\n* @param {Object} settings\n* @return {Object} - relevant listener handlers\n*/\nfunction getEventListenerHandlers(el, popper, settings) {\n  var _this = this;\n\n  var position = settings.position,\n      delay = settings.delay,\n      duration = settings.duration,\n      interactive = settings.interactive,\n      interactiveBorder = settings.interactiveBorder,\n      distance = settings.distance,\n      hideOnClick = settings.hideOnClick,\n      trigger = settings.trigger,\n      touchHold = settings.touchHold,\n      touchWait = settings.touchWait;\n\n\n  var showDelay = void 0,\n      hideDelay = void 0;\n\n  var clearTimeouts = function clearTimeouts() {\n    clearTimeout(showDelay);\n    clearTimeout(hideDelay);\n  };\n\n  var _show = function _show() {\n    clearTimeouts();\n\n    // Not hidden. For clicking when it also has a `focus` event listener\n    if (isVisible(popper)) return;\n\n    var _delay = Array.isArray(delay) ? delay[0] : delay;\n\n    if (delay) {\n      showDelay = setTimeout(function () {\n        return _this.show(popper);\n      }, _delay);\n    } else {\n      _this.show(popper);\n    }\n  };\n\n  var show = function show(event) {\n    return _this.callbacks.wait ? _this.callbacks.wait.call(popper, _show, event) : _show();\n  };\n\n  var hide = function hide() {\n    clearTimeouts();\n\n    var _delay = Array.isArray(delay) ? delay[1] : delay;\n\n    if (delay) {\n      hideDelay = setTimeout(function () {\n        return _this.hide(popper);\n      }, _delay);\n    } else {\n      _this.hide(popper);\n    }\n  };\n\n  var handleTrigger = function handleTrigger(event) {\n    var mouseenterTouch = event.type === 'mouseenter' && Browser.SUPPORTS_TOUCH && Browser.touch;\n\n    if (mouseenterTouch && touchHold) return;\n\n    // Toggle show/hide when clicking click-triggered tooltips\n    var isClick = event.type === 'click';\n    var isNotPersistent = hideOnClick !== 'persistent';\n\n    isClick && isVisible(popper) && isNotPersistent ? hide() : show(event);\n\n    if (mouseenterTouch && Browser.iOS() && el.click) {\n      el.click();\n    }\n  };\n\n  var handleMouseleave = function handleMouseleave(event) {\n\n    // Don't fire 'mouseleave', use the 'touchend'\n    if (event.type === 'mouseleave' && Browser.SUPPORTS_TOUCH && Browser.touch && touchHold) {\n      return;\n    }\n\n    if (interactive) {\n      // Temporarily handle mousemove to check if the mouse left somewhere\n      // other than its popper\n      var handleMousemove = function handleMousemove(event) {\n\n        var triggerHide = function triggerHide() {\n          document.body.removeEventListener('mouseleave', hide);\n          document.removeEventListener('mousemove', handleMousemove);\n          hide();\n        };\n\n        var closestTooltippedEl = closest(event.target, Selectors.TOOLTIPPED_EL);\n\n        var isOverPopper = closest(event.target, Selectors.POPPER) === popper;\n        var isOverEl = closestTooltippedEl === el;\n        var isClickTriggered = trigger.indexOf('click') !== -1;\n        var isOverOtherTooltippedEl = closestTooltippedEl && closestTooltippedEl !== el;\n\n        if (isOverOtherTooltippedEl) {\n          return triggerHide();\n        }\n\n        if (isOverPopper || isOverEl || isClickTriggered) return;\n\n        if (cursorIsOutsideInteractiveBorder(event, popper, settings)) {\n          triggerHide();\n        }\n      };\n\n      document.body.addEventListener('mouseleave', hide);\n      document.addEventListener('mousemove', handleMousemove);\n\n      return;\n    }\n\n    // If it's not interactive, just hide it\n    hide();\n  };\n\n  var handleBlur = function handleBlur(event) {\n    // Ignore blur on touch devices, if there is no `relatedTarget`, hide\n    // If the related target is a popper, ignore\n    if (!event.relatedTarget || Browser.touch) return;\n    if (closest(event.relatedTarget, Selectors.POPPER)) return;\n\n    hide();\n  };\n\n  return {\n    handleTrigger: handleTrigger,\n    handleMouseleave: handleMouseleave,\n    handleBlur: handleBlur\n  };\n}\n\nvar idCounter = 1;\n\n/**\n* Creates tooltips for all el elements that match the instance's selector\n* @param {Element[]} els\n* @return {Object[]} Array of ref data objects\n*/\nfunction createTooltips(els) {\n  var _this = this;\n\n  return els.reduce(function (a, el) {\n    var id = idCounter;\n\n    var settings = _this.settings.performance ? _this.settings : getIndividualSettings(el, _this.settings);\n    // animateFill is disabled if an arrow is true\n    if (settings.arrow) settings.animateFill = false;\n\n    var html = settings.html,\n        trigger = settings.trigger,\n        touchHold = settings.touchHold;\n\n\n    var title = el.getAttribute('title');\n    if (!title && !html) return a;\n\n    el.setAttribute('data-tooltipped', '');\n    el.setAttribute('aria-describedby', 'tippy-tooltip-' + id);\n    removeTitle(el);\n\n    var popper = createPopperElement(id, title, settings);\n    var handlers = getEventListenerHandlers.call(_this, el, popper, settings);\n\n    var listeners = [];\n\n    trigger.trim().split(' ').forEach(function (event) {\n      return listeners = listeners.concat(createTrigger(event, el, handlers, touchHold));\n    });\n\n    a.push({\n      id: id,\n      el: el,\n      popper: popper,\n      settings: settings,\n      listeners: listeners,\n      tippyInstance: _this\n    });\n\n    idCounter++;\n\n    return a;\n  }, []);\n}\n\n/* Utility functions */\n/* Core library functions */\n/**\n* @param {String|Element|Element[]} selector\n* @param {Object} settings (optional) - the object of settings to be applied to the instance\n*/\n\nvar Tippy = function () {\n  function Tippy(selector) {\n    var settings = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    classCallCheck$1(this, Tippy);\n\n    // Use default browser tooltip on unsupported browsers\n    if (!Browser.SUPPORTED) return;\n\n    // DOM is presumably mostly ready (for document.body) by instantiation time\n    init();\n\n    this.state = {\n      destroyed: false\n    };\n\n    this.selector = selector;\n\n    this.settings = _extends$1({}, Defaults, settings);\n\n    // DEPRECATION: `on` prefixed callbacks are now preferred over non-\n    // as it better indicates it's a callback function\n    this.callbacks = {\n      wait: settings.wait,\n      show: settings.onShow || settings.show || noop,\n      shown: settings.onShown || settings.shown || noop,\n      hide: settings.onHide || settings.hide || noop,\n      hidden: settings.onHidden || settings.hidden || noop\n    };\n\n    this.store = createTooltips.call(this, getArrayOfElements(selector));\n    Store.push.apply(Store, this.store);\n  }\n\n  /**\n  * Returns the reference element's popper element\n  * @param {Element} el\n  * @return {Element}\n  */\n\n\n  createClass$1(Tippy, [{\n    key: 'getPopperElement',\n    value: function getPopperElement(el) {\n      try {\n        return find(this.store, function (refData) {\n          return refData.el === el;\n        }).popper;\n      } catch (e) {\n        console.error('[getPopperElement]: Element passed as the argument does not exist in the instance');\n      }\n    }\n\n    /**\n    * Returns a popper's reference element\n    * @param {Element} popper\n    * @return {Element}\n    */\n\n  }, {\n    key: 'getReferenceElement',\n    value: function getReferenceElement(popper) {\n      try {\n        return find(this.store, function (refData) {\n          return refData.popper === popper;\n        }).el;\n      } catch (e) {\n        console.error('[getReferenceElement]: Popper passed as the argument does not exist in the instance');\n      }\n    }\n\n    /**\n    * Returns the reference data object from either the reference element or popper element\n    * @param {Element} x (reference element or popper)\n    * @return {Object}\n    */\n\n  }, {\n    key: 'getReferenceData',\n    value: function getReferenceData(x) {\n      return find(this.store, function (refData) {\n        return refData.el === x || refData.popper === x;\n      });\n    }\n\n    /**\n    * Shows a popper\n    * @param {Element} popper\n    * @param {Number} customDuration (optional)\n    */\n\n  }, {\n    key: 'show',\n    value: function show(popper, customDuration) {\n      var _this = this;\n\n      if (this.state.destroyed) return;\n\n      this.callbacks.show.call(popper);\n\n      var refData = find(this.store, function (refData) {\n        return refData.popper === popper;\n      });\n      var tooltip = popper.querySelector(Selectors.TOOLTIP);\n      var circle = popper.querySelector(Selectors.CIRCLE);\n      var content = popper.querySelector(Selectors.CONTENT);\n\n      var el = refData.el,\n          _refData$settings = refData.settings,\n          appendTo = _refData$settings.appendTo,\n          sticky = _refData$settings.sticky,\n          interactive = _refData$settings.interactive,\n          followCursor = _refData$settings.followCursor,\n          flipDuration = _refData$settings.flipDuration,\n          duration = _refData$settings.duration,\n          dynamicTitle = _refData$settings.dynamicTitle;\n\n\n      if (dynamicTitle) {\n        var title = el.getAttribute('title');\n        if (title) {\n          content.innerHTML = title;\n          removeTitle(el);\n        }\n      }\n\n      var _duration = customDuration !== undefined ? customDuration : Array.isArray(duration) ? duration[0] : duration;\n\n      // Remove transition duration (prevent a transition when popper changes position)\n      applyTransitionDuration([popper, tooltip, circle], 0);\n\n      mountPopper(refData);\n\n      popper.style.visibility = 'visible';\n      popper.setAttribute('aria-hidden', 'false');\n\n      // Wait for popper to update position and alter x-placement\n      queueExecution(function () {\n        if (!isVisible(popper)) return;\n\n        // Sometimes the arrow will not be in the correct position,\n        // force another update\n        if (!followCursor || Browser.touch) {\n          refData.popperInstance.update();\n        }\n\n        // Re-apply transition durations\n        applyTransitionDuration([tooltip, circle], _duration);\n        if (!followCursor || Browser.touch) {\n          applyTransitionDuration([popper], flipDuration);\n        }\n\n        // Make content fade out a bit faster than the tooltip if `animateFill`\n        if (circle) content.style.opacity = 1;\n\n        // Interactive tooltips receive a class of 'active'\n        interactive && el.classList.add('active');\n\n        // Update popper's position on every animation frame\n        sticky && makeSticky(refData);\n\n        // Repaint/reflow is required for CSS transition when appending\n        triggerReflow(tooltip, circle);\n\n        modifyClassList([tooltip, circle], function (list) {\n          list.contains('tippy-notransition') && list.remove('tippy-notransition');\n          list.remove('leave');\n          list.add('enter');\n        });\n\n        // Wait for transitions to complete\n        onTransitionEnd(refData, _duration, function () {\n          if (!isVisible(popper) || refData._onShownFired) return;\n\n          // Focus interactive tooltips only\n          interactive && popper.focus();\n\n          // Remove transitions from tooltip\n          tooltip.classList.add('tippy-notransition');\n\n          // Prevents shown() from firing more than once from early transition cancellations\n          refData._onShownFired = true;\n\n          _this.callbacks.shown.call(popper);\n        });\n      });\n    }\n\n    /**\n    * Hides a popper\n    * @param {Element} popper\n    * @param {Number} customDuration (optional)\n    */\n\n  }, {\n    key: 'hide',\n    value: function hide(popper, customDuration) {\n      var _this2 = this;\n\n      if (this.state.destroyed) return;\n\n      this.callbacks.hide.call(popper);\n\n      var refData = find(this.store, function (refData) {\n        return refData.popper === popper;\n      });\n      var tooltip = popper.querySelector(Selectors.TOOLTIP);\n      var circle = popper.querySelector(Selectors.CIRCLE);\n      var content = popper.querySelector(Selectors.CONTENT);\n\n      var el = refData.el,\n          _refData$settings2 = refData.settings,\n          appendTo = _refData$settings2.appendTo,\n          sticky = _refData$settings2.sticky,\n          interactive = _refData$settings2.interactive,\n          followCursor = _refData$settings2.followCursor,\n          html = _refData$settings2.html,\n          trigger = _refData$settings2.trigger,\n          duration = _refData$settings2.duration;\n\n\n      var _duration = customDuration !== undefined ? customDuration : Array.isArray(duration) ? duration[1] : duration;\n\n      refData._onShownFired = false;\n      interactive && el.classList.remove('active');\n\n      popper.style.visibility = 'hidden';\n      popper.setAttribute('aria-hidden', 'true');\n\n      applyTransitionDuration([tooltip, circle, circle ? content : null], _duration);\n\n      if (circle) content.style.opacity = 0;\n\n      modifyClassList([tooltip, circle], function (list) {\n        list.contains('tippy-tooltip') && list.remove('tippy-notransition');\n        list.remove('enter');\n        list.add('leave');\n      });\n\n      // Re-focus click-triggered html elements\n      // and the tooltipped element IS in the viewport (otherwise it causes unsightly scrolling\n      // if the tooltip is closed and the element isn't in the viewport anymore)\n      if (html && trigger.indexOf('click') !== -1 && elementIsInViewport(el)) {\n        el.focus();\n      }\n\n      // Wait for transitions to complete\n      onTransitionEnd(refData, _duration, function () {\n        if (isVisible(popper) || !appendTo.contains(popper)) return;\n\n        el.removeEventListener('mousemove', followCursorHandler);\n\n        refData.popperInstance.disableEventListeners();\n\n        appendTo.removeChild(popper);\n\n        _this2.callbacks.hidden.call(popper);\n      });\n    }\n\n    /**\n    * Updates a popper with new content\n    * @param {Element} popper\n    */\n\n  }, {\n    key: 'update',\n    value: function update(popper) {\n      if (this.state.destroyed) return;\n\n      var refData = find(this.store, function (refData) {\n        return refData.popper === popper;\n      });\n      var content = popper.querySelector(Selectors.CONTENT);\n      var el = refData.el,\n          html = refData.settings.html;\n\n\n      if (html instanceof Element) {\n        console.warn('Aborted: update() should not be used if `html` is a DOM element');\n        return;\n      }\n\n      content.innerHTML = html ? document.getElementById(html.replace('#', '')).innerHTML : el.getAttribute('title') || el.getAttribute('data-original-title');\n\n      if (!html) removeTitle(el);\n    }\n\n    /**\n    * Destroys a popper\n    * @param {Element} popper\n    * @param {Boolean} _isLast - private param used by destroyAll to optimize\n    */\n\n  }, {\n    key: 'destroy',\n    value: function destroy(popper, _isLast) {\n      var _this3 = this;\n\n      if (this.state.destroyed) return;\n\n      var refData = find(this.store, function (refData) {\n        return refData.popper === popper;\n      });\n\n      var el = refData.el,\n          popperInstance = refData.popperInstance,\n          listeners = refData.listeners,\n          _mutationObserver = refData._mutationObserver;\n\n      // Ensure the popper is hidden\n\n      if (isVisible(popper)) {\n        this.hide(popper, 0);\n      }\n\n      // Remove Tippy-only event listeners from tooltipped element\n      listeners.forEach(function (listener) {\n        return el.removeEventListener(listener.event, listener.handler);\n      });\n\n      // Restore original title\n      el.setAttribute('title', el.getAttribute('data-original-title'));\n\n      el.removeAttribute('data-original-title');\n      el.removeAttribute('data-tooltipped');\n      el.removeAttribute('aria-describedby');\n\n      popperInstance && popperInstance.destroy();\n      _mutationObserver && _mutationObserver.disconnect();\n\n      // Remove from store\n      Store.splice(findIndex(Store, function (refData) {\n        return refData.popper === popper;\n      }), 1);\n\n      // Ensure filter is called only once\n      if (_isLast === undefined || _isLast) {\n        this.store = Store.filter(function (refData) {\n          return refData.tippyInstance === _this3;\n        });\n      }\n    }\n\n    /**\n    * Destroys all tooltips created by the instance\n    */\n\n  }, {\n    key: 'destroyAll',\n    value: function destroyAll() {\n      var _this4 = this;\n\n      if (this.state.destroyed) return;\n\n      var storeLength = this.store.length;\n\n      this.store.forEach(function (_ref, index) {\n        var popper = _ref.popper;\n\n        _this4.destroy(popper, index === storeLength - 1);\n      });\n\n      this.store = null;\n      this.state.destroyed = true;\n    }\n  }]);\n  return Tippy;\n}();\n\nfunction tippy$2(selector, settings) {\n  return new Tippy(selector, settings);\n}\n\ntippy$2.Browser = Browser;\ntippy$2.Defaults = Defaults;\ntippy$2.disableDynamicInputDetection = function () {\n  return Browser.dynamicInputDetection = false;\n};\ntippy$2.enableDynamicInputDetection = function () {\n  return Browser.dynamicInputDetection = true;\n};\n\nreturn tippy$2;\n\n})));\n","import FormValidation from '../formValidation/formValidation';\nimport FormTooltip from '../formTooltip/formTooltip';\n\n/**\n * Creates a new Form class\n */\nclass Form {\n    /**\n     * Constructor\n     */\n    constructor() {\n        this._setupListeners = this._setupListeners.bind(this);\n        this._validate = this._validate.bind(this);\n        this._getData = this._getData.bind(this);\n        this._setData = this._setData.bind(this);\n        this._submit = this._submit.bind(this);\n        this._request = this._request.bind(this);\n        this._success = this._success.bind(this);\n        this._error = this._error.bind(this);\n        this._progress = this._progress.bind(this);\n        this._toggleLoading = this._toggleLoading.bind(this);\n        this._resetResult = this._resetResult.bind(this);\n        this._resetForm = this._resetForm.bind(this);\n        this._getFormSettings = this._getFormSettings.bind(this);\n        this._resetErrors = this._resetErrors.bind(this);\n        this._setErrors = this._setErrors.bind(this);\n\n        this.form = document.querySelector('#myForm');\n        this.submitBtn = document.querySelector('#submitButton');\n        this.resultContainer = document.querySelector('#resultContainer');\n        this.rules = {\n            fio: {\n                fullName: true\n            },\n            email: {\n                email: true\n            },\n            phone: {\n                phone: true\n            }\n        };\n        this.settings = {\n            domains: ['ya.ru', 'yandex.ru', 'yandex.ua', 'yandex.by', 'yandex.kz', 'yandex.com'],\n            phoneSumLimit: 30\n        };\n        this.fieldsFilter = ['fio', 'email', 'phone'];\n\n        this._setupListeners();\n        this.formValidation = new FormValidation({\n            form: this.form,\n            rules: this.rules,\n            settings: this.settings\n        });\n        this.formTooltip = new FormTooltip();\n\n        return {\n            validate: this._validate,\n            getData: this._getData,\n            setData: this._setData,\n            submit: this._submit\n        };\n    }\n\n    /**\n     * Add events listeners\n     * @private\n     */\n    _setupListeners() {\n        this.submitBtn.addEventListener('click', event => {\n            event.preventDefault();\n\n            this._submit();\n        });\n    }\n\n    /**\n     * Validate form\n     * @returns {Object}\n     * @private\n     */\n    _validate() {\n        return this.formValidation.validate();\n    }\n\n    /**\n     * Retrieve data from inputs\n     * @returns {Object} data\n     * @private\n     */\n    _getData() {\n        const inputs = this.form.querySelectorAll('input');\n        const data = {};\n\n        inputs.forEach((input, index) => {\n            const name = input.name || `input-${index}`;\n            const value = input.value || '';\n\n            data[name] = value;\n        });\n\n        return data;\n    }\n\n    /**\n     * Set data for inputs\n     * @param {Object} data\n     * @private\n     */\n    _setData(data) {\n        for (let inputName in data) {\n\n            if (this.fieldsFilter.indexOf(inputName) !== -1) {\n\n                const input = this.form.querySelector(`[name=${inputName}]`);\n\n                if (input) {\n\n                    const value = data[inputName];\n\n                    input.value = value;\n\n                }\n\n            }\n        }\n    }\n\n    /**\n     * Submit form\n     * @private\n     */\n    _submit() {\n        this._resetErrors();\n        const form = this._validate();\n\n        if (form.isValid) {\n\n            const options = this._getFormSettings();\n\n            this._resetResult();\n\n            this._toggleLoading();\n\n            this._request(options);\n\n        } else {\n\n            this._setErrors(form.errorFields);\n\n        }\n    }\n\n    /**\n     * Send request to server\n     * @param {Object} options\n     * @private\n     */\n    _request(options) {\n        if (!options.url) {\n\n            /*eslint-disable no-console*/\n            console.log('Form action attribute is not specified!');\n            /*eslint-enable no-console*/\n\n            return false;\n\n        }\n\n        const req = fetch(\n            options.url,\n            options.settings\n        );\n\n        req\n            .then(blob => blob.json())\n            .then(data => {\n                const method = data.status ? `_${data.status}` : '';\n\n                if (!method) {\n\n                    /*eslint-disable no-console*/\n                    console.log('Can not identify response status!');\n                    /*eslint-enable no-console*/\n\n                }\n\n                if (this[method]) {\n\n                    this[method](data);\n\n                } else {\n\n                    /*eslint-disable no-console*/\n                    console.log('Can not find response method!');\n                    /*eslint-enable no-console*/\n\n                }\n            })\n            .catch(error => {\n                /*eslint-disable no-console*/\n                console.log(error);\n                /*eslint-enable no-console*/\n            });\n    }\n\n    /**\n     * Handle success response\n     * @param {Object} data\n     * @private\n     */\n    _success(data) {\n        data.text = 'Success';\n\n        this._resetResult();\n        this.resultContainer.classList.add('success');\n        this.resultContainer.textContent = data.text;\n        this._toggleLoading();\n    }\n\n    /**\n     * Handle error response\n     * @param {Object} data\n     * @private\n     */\n    _error(data) {\n        this._resetResult();\n        this.resultContainer.classList.add('error');\n        this.resultContainer.textContent = data.reason;\n        this._toggleLoading();\n    }\n\n    /**\n     * Handle progress response\n     * @param {Object} data\n     * @private\n     */\n    _progress(data) {\n        data.timeout = data.timeout ? data.timeout : 3000;\n\n        this.resultContainer.classList.add('progress');\n\n        setTimeout(() => {\n            const options = this._getFormSettings();\n\n            this._request(options);\n        }, data.timeout);\n    }\n\n    /**\n     * Toggle loading state for form element\n     * @private\n     */\n    _toggleLoading() {\n        this.form.classList.toggle('loading');\n    }\n\n    /**\n     * Reset result container state\n     * @private\n     */\n    _resetResult() {\n        this.resultContainer.classList.remove('success', 'error', 'progress');\n        this.resultContainer.textContent = '';\n    }\n\n    /**\n     * Reset form fields\n     * @private\n     */\n    _resetForm() {\n        this.form.reset();\n    }\n\n    /**\n     * Get form settings\n     * @returns {Object}\n     * @private\n     */\n    _getFormSettings() {\n        return {\n            url: this.form.action,\n            settings: {\n                method: this.form.method ? this.form.method : 'get'\n            }\n        };\n    }\n\n    /**\n     * Reset error state for input\n     * @private\n     */\n    _resetErrors() {\n        const errorInputs = this.form.querySelectorAll('.error');\n\n        if (errorInputs) {\n\n            errorInputs.forEach(input => input.classList.remove('error'));\n\n        }\n    }\n\n    /**\n     * Set error state for input\n     * @param {Array} fieldNames\n     * @private\n     */\n    _setErrors(fieldNames) {\n        fieldNames.forEach(fieldName => {\n            const field = this.form.querySelector(`[name=${fieldName}]`);\n\n            if (field) {\n\n                field.classList.add('error');\n\n            }\n        });\n    }\n}\n\n/**\n * Init Form\n * @returns {Form}\n */\nconst init = () => {\n    return new Form();\n};\n\nexport default {init};\n","import tippy from 'tippy.js';\n\n/**\n * Creates a new FormTooltip class\n */\nclass FormTooltip {\n    /**\n     * Constructor\n     */\n    constructor() {\n        this.init = this.init.bind(this);\n\n        this.init();\n    }\n\n    /**\n     * Init tooltips\n     */\n    init() {\n        const tooltips = document.querySelectorAll('.formTooltip__content');\n\n        tooltips.forEach(tooltip => {\n            tippy(tooltip, {\n                arrow: true,\n                trigger: 'click',\n                size: 'small'\n            });\n        });\n    }\n}\n\nexport default FormTooltip;\n","/**\n * Creates a new FormValidation class\n */\nclass FormValidation {\n    /**\n     * Constructor\n     * @param {Object} options\n     * @returns {Object}\n     */\n    constructor(options) {\n        this._checkOptions = this._checkOptions.bind(this);\n        this._fullName = this._fullName.bind(this);\n        this._email = this._email.bind(this);\n        this._phone = this._phone.bind(this);\n        this._validate = this._validate.bind(this);\n\n        this.options = this._checkOptions(options);\n        this.methods = {\n            fullName: this._fullName,\n            email: this._email,\n            phone: this._phone\n        };\n\n        return this.options ? {validate: this._validate} : {};\n    }\n\n    /**\n     * Check options\n     * @param {Object} options\n     * @returns {Object} options\n     * @private\n     */\n    _checkOptions(options) {\n        if (options.form instanceof Element === false) {\n\n            /*eslint-disable no-console*/\n            console.log('Form must be html element!');\n            /*eslint-enable no-console*/\n\n            return false;\n\n        }\n\n        options.rules = options.rules ? options.rules : {};\n        options.settings.domains = options.settings.domains ? options.settings.domains : [];\n        options.settings.phoneSumLimit = options.settings.phoneSumLimit ? options.settings.phoneSumLimit : 0;\n\n        return options;\n    }\n\n    /**\n     * Check full name\n     * @param {String} value\n     * @returns {Boolean}\n     * @private\n     */\n    _fullName(value) {\n        return /^([\\S]+)\\s([\\S]+)\\s([\\S]+)/.test(value);\n    }\n\n    /**\n     * Check email\n     * @param {String} value\n     * @returns {Boolean}\n     * @private\n     */\n    _email(value) {\n        const domains = this.options.settings.domains;\n        const idx = value.lastIndexOf('@');\n        const domain = idx > -1 ? value.slice(idx + 1) : '';\n\n        if (domains.indexOf(domain) === -1) {\n\n            return false;\n\n        }\n\n        return /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test(value);\n    }\n\n    /**\n     * Check phone\n     * @param {String} value\n     * @returns {Boolean}\n     * @private\n     */\n    _phone(value) {\n        const sumLimit = this.options.settings.phoneSumLimit;\n        const digits = value.replace(/[^/\\d]/g, '');\n        const sum = digits.split('').reduce((sum, number) => sum + parseInt(number), 0);\n\n        if (sum > sumLimit) {\n\n            return false;\n\n        }\n\n        return /^\\+7\\(([0-9]{3})\\)([0-9]{3})[-]([0-9]{2})[-]([0-9]{2})$/.test(value);\n    }\n\n    /**\n     * Validate fields\n     * @returns {Object} validationResult\n     * @private\n     */\n    _validate() {\n        const validationResult = {\n            isValid: false,\n            errorFields: []\n        };\n\n        const form = this.options.form;\n        const rules = this.options.rules;\n        const methods = this.methods;\n\n        for (const fieldName in rules) {\n            if (rules.hasOwnProperty(fieldName)) {\n\n                const field = form.querySelector(`[name=${fieldName}]`);\n                const value = field.value;\n                const fieldRules = rules[fieldName];\n\n                for (const rule in fieldRules) {\n                    if (fieldRules.hasOwnProperty(rule) && fieldRules[rule]) {\n\n                        if (methods[rule]) {\n\n                            const result = methods[rule](value);\n\n                            if (!result) {\n\n                                validationResult.errorFields.push(fieldName);\n\n                            }\n\n                        }\n\n                    }\n                }\n\n            }\n        }\n\n        validationResult.isValid = validationResult.errorFields.length === 0;\n\n        return validationResult;\n    }\n}\n\nexport default FormValidation;\n","import Form from '../blocks/form/form';\n\n/**\n * Init form\n */\nconst form = Form.init();\n\n/**\n * Export form methods to the global scope\n */\nif (window) {\n\n    window.MyForm = {\n        validate: form.validate,\n        getData: form.getData,\n        setData: form.setData,\n        submit: form.submit\n    };\n\n}\n"]}